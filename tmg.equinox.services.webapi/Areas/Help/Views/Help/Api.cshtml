@model tmg.equinox.services.webapi.Areas.Help.Model.ApiDescriptor

@{
    ViewBag.Title = "ApiDetails";
    Layout = "~/Areas/Help/Views/Shared/_Layout.cshtml";
}

<div class="panel-body">
    <div class="panel-heading">
        @Html.ActionLink("Home", "Index")
    </div>
    <div class="panel-body">
        <div class="panel panel-default">
            <div class="panel-header-default">
                <label>@Html.ActionLink(Model.RelativePath, "Api", "Help", new { apiId = Url.Encode(Model.ID) }, null)</label>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-12 col-sm-12 col-xs-12 col-md-12">
                        <div class="col-lg-3 col-sm-3 col-xs-3 col-md-3">
                            Path
                        </div>
                        <div class="col-lg-9 col-sm-9 col-xs-9 col-md-9">
                            <label>@Html.ActionLink(Model.RelativePath, "Api", "Help", new { apiId = Url.Encode(Model.ID) }, null)</label>
                        </div>
                    </div>
                    <div class="col-lg-12 col-sm-12 col-xs-12 col-md-12">
                        <div class="col-lg-3 col-sm-3 col-xs-3 col-md-3">
                            HttpMethod
                        </div>
                        <div class="col-lg-9 col-sm-9 col-xs-9 col-md-9">
                            @Model.HttpMethod
                        </div>
                    </div>
                    <div class="col-lg-12 col-sm-12 col-xs-12 col-md-12">
                        @if (Model.Parameters.Count() > 0)
                        {
                            <div class="panel panel-default">
                                <div class="panel-header-default">
                                    <label>Parameters</label>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-lg-3 col-sm-3 col-xs-3 col-md-3">
                                            <label>Name</label>
                                        </div>
                                        <div class="col-lg-3 col-sm-3 col-xs-3 col-md-3">
                                            <label>Data Type</label>
                                        </div>
                                        <div class="col-lg-3 col-sm-3 col-xs-3 col-md-3">
                                            <label>Is Required</label>
                                        </div>
                                    </div>
                                    @foreach (var item in Model.Parameters)
                                    {
                                        <div class="row">
                                            <div class="col-lg-3 col-sm-3 col-xs-3 col-md-3">
                                                @item.ParameterName
                                            </div>
                                            <div class="col-lg-3 col-sm-3 col-xs-3 col-md-3">
                                                @item.ParameterType
                                            </div>
                                            <div class="col-lg-3 col-sm-3 col-xs-3 col-md-3">
                                                @item.IsRequired
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                    <div class="col-lg-12 col-sm-12 col-xs-12 col-md-12">
                        <div class="col-lg-3 col-sm-3 col-xs-3 col-md-3">
                            Sample Request
                        </div>
                        <div class="col-lg-9 col-sm-9 col-xs-9 col-md-9">
                            <a href="@Model.RequestUrl">@Model.RequestUrl</a>
                        </div>
                    </div>
                    <div class="col-lg-12 col-sm-12 col-xs-12 col-md-12">
                        <div class="col-lg-3 col-sm-3 col-xs-3 col-md-3">
                            Return Type
                        </div>
                        <div class="col-lg-9 col-sm-9 col-xs-9 col-md-9">
                            @Model.ResponseType.ToString()
                        </div>
                    </div>
                    <div class="col-lg-12 col-sm-12 col-xs-12 col-md-12">
                        <div class="col-lg-3 col-sm-3 col-xs-3 col-md-3">
                            Output
                        </div>
                        <div class="col-lg-9 col-sm-9 col-xs-9 col-md-9">
                            <pre id="output">@Model.Output</pre>
                        </div>
                    </div>
                    @*<div class="col-lg-12 col-sm-12 col-xs-12 col-md-12">
                        <div class="right">
                            <button id="btncopyoutput" class="btn btn-default">Copy to Clipboard</button>
                        </div>
                    </div>*@
                </div>
            </div>
        </div>
    </div>
</div>
@*<script type="text/javascript">
    $.ready(function () {
        $("#btncopyoutput").click(function () {
            if (copyToClipboard($("#output"))) {
                alert('Output copied to your clip board. Please use Ctrl + V to paste it in editor');
            }
        });
    });

    function copyToClipboard(elem) {
        // create hidden text element, if it doesn't already exist
        var targetId = "_hiddenCopyText_";
        var isInput = elem.tagName === "INPUT" || elem.tagName === "TEXTAREA";
        var origSelectionStart, origSelectionEnd;
        if (isInput) {
            // can just use the original source element for the selection and copy
            target = elem;
            origSelectionStart = elem.selectionStart;
            origSelectionEnd = elem.selectionEnd;
        } else {
            // must use a temporary form element for the selection and copy
            target = document.getElementById(targetId);
            if (!target) {
                var target = document.createElement("textarea");
                target.style.position = "absolute";
                target.style.left = "-9999px";
                target.style.top = "0";
                target.id = targetId;
                document.body.appendChild(target);
            }
            target.textContent = elem.textContent;
        }
        // select the content
        var currentFocus = document.activeElement;
        target.focus();
        target.setSelectionRange(0, target.value.length);

        // copy the selection
        var succeed;
        try {
            succeed = document.execCommand("copy");
        } catch (e) {
            succeed = false;
        }
        // restore original focus
        if (currentFocus && typeof currentFocus.focus === "function") {
            currentFocus.focus();
        }

        if (isInput) {
            // restore prior selection
            elem.setSelectionRange(origSelectionStart, origSelectionEnd);
        } else {
            // clear temporary content
            target.textContent = "";
        }
        return succeed;
    }
</script>*@
