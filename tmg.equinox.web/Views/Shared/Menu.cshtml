@using System.Collections.Specialized
@using System.Configuration
@using Microsoft.AspNet.Identity;
@using System.Security.Claims;
@{
    var authenticationSectionCollection = (NameValueCollection)ConfigurationManager.GetSection("authenticationSection");
    ViewBag.UseAuthentication = Convert.ToBoolean(authenticationSectionCollection["UseAuthentication"]);
    ViewBag.DummyAuthenticationEnabled = Convert.ToBoolean(authenticationSectionCollection["DummyAuthenticationEnabled"]);
    var identity = (User.Identity as System.Security.Claims.ClaimsIdentity);
    var claims = identity.Claims;
    var claimPrinciple = (ClaimsPrincipal)User;
    string fullName = "";
    foreach (var claimIdentity in claimPrinciple.Identities)
    {
        if (!(claimIdentity is System.Security.Principal.WindowsIdentity))
        {
            if (claimIdentity is ClaimsIdentity)
            {
                claims = claimIdentity.Claims;
                identity = claimIdentity;
            }
        }
    }
    if (identity != null)
    {
        System.Security.Claims.ClaimsIdentity claimsIdentity = (identity as System.Security.Claims.ClaimsIdentity);
        var firstName = claimsIdentity.Claims.Where(x => x.Type.ToLower() == "firstname").FirstOrDefault();
        var lastName = claimsIdentity.Claims.Where(x => x.Type.ToLower() == "lastname").FirstOrDefault();
        if (firstName != null && lastName != null)
        {
            fullName = firstName.Value + " " + lastName.Value;
        }
    }

}
@{
    var environment = ConfigurationManager.AppSettings["Environment"] ?? "Development";
}
<div role="navigation">
    <ul id="menu" class="sidebar-menu tree" data-widget="tree">
        @if (claims != null)
        {
            if (claims.Any(c => c.Value.Trim().ToUpper() == "DASHBOARD"))
            {
                <li><a id="dashBoard" href="/DashBoard/Index" data-placement="bottom">Home</a></li>

            }
        }

        @if (claims != null)
        {
            if (claims.Any(c => c.Value.Trim().ToUpper() == "DESIGN"))
            {
                <li>
                    <a id="design" href="#" class="dropdown-toggle menugroup" data-toggle="dropdown" data-placement="bottom">
                        Design
                    </a>
                    <ul class="dropdown-menu">
                        <li class="submenu"><a href="/FormDesign/Index" id="formDesign">Document</a></li>
                        <li class="submenu"><a href="/FormDesignGroup/Index" id="formGroups">Folder</a></li>
                    </ul>
                </li>
                <li>
                    <a id="rulesmanager" href="~/RulesManager/Index" class="menugroup" data-target="#rulesManager" data-parent="#mainNavigation" data-toggle="tooltip" title="Rules Manager" data-placement="right">
                        <i class="material-icons">chrome_reader_mode</i>
                        <span class="nav-label">Rules Manager</span>
                        <span class="fa fa-angle-right pull-right"></span>
                    </a>
                </li>
            }
        }
        @if (claims != null)
        {
            if (claims.Any(c => c.Value.Trim().ToUpper() == "MASTERLIST"))
            {
                <li><a id="masterList" href="/FolderVersion/IndexML?tenantId=1" data-placement="bottom">Master List</a></li>
            }
        }


        @if (claims != null)
        {
            if (claims.Any(c => c.Value.Trim().ToUpper() == "PORTFOLIO"))
            {

                <li><a id="PortfolioSearch" href="/ConsumerAccount/PortfolioSearch">Portfolio</a></li>
            }
        }

        @if (claims != null)
            {
                if (claims.Any(c => c.Value.Trim().ToUpper() == "ACCOUNT"))
                {
                <li>
                    <a id="account" href="/ConsumerAccount/AccountSearch" class="dropdown-toggle menugroup" data-toggle="dropdown" data-placement="bottom">
                        Account
                    </a>
                    @*<ul class="dropdown-menu">
                        <li class="submenu"><a href="/ConsumerAccount/AccountSearch">Search</a></li>
                        <li class="submenu"><a href="/ConsumerAccount/ManageAccount">Manage</a></li>
                    </ul>*@
                </li>
            }
        }

        @if (claims != null)
        {
            if (claims.Any(c => c.Value.Trim().ToUpper() == "REPORT"))
            {

                <li><a id="ReportingCenter" href="/ReportingCenter/Index">Reporting Center</a></li>
                <!--<li><a id="Reporting" href="/DocumentCollateral/ViewReportTemplate">Collateral Engine</a></li>-->
            }
        }

        @if (claims != null)
        {
            if (claims.Any(c => c.Value.Trim().ToUpper() == "COLLATERAL"))
            {
                <li><a id="Reporting" href="/DocumentCollateral/ViewReportTemplate">Collateral Engine</a></li>
            }
        }

        @if (claims != null)
            {
                if (claims.Any(c => c.Value.Trim().ToUpper() == "SETTING"))
                {

                <li>
                    <a id="settings" href="#" class="dropdown-toggle menugroup" data-toggle="dropdown" data-placement="bottom">
                        Settings
                    </a>
                    <ul class="dropdown-menu">
                        @*@if (claims != null)
                            {
                                if (claims.Any(c => c.Value.Trim().ToUpper() == "GENERALSETTING"))
                                {
                            <li class="submenu">
                                <a href="/Settings/Index">General Settings</a>
                            </li>
                            }
                            }*@
                        @if (claims != null)
                        {
                            if (claims.Any(c => c.Value.Trim().ToUpper() == "WORKFLOWSETTING"))
                            {
                                <li class="submenu">
                                    <a href="/Settings/WorkFlowSettings">WorkFlow Settings</a>
                                </li>
                            }
                        }
                        @if (claims != null)
                        {
                            if (claims.Any(c => c.Value.Trim().ToUpper() == "USERMANAGEMENT"))
                            {
                                <li class="submenu">
                                    <a href="/Settings/UserManagementSettings">User Management Settings</a>
                                </li>
                            }
                        }

                    </ul>

                </li>
            }
        }
        @if (claims != null)
        {
            //if (claims.Any(c => c.Value.Trim().ToUpper() == "GLOBALUPDATE"))
            //{
                @*<li>
                    <a id="globalupdate" href="#" class="dropdown-toggle menugroup" data-toggle="dropdown" data-placement="bottom">
                        Global Update
                    </a>
                    <ul class="dropdown-menu">
                        <li class="submenu"><a href="/GlobalUpdate/ExistsingGUGrid">Global Update List</a></li>
                        <li class="dropdown-submenu submenu">
                            <a tabindex="-1" href="#">Batch</a>
                            <ul class="dropdown-menu submenu">
                                <li class="submenu"><a tabindex="-1" href="/GlobalUpdate/BatchExecution">Batch Generation</a></li>
                                <li class="submenu">
                                    <a href="/GlobalUpdate/BatchExecutionStatus">Batch Execution</a>
                                </li>
                            </ul>
                        </li>
                    </ul>
                </li>*@
            //}
           if (claims.Any(c => c.Value.Trim().ToUpper() == "COMPAREANDSYNC"))
           {
            <li>
                <a id="compareSync" href="/DocumentSync/Index" data-toggle="tooltip" title="Compare &amp; Sync" data-placement="right">
                    <i class="material-icons">&#xE8D5;</i>
                    <span class="nav-label">Compare &amp; Sync</span>
                </a>
            </li>
           }
       }
        @if (claims != null)
        {
            if (claims.Any(c => c.Value.Trim().ToUpper() == "PBPINTEGRATION"))
            {
                <li>
                    <a id="pbp" href="#" class="dropdown-toggle menugroup" data-toggle="dropdown" data-placement="bottom">
                        PBP Integration
                    </a>
                    <ul class="dropdown-menu">
                        <li class="submenu"><a href="/PBPImport/PBPDataBase">Manage PBP Database</a></li>
                        <li class="submenu"><a href="/PBPImport/Index">PBP Import</a></li>
                        <li class="submenu"><a href="/PBPExport/Index">PBP Export</a></li>
                    </ul>
                </li>
            }
        }
        @*      <li>
                <a id="pbpimport" href="/PBPImport/Index" data-placement=" bottom">PBP Import
                </a>
            </li>*@

        @*<li>
                <a id="productivityDashboard" href="/ProductivityDashboard/Index" data-placement=" bottom">Productivity Dashboard
                </a>
            </li>*@
    @if (claims != null)
    {
        if (claims.Any(c => c.Value.Trim().ToUpper() == "QHPEXPORT"))
        {
            <li>
             <a id="qhpExport" href="/QHPExport/Index" data-toggle="tooltip" title="QHP Plan & Benefit Generation" data-placement="right">
                <i class="material-icons">exit_to_app</i>
                <span class="nav-label">QHP Export</span>
            </a>
        </li>
     }
    }
    </ul>
    <div class="containermsg" id="NotificationStatusbtn" style="cursor: pointer;">
        <img src="~/Content/css/images/bell.png" title="Notification" alt="Notification" style="width:100%;" />
        <span id="messages" class="centeredmsg"></span>
    </div>
    <div class="pull-right logoff">

        <p class="welcome-text dropdown-toggle" data-toggle="dropdown">
            @if (ViewBag.UseAuthentication == true || ViewBag.DummyAuthenticationEnabled == true)
            {
                if (User.Identity != null)
                {
                    <strong>@User.Identity.GetUserName()</strong>
                }
                else
                {
                    <strong>Welcome</strong>
                }
                <span class="fa fa-caret-down"></span>
                <ul class="sub-menu collapse" id="userMenu">
                    <li><a href="#">Environment: @environment</a></li>
                    @if (claims != null)
                    {
                        if (claims.Any(c => c.Value.Trim().ToUpper() == "ALLOWSINGLELOGIN"))
                        {
                            string AppName = ViewBag.ApplicationName == "eBenefitSync" ? "eMedicareSync" : "eBenefitSync";

                            string SingleLandingPageUrl = ConfigurationManager.AppSettings["SingleLandingPageUrl"] ?? string.Empty;

                            <li><a href=@SingleLandingPageUrl class="logofflink" onclick="return false;" , id="confirm">Log off</a></li>

                            string SwitchToApplication = "/Account/SwitchToApplication?appName=" + @AppName;
                            <li><a href=@SwitchToApplication> Switch To: @AppName</a></li>



                        }
                        else
                        {
                            <li>@Html.ActionLink("Log off", "LogOff", "Account", null, new { @class = "logofflink", onclick = "return false;", id = "confirm" })</li>
                        }

                    }
                </ul>
            }
        </p>

        <div style="clear: both"></div>
    </div>
</div>

<div id="NotificationDialog" style="">
    <div class="table-responsive grid-wrapper">
        <table class="table" id="notificationstatusGrid"></table>
    </div>
    <label for="View All" id='radioViewall' name="ViewAll">View All</label>
</div>
@*<script src="~/Scripts/Framework/External/Notification/Notify.js"></script>*@
<script>
  
        $("#NotificationStatusbtn").click(function () {
            NotificationFunction.showNotification();
        });
  
    $(document).ready(function () {

        $("#menu li a").tooltip();
        var masterlisturl = "/MasterList/Index";
        //$("#masterList").click(function () {
        //    $(this).attr('href', "/MasterList/Index");
        //});

        $("#menu li a").tooltip();
        var hsbmasterlisturl = "/FolderVersion/Index?tenantId=1&folderType=HSBMasterList&folderId=" + MasterList.MASTERLISTFOLDERID;
        $("#hsbmasterList").click(function () {
            $(this).attr('href', hsbmasterlisturl);
        });
    });
    $(document).ready(function () {

        function setTotalNotification(totalNotif) {
            debugger;
            console.log(totalNotif);
            $("#messages").html(totalNotif.total);
            if (totalNotif !== undefined) {
                if (totalNotif.message !== undefined) {
                    if (totalNotif.message != null) {
                        Notify(totalNotif.message, null, null, "success");
                        var refreshTaskGrid = $('#refresh_workQueue');
                        if (refreshTaskGrid!==undefined)
                        {
                            if (refreshTaskGrid.count > 0)
                            {
                                refreshTaskGrid.click();
                            }
                        }
                    }
                }
            }
        }

        var hub = $.connection.notificationHub;

        //Client Call
        hub.client.broadcaastNotif = function (totalNotif) {
            setTotalNotification(totalNotif)
        };


        //$.connection.hub.start().done(function () { });

        $.connection.hub.start()
            .done(function () {
                console.log("Hub Connected!");

                //Server Call
                hub.server.getNotification();

            })
            .fail(function () {
                console.log("Could not Connect!");
            });
    });
</script>
