//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace tmg.equinox.web.App_Data.QHP {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("planBenefitTemplateVO")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class planBenefitTemplateVO : global::System.Data.DataSet {
        
        private planMarketingNameDataTable tableplanMarketingName;
        
        private metalLevelDataTable tablemetalLevel;
        
        private packagesListDataTable tablepackagesList;
        
        private packagesDataTable tablepackages;
        
        private headerDataTable tableheader;
        
        private issuerIdDataTable tableissuerId;
        
        private statePostalCodeDataTable tablestatePostalCode;
        
        private marketCoverageDataTable tablemarketCoverage;
        
        private dentalPlanOnlyIndDataTable tabledentalPlanOnlyInd;
        
        private tinDataTable tabletin;
        
        private benefitsListDataTable tablebenefitsList;
        
        private benefitsDataTable tablebenefits;
        
        private benefitTypeCodeDataTable tablebenefitTypeCode;
        
        private isEHBDataTable tableisEHB;
        
        private isStateMandateDataTable tableisStateMandate;
        
        private isBenefitCoveredDataTable tableisBenefitCovered;
        
        private serviceLimitDataTable tableserviceLimit;
        
        private quantityLimitDataTable tablequantityLimit;
        
        private unitLimitDataTable tableunitLimit;
        
        private minimumStayDataTable tableminimumStay;
        
        private exclusionDataTable tableexclusion;
        
        private explanationDataTable tableexplanation;
        
        private ehbVarianceReasonDataTable tableehbVarianceReason;
        
        private subjectToDeductibleTier1DataTable tablesubjectToDeductibleTier1;
        
        private subjectToDeductibleTier2DataTable tablesubjectToDeductibleTier2;
        
        private excludedInNetworkMOOPDataTable tableexcludedInNetworkMOOP;
        
        private excludedOutOfNetworkMOOPDataTable tableexcludedOutOfNetworkMOOP;
        
        private plansListDataTable tableplansList;
        
        private plansDataTable tableplans;
        
        private planAttributesDataTable tableplanAttributes;
        
        private standardComponentIDDataTable tablestandardComponentID;
        
        private hiosProductIDDataTable tablehiosProductID;
        
        private hpidDataTable tablehpid;
        
        private networkIDDataTable tablenetworkID;
        
        private serviceAreaIDDataTable tableserviceAreaID;
        
        private formularyIDDataTable tableformularyID;
        
        private isNewPlanDataTable tableisNewPlan;
        
        private planTypeDataTable tableplanType;
        
        private uniquePlanDesignDataTable tableuniquePlanDesign;
        
        private qhpOrNonQhpDataTable tableqhpOrNonQhp;
        
        private insurancePlanPregnancyNoticeReqIndDataTable tableinsurancePlanPregnancyNoticeReqInd;
        
        private isSpecialistReferralRequiredDataTable tableisSpecialistReferralRequired;
        
        private healthCareSpecialistReferralTypeDataTable tablehealthCareSpecialistReferralType;
        
        private insurancePlanBenefitExclusionTextDataTable tableinsurancePlanBenefitExclusionText;
        
        private indianPlanVariationDataTable tableindianPlanVariation;
        
        private hsaEligibilityDataTable tablehsaEligibility;
        
        private employerHSAHRAContributionIndicatorDataTable tableemployerHSAHRAContributionIndicator;
        
        private empContributionAmountForHSAOrHRADataTable tableempContributionAmountForHSAOrHRA;
        
        private childOnlyOfferingDataTable tablechildOnlyOffering;
        
        private childOnlyPlanIDDataTable tablechildOnlyPlanID;
        
        private isWellnessProgramOfferedDataTable tableisWellnessProgramOffered;
        
        private isDiseaseMgmtProgramsOfferedDataTable tableisDiseaseMgmtProgramsOffered;
        
        private ehbApportionmentForPediatricDentalDataTable tableehbApportionmentForPediatricDental;
        
        private guaranteedVsEstimatedRateDataTable tableguaranteedVsEstimatedRate;
        
        private maximumCoinsuranceForSpecialtyDrugsDataTable tablemaximumCoinsuranceForSpecialtyDrugs;
        
        private maxNumDaysForChargingInpatientCopayDataTable tablemaxNumDaysForChargingInpatientCopay;
        
        private beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable tablebeginPrimaryCareCostSharingAfterSetNumberVisits;
        
        private beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays;
        
        private planEffectiveDateDataTable tableplanEffectiveDate;
        
        private planExpirationDateDataTable tableplanExpirationDate;
        
        private outOfCountryCoverageDataTable tableoutOfCountryCoverage;
        
        private outOfCountryCoverageDescriptionDataTable tableoutOfCountryCoverageDescription;
        
        private outOfServiceAreaCoverageDataTable tableoutOfServiceAreaCoverage;
        
        private outOfServiceAreaCoverageDescriptionDataTable tableoutOfServiceAreaCoverageDescription;
        
        private nationalNetworkDataTable tablenationalNetwork;
        
        private summaryBenefitAndCoverageURLDataTable tablesummaryBenefitAndCoverageURL;
        
        private enrollmentPaymentURLDataTable tableenrollmentPaymentURL;
        
        private planBrochureDataTable tableplanBrochure;
        
        private costShareVariancesListDataTable tablecostShareVariancesList;
        
        private costShareVarianceDataTable tablecostShareVariance;
        
        private planIdDataTable tableplanId;
        
        private csrVariationTypeDataTable tablecsrVariationType;
        
        private issuerActuarialValueDataTable tableissuerActuarialValue;
        
        private avCalculatorOutputNumberDataTable tableavCalculatorOutputNumber;
        
        private medicalAndDrugDeductiblesIntegratedDataTable tablemedicalAndDrugDeductiblesIntegrated;
        
        private medicalAndDrugMaxOutOfPocketIntegratedDataTable tablemedicalAndDrugMaxOutOfPocketIntegrated;
        
        private multipleProviderTiersDataTable tablemultipleProviderTiers;
        
        private firstTierUtilizationDataTable tablefirstTierUtilization;
        
        private secondTierUtilizationDataTable tablesecondTierUtilization;
        
        private sbcDataTable tablesbc;
        
        private havingBabyDeductibleDataTable tablehavingBabyDeductible;
        
        private havingBabyCoPaymentDataTable tablehavingBabyCoPayment;
        
        private havingBabyCoInsuranceDataTable tablehavingBabyCoInsurance;
        
        private havingBabyLimitDataTable tablehavingBabyLimit;
        
        private havingDiabetesDeductibleDataTable tablehavingDiabetesDeductible;
        
        private havingDiabetesCopayDataTable tablehavingDiabetesCopay;
        
        private havingDiabetesCoInsuranceDataTable tablehavingDiabetesCoInsurance;
        
        private havingDiabetesLimitDataTable tablehavingDiabetesLimit;
        
        private moopListDataTable tablemoopList;
        
        private moopDataTable tablemoop;
        
        private nameDataTable tablename;
        
        private inNetworkTier1IndividualAmountDataTable tableinNetworkTier1IndividualAmount;
        
        private inNetworkTier1FamilyAmountDataTable tableinNetworkTier1FamilyAmount;
        
        private inNetworkTier2IndividualAmountDataTable tableinNetworkTier2IndividualAmount;
        
        private inNetworkTier2FamilyAmountDataTable tableinNetworkTier2FamilyAmount;
        
        private outOfNetworkIndividualAmountDataTable tableoutOfNetworkIndividualAmount;
        
        private outOfNetworkFamilyAmountDataTable tableoutOfNetworkFamilyAmount;
        
        private combinedInOutNetworkIndividualAmountDataTable tablecombinedInOutNetworkIndividualAmount;
        
        private combinedInOutNetworkFamilyAmountDataTable tablecombinedInOutNetworkFamilyAmount;
        
        private planDeductibleListDataTable tableplanDeductibleList;
        
        private planDeductibleDataTable tableplanDeductible;
        
        private deductibleTypeDataTable tabledeductibleType;
        
        private inNetworkTier1IndividualDataTable tableinNetworkTier1Individual;
        
        private inNetworkTier1FamilyDataTable tableinNetworkTier1Family;
        
        private coinsuranceInNetworkTier1DataTable tablecoinsuranceInNetworkTier1;
        
        private inNetworkTierTwoIndividualDataTable tableinNetworkTierTwoIndividual;
        
        private inNetworkTierTwoFamilyDataTable tableinNetworkTierTwoFamily;
        
        private coinsuranceInNetworkTier2DataTable tablecoinsuranceInNetworkTier2;
        
        private outOfNetworkIndividualDataTable tableoutOfNetworkIndividual;
        
        private outOfNetworkFamilyDataTable tableoutOfNetworkFamily;
        
        private combinedInOrOutNetworkIndividualDataTable tablecombinedInOrOutNetworkIndividual;
        
        private combinedInOrOutNetworkFamilyDataTable tablecombinedInOrOutNetworkFamily;
        
        private serviceVisitListDataTable tableserviceVisitList;
        
        private serviceVisitDataTable tableserviceVisit;
        
        private visitTypeDataTable tablevisitType;
        
        private copayInNetworkTier1DataTable tablecopayInNetworkTier1;
        
        private copayInNetworkTier2DataTable tablecopayInNetworkTier2;
        
        private copayOutOfNetworkDataTable tablecopayOutOfNetwork;
        
        private coInsuranceInNetworkTier1DataTable tablecoInsuranceInNetworkTier1;
        
        private coInsuranceInNetworkTier2DataTable tablecoInsuranceInNetworkTier2;
        
        private coInsuranceOutOfNetworkDataTable tablecoInsuranceOutOfNetwork;
        
        private global::System.Data.DataRelation relationplanAttributes_planMarketingName;
        
        private global::System.Data.DataRelation relationcostShareVariance_planMarketingName;
        
        private global::System.Data.DataRelation relationplanAttributes_metalLevel;
        
        private global::System.Data.DataRelation relationcostShareVariance_metalLevel;
        
        private global::System.Data.DataRelation relationpackagesList_packages;
        
        private global::System.Data.DataRelation relationpackages_header;
        
        private global::System.Data.DataRelation relationheader_issuerId;
        
        private global::System.Data.DataRelation relationheader_statePostalCode;
        
        private global::System.Data.DataRelation relationheader_marketCoverage;
        
        private global::System.Data.DataRelation relationheader_dentalPlanOnlyInd;
        
        private global::System.Data.DataRelation relationheader_tin;
        
        private global::System.Data.DataRelation relationpackages_benefitsList;
        
        private global::System.Data.DataRelation relationbenefitsList_benefits;
        
        private global::System.Data.DataRelation relationbenefits_benefitTypeCode;
        
        private global::System.Data.DataRelation relationbenefits_isEHB;
        
        private global::System.Data.DataRelation relationbenefits_isStateMandate;
        
        private global::System.Data.DataRelation relationbenefits_isBenefitCovered;
        
        private global::System.Data.DataRelation relationbenefits_serviceLimit;
        
        private global::System.Data.DataRelation relationbenefits_quantityLimit;
        
        private global::System.Data.DataRelation relationbenefits_unitLimit;
        
        private global::System.Data.DataRelation relationbenefits_minimumStay;
        
        private global::System.Data.DataRelation relationbenefits_exclusion;
        
        private global::System.Data.DataRelation relationbenefits_explanation;
        
        private global::System.Data.DataRelation relationbenefits_ehbVarianceReason;
        
        private global::System.Data.DataRelation relationbenefits_subjectToDeductibleTier1;
        
        private global::System.Data.DataRelation relationbenefits_subjectToDeductibleTier2;
        
        private global::System.Data.DataRelation relationbenefits_excludedInNetworkMOOP;
        
        private global::System.Data.DataRelation relationbenefits_excludedOutOfNetworkMOOP;
        
        private global::System.Data.DataRelation relationpackages_plansList;
        
        private global::System.Data.DataRelation relationplansList_plans;
        
        private global::System.Data.DataRelation relationplans_planAttributes;
        
        private global::System.Data.DataRelation relationplanAttributes_standardComponentID;
        
        private global::System.Data.DataRelation relationplanAttributes_hiosProductID;
        
        private global::System.Data.DataRelation relationplanAttributes_hpid;
        
        private global::System.Data.DataRelation relationplanAttributes_networkID;
        
        private global::System.Data.DataRelation relationplanAttributes_serviceAreaID;
        
        private global::System.Data.DataRelation relationplanAttributes_formularyID;
        
        private global::System.Data.DataRelation relationplanAttributes_isNewPlan;
        
        private global::System.Data.DataRelation relationplanAttributes_planType;
        
        private global::System.Data.DataRelation relationplanAttributes_uniquePlanDesign;
        
        private global::System.Data.DataRelation relationplanAttributes_qhpOrNonQhp;
        
        private global::System.Data.DataRelation relationplanAttributes_insurancePlanPregnancyNoticeReqInd;
        
        private global::System.Data.DataRelation relationplanAttributes_isSpecialistReferralRequired;
        
        private global::System.Data.DataRelation relationplanAttributes_healthCareSpecialistReferralType;
        
        private global::System.Data.DataRelation relationplanAttributes_insurancePlanBenefitExclusionText;
        
        private global::System.Data.DataRelation relationplanAttributes_indianPlanVariation;
        
        private global::System.Data.DataRelation relationplanAttributes_hsaEligibility;
        
        private global::System.Data.DataRelation relationplanAttributes_employerHSAHRAContributionIndicator;
        
        private global::System.Data.DataRelation relationplanAttributes_empContributionAmountForHSAOrHRA;
        
        private global::System.Data.DataRelation relationplanAttributes_childOnlyOffering;
        
        private global::System.Data.DataRelation relationplanAttributes_childOnlyPlanID;
        
        private global::System.Data.DataRelation relationplanAttributes_isWellnessProgramOffered;
        
        private global::System.Data.DataRelation relationplanAttributes_isDiseaseMgmtProgramsOffered;
        
        private global::System.Data.DataRelation relationplanAttributes_ehbApportionmentForPediatricDental;
        
        private global::System.Data.DataRelation relationplanAttributes_guaranteedVsEstimatedRate;
        
        private global::System.Data.DataRelation relationplanAttributes_maximumCoinsuranceForSpecialtyDrugs;
        
        private global::System.Data.DataRelation relationplanAttributes_maxNumDaysForChargingInpatientCopay;
        
        private global::System.Data.DataRelation relationplanAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits;
        
        private global::System.Data.DataRelation relationplanAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays;
        
        private global::System.Data.DataRelation relationplanAttributes_planEffectiveDate;
        
        private global::System.Data.DataRelation relationplanAttributes_planExpirationDate;
        
        private global::System.Data.DataRelation relationplanAttributes_outOfCountryCoverage;
        
        private global::System.Data.DataRelation relationplanAttributes_outOfCountryCoverageDescription;
        
        private global::System.Data.DataRelation relationplanAttributes_outOfServiceAreaCoverage;
        
        private global::System.Data.DataRelation relationplanAttributes_outOfServiceAreaCoverageDescription;
        
        private global::System.Data.DataRelation relationplanAttributes_nationalNetwork;
        
        private global::System.Data.DataRelation relationplanAttributes_summaryBenefitAndCoverageURL;
        
        private global::System.Data.DataRelation relationplanAttributes_enrollmentPaymentURL;
        
        private global::System.Data.DataRelation relationplanAttributes_planBrochure;
        
        private global::System.Data.DataRelation relationplans_costShareVariancesList;
        
        private global::System.Data.DataRelation relationcostShareVariancesList_costShareVariance;
        
        private global::System.Data.DataRelation relationcostShareVariance_planId;
        
        private global::System.Data.DataRelation relationcostShareVariance_csrVariationType;
        
        private global::System.Data.DataRelation relationcostShareVariance_issuerActuarialValue;
        
        private global::System.Data.DataRelation relationcostShareVariance_avCalculatorOutputNumber;
        
        private global::System.Data.DataRelation relationcostShareVariance_medicalAndDrugDeductiblesIntegrated;
        
        private global::System.Data.DataRelation relationcostShareVariance_medicalAndDrugMaxOutOfPocketIntegrated;
        
        private global::System.Data.DataRelation relationcostShareVariance_multipleProviderTiers;
        
        private global::System.Data.DataRelation relationcostShareVariance_firstTierUtilization;
        
        private global::System.Data.DataRelation relationcostShareVariance_secondTierUtilization;
        
        private global::System.Data.DataRelation relationcostShareVariance_sbc;
        
        private global::System.Data.DataRelation relationsbc_havingBabyDeductible;
        
        private global::System.Data.DataRelation relationsbc_havingBabyCoPayment;
        
        private global::System.Data.DataRelation relationsbc_havingBabyCoInsurance;
        
        private global::System.Data.DataRelation relationsbc_havingBabyLimit;
        
        private global::System.Data.DataRelation relationsbc_havingDiabetesDeductible;
        
        private global::System.Data.DataRelation relationsbc_havingDiabetesCopay;
        
        private global::System.Data.DataRelation relationsbc_havingDiabetesCoInsurance;
        
        private global::System.Data.DataRelation relationsbc_havingDiabetesLimit;
        
        private global::System.Data.DataRelation relationcostShareVariance_moopList;
        
        private global::System.Data.DataRelation relationmoopList_moop;
        
        private global::System.Data.DataRelation relationmoop_name;
        
        private global::System.Data.DataRelation relationmoop_inNetworkTier1IndividualAmount;
        
        private global::System.Data.DataRelation relationmoop_inNetworkTier1FamilyAmount;
        
        private global::System.Data.DataRelation relationmoop_inNetworkTier2IndividualAmount;
        
        private global::System.Data.DataRelation relationmoop_inNetworkTier2FamilyAmount;
        
        private global::System.Data.DataRelation relationmoop_outOfNetworkIndividualAmount;
        
        private global::System.Data.DataRelation relationmoop_outOfNetworkFamilyAmount;
        
        private global::System.Data.DataRelation relationmoop_combinedInOutNetworkIndividualAmount;
        
        private global::System.Data.DataRelation relationmoop_combinedInOutNetworkFamilyAmount;
        
        private global::System.Data.DataRelation relationcostShareVariance_planDeductibleList;
        
        private global::System.Data.DataRelation relationplanDeductibleList_planDeductible;
        
        private global::System.Data.DataRelation relationplanDeductible_deductibleType;
        
        private global::System.Data.DataRelation relationplanDeductible_inNetworkTier1Individual;
        
        private global::System.Data.DataRelation relationplanDeductible_inNetworkTier1Family;
        
        private global::System.Data.DataRelation relationplanDeductible_coinsuranceInNetworkTier1;
        
        private global::System.Data.DataRelation relationplanDeductible_inNetworkTierTwoIndividual;
        
        private global::System.Data.DataRelation relationplanDeductible_inNetworkTierTwoFamily;
        
        private global::System.Data.DataRelation relationplanDeductible_coinsuranceInNetworkTier2;
        
        private global::System.Data.DataRelation relationplanDeductible_outOfNetworkIndividual;
        
        private global::System.Data.DataRelation relationplanDeductible_outOfNetworkFamily;
        
        private global::System.Data.DataRelation relationplanDeductible_combinedInOrOutNetworkIndividual;
        
        private global::System.Data.DataRelation relationplanDeductible_combinedInOrOutNetworkFamily;
        
        private global::System.Data.DataRelation relationcostShareVariance_serviceVisitList;
        
        private global::System.Data.DataRelation relationserviceVisitList_serviceVisit;
        
        private global::System.Data.DataRelation relationserviceVisit_visitType;
        
        private global::System.Data.DataRelation relationserviceVisit_copayInNetworkTier1;
        
        private global::System.Data.DataRelation relationserviceVisit_copayInNetworkTier2;
        
        private global::System.Data.DataRelation relationserviceVisit_copayOutOfNetwork;
        
        private global::System.Data.DataRelation relationserviceVisit_coInsuranceInNetworkTier1;
        
        private global::System.Data.DataRelation relationserviceVisit_coInsuranceInNetworkTier2;
        
        private global::System.Data.DataRelation relationserviceVisit_coInsuranceOutOfNetwork;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public planBenefitTemplateVO() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected planBenefitTemplateVO(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["planMarketingName"] != null)) {
                    base.Tables.Add(new planMarketingNameDataTable(ds.Tables["planMarketingName"]));
                }
                if ((ds.Tables["metalLevel"] != null)) {
                    base.Tables.Add(new metalLevelDataTable(ds.Tables["metalLevel"]));
                }
                if ((ds.Tables["packagesList"] != null)) {
                    base.Tables.Add(new packagesListDataTable(ds.Tables["packagesList"]));
                }
                if ((ds.Tables["packages"] != null)) {
                    base.Tables.Add(new packagesDataTable(ds.Tables["packages"]));
                }
                if ((ds.Tables["header"] != null)) {
                    base.Tables.Add(new headerDataTable(ds.Tables["header"]));
                }
                if ((ds.Tables["issuerId"] != null)) {
                    base.Tables.Add(new issuerIdDataTable(ds.Tables["issuerId"]));
                }
                if ((ds.Tables["statePostalCode"] != null)) {
                    base.Tables.Add(new statePostalCodeDataTable(ds.Tables["statePostalCode"]));
                }
                if ((ds.Tables["marketCoverage"] != null)) {
                    base.Tables.Add(new marketCoverageDataTable(ds.Tables["marketCoverage"]));
                }
                if ((ds.Tables["dentalPlanOnlyInd"] != null)) {
                    base.Tables.Add(new dentalPlanOnlyIndDataTable(ds.Tables["dentalPlanOnlyInd"]));
                }
                if ((ds.Tables["tin"] != null)) {
                    base.Tables.Add(new tinDataTable(ds.Tables["tin"]));
                }
                if ((ds.Tables["benefitsList"] != null)) {
                    base.Tables.Add(new benefitsListDataTable(ds.Tables["benefitsList"]));
                }
                if ((ds.Tables["benefits"] != null)) {
                    base.Tables.Add(new benefitsDataTable(ds.Tables["benefits"]));
                }
                if ((ds.Tables["benefitTypeCode"] != null)) {
                    base.Tables.Add(new benefitTypeCodeDataTable(ds.Tables["benefitTypeCode"]));
                }
                if ((ds.Tables["isEHB"] != null)) {
                    base.Tables.Add(new isEHBDataTable(ds.Tables["isEHB"]));
                }
                if ((ds.Tables["isStateMandate"] != null)) {
                    base.Tables.Add(new isStateMandateDataTable(ds.Tables["isStateMandate"]));
                }
                if ((ds.Tables["isBenefitCovered"] != null)) {
                    base.Tables.Add(new isBenefitCoveredDataTable(ds.Tables["isBenefitCovered"]));
                }
                if ((ds.Tables["serviceLimit"] != null)) {
                    base.Tables.Add(new serviceLimitDataTable(ds.Tables["serviceLimit"]));
                }
                if ((ds.Tables["quantityLimit"] != null)) {
                    base.Tables.Add(new quantityLimitDataTable(ds.Tables["quantityLimit"]));
                }
                if ((ds.Tables["unitLimit"] != null)) {
                    base.Tables.Add(new unitLimitDataTable(ds.Tables["unitLimit"]));
                }
                if ((ds.Tables["minimumStay"] != null)) {
                    base.Tables.Add(new minimumStayDataTable(ds.Tables["minimumStay"]));
                }
                if ((ds.Tables["exclusion"] != null)) {
                    base.Tables.Add(new exclusionDataTable(ds.Tables["exclusion"]));
                }
                if ((ds.Tables["explanation"] != null)) {
                    base.Tables.Add(new explanationDataTable(ds.Tables["explanation"]));
                }
                if ((ds.Tables["ehbVarianceReason"] != null)) {
                    base.Tables.Add(new ehbVarianceReasonDataTable(ds.Tables["ehbVarianceReason"]));
                }
                if ((ds.Tables["subjectToDeductibleTier1"] != null)) {
                    base.Tables.Add(new subjectToDeductibleTier1DataTable(ds.Tables["subjectToDeductibleTier1"]));
                }
                if ((ds.Tables["subjectToDeductibleTier2"] != null)) {
                    base.Tables.Add(new subjectToDeductibleTier2DataTable(ds.Tables["subjectToDeductibleTier2"]));
                }
                if ((ds.Tables["excludedInNetworkMOOP"] != null)) {
                    base.Tables.Add(new excludedInNetworkMOOPDataTable(ds.Tables["excludedInNetworkMOOP"]));
                }
                if ((ds.Tables["excludedOutOfNetworkMOOP"] != null)) {
                    base.Tables.Add(new excludedOutOfNetworkMOOPDataTable(ds.Tables["excludedOutOfNetworkMOOP"]));
                }
                if ((ds.Tables["plansList"] != null)) {
                    base.Tables.Add(new plansListDataTable(ds.Tables["plansList"]));
                }
                if ((ds.Tables["plans"] != null)) {
                    base.Tables.Add(new plansDataTable(ds.Tables["plans"]));
                }
                if ((ds.Tables["planAttributes"] != null)) {
                    base.Tables.Add(new planAttributesDataTable(ds.Tables["planAttributes"]));
                }
                if ((ds.Tables["standardComponentID"] != null)) {
                    base.Tables.Add(new standardComponentIDDataTable(ds.Tables["standardComponentID"]));
                }
                if ((ds.Tables["hiosProductID"] != null)) {
                    base.Tables.Add(new hiosProductIDDataTable(ds.Tables["hiosProductID"]));
                }
                if ((ds.Tables["hpid"] != null)) {
                    base.Tables.Add(new hpidDataTable(ds.Tables["hpid"]));
                }
                if ((ds.Tables["networkID"] != null)) {
                    base.Tables.Add(new networkIDDataTable(ds.Tables["networkID"]));
                }
                if ((ds.Tables["serviceAreaID"] != null)) {
                    base.Tables.Add(new serviceAreaIDDataTable(ds.Tables["serviceAreaID"]));
                }
                if ((ds.Tables["formularyID"] != null)) {
                    base.Tables.Add(new formularyIDDataTable(ds.Tables["formularyID"]));
                }
                if ((ds.Tables["isNewPlan"] != null)) {
                    base.Tables.Add(new isNewPlanDataTable(ds.Tables["isNewPlan"]));
                }
                if ((ds.Tables["planType"] != null)) {
                    base.Tables.Add(new planTypeDataTable(ds.Tables["planType"]));
                }
                if ((ds.Tables["uniquePlanDesign"] != null)) {
                    base.Tables.Add(new uniquePlanDesignDataTable(ds.Tables["uniquePlanDesign"]));
                }
                if ((ds.Tables["qhpOrNonQhp"] != null)) {
                    base.Tables.Add(new qhpOrNonQhpDataTable(ds.Tables["qhpOrNonQhp"]));
                }
                if ((ds.Tables["insurancePlanPregnancyNoticeReqInd"] != null)) {
                    base.Tables.Add(new insurancePlanPregnancyNoticeReqIndDataTable(ds.Tables["insurancePlanPregnancyNoticeReqInd"]));
                }
                if ((ds.Tables["isSpecialistReferralRequired"] != null)) {
                    base.Tables.Add(new isSpecialistReferralRequiredDataTable(ds.Tables["isSpecialistReferralRequired"]));
                }
                if ((ds.Tables["healthCareSpecialistReferralType"] != null)) {
                    base.Tables.Add(new healthCareSpecialistReferralTypeDataTable(ds.Tables["healthCareSpecialistReferralType"]));
                }
                if ((ds.Tables["insurancePlanBenefitExclusionText"] != null)) {
                    base.Tables.Add(new insurancePlanBenefitExclusionTextDataTable(ds.Tables["insurancePlanBenefitExclusionText"]));
                }
                if ((ds.Tables["indianPlanVariation"] != null)) {
                    base.Tables.Add(new indianPlanVariationDataTable(ds.Tables["indianPlanVariation"]));
                }
                if ((ds.Tables["hsaEligibility"] != null)) {
                    base.Tables.Add(new hsaEligibilityDataTable(ds.Tables["hsaEligibility"]));
                }
                if ((ds.Tables["employerHSAHRAContributionIndicator"] != null)) {
                    base.Tables.Add(new employerHSAHRAContributionIndicatorDataTable(ds.Tables["employerHSAHRAContributionIndicator"]));
                }
                if ((ds.Tables["empContributionAmountForHSAOrHRA"] != null)) {
                    base.Tables.Add(new empContributionAmountForHSAOrHRADataTable(ds.Tables["empContributionAmountForHSAOrHRA"]));
                }
                if ((ds.Tables["childOnlyOffering"] != null)) {
                    base.Tables.Add(new childOnlyOfferingDataTable(ds.Tables["childOnlyOffering"]));
                }
                if ((ds.Tables["childOnlyPlanID"] != null)) {
                    base.Tables.Add(new childOnlyPlanIDDataTable(ds.Tables["childOnlyPlanID"]));
                }
                if ((ds.Tables["isWellnessProgramOffered"] != null)) {
                    base.Tables.Add(new isWellnessProgramOfferedDataTable(ds.Tables["isWellnessProgramOffered"]));
                }
                if ((ds.Tables["isDiseaseMgmtProgramsOffered"] != null)) {
                    base.Tables.Add(new isDiseaseMgmtProgramsOfferedDataTable(ds.Tables["isDiseaseMgmtProgramsOffered"]));
                }
                if ((ds.Tables["ehbApportionmentForPediatricDental"] != null)) {
                    base.Tables.Add(new ehbApportionmentForPediatricDentalDataTable(ds.Tables["ehbApportionmentForPediatricDental"]));
                }
                if ((ds.Tables["guaranteedVsEstimatedRate"] != null)) {
                    base.Tables.Add(new guaranteedVsEstimatedRateDataTable(ds.Tables["guaranteedVsEstimatedRate"]));
                }
                if ((ds.Tables["maximumCoinsuranceForSpecialtyDrugs"] != null)) {
                    base.Tables.Add(new maximumCoinsuranceForSpecialtyDrugsDataTable(ds.Tables["maximumCoinsuranceForSpecialtyDrugs"]));
                }
                if ((ds.Tables["maxNumDaysForChargingInpatientCopay"] != null)) {
                    base.Tables.Add(new maxNumDaysForChargingInpatientCopayDataTable(ds.Tables["maxNumDaysForChargingInpatientCopay"]));
                }
                if ((ds.Tables["beginPrimaryCareCostSharingAfterSetNumberVisits"] != null)) {
                    base.Tables.Add(new beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable(ds.Tables["beginPrimaryCareCostSharingAfterSetNumberVisits"]));
                }
                if ((ds.Tables["beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays"] != null)) {
                    base.Tables.Add(new beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable(ds.Tables["beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays"]));
                }
                if ((ds.Tables["planEffectiveDate"] != null)) {
                    base.Tables.Add(new planEffectiveDateDataTable(ds.Tables["planEffectiveDate"]));
                }
                if ((ds.Tables["planExpirationDate"] != null)) {
                    base.Tables.Add(new planExpirationDateDataTable(ds.Tables["planExpirationDate"]));
                }
                if ((ds.Tables["outOfCountryCoverage"] != null)) {
                    base.Tables.Add(new outOfCountryCoverageDataTable(ds.Tables["outOfCountryCoverage"]));
                }
                if ((ds.Tables["outOfCountryCoverageDescription"] != null)) {
                    base.Tables.Add(new outOfCountryCoverageDescriptionDataTable(ds.Tables["outOfCountryCoverageDescription"]));
                }
                if ((ds.Tables["outOfServiceAreaCoverage"] != null)) {
                    base.Tables.Add(new outOfServiceAreaCoverageDataTable(ds.Tables["outOfServiceAreaCoverage"]));
                }
                if ((ds.Tables["outOfServiceAreaCoverageDescription"] != null)) {
                    base.Tables.Add(new outOfServiceAreaCoverageDescriptionDataTable(ds.Tables["outOfServiceAreaCoverageDescription"]));
                }
                if ((ds.Tables["nationalNetwork"] != null)) {
                    base.Tables.Add(new nationalNetworkDataTable(ds.Tables["nationalNetwork"]));
                }
                if ((ds.Tables["summaryBenefitAndCoverageURL"] != null)) {
                    base.Tables.Add(new summaryBenefitAndCoverageURLDataTable(ds.Tables["summaryBenefitAndCoverageURL"]));
                }
                if ((ds.Tables["enrollmentPaymentURL"] != null)) {
                    base.Tables.Add(new enrollmentPaymentURLDataTable(ds.Tables["enrollmentPaymentURL"]));
                }
                if ((ds.Tables["planBrochure"] != null)) {
                    base.Tables.Add(new planBrochureDataTable(ds.Tables["planBrochure"]));
                }
                if ((ds.Tables["costShareVariancesList"] != null)) {
                    base.Tables.Add(new costShareVariancesListDataTable(ds.Tables["costShareVariancesList"]));
                }
                if ((ds.Tables["costShareVariance"] != null)) {
                    base.Tables.Add(new costShareVarianceDataTable(ds.Tables["costShareVariance"]));
                }
                if ((ds.Tables["planId"] != null)) {
                    base.Tables.Add(new planIdDataTable(ds.Tables["planId"]));
                }
                if ((ds.Tables["csrVariationType"] != null)) {
                    base.Tables.Add(new csrVariationTypeDataTable(ds.Tables["csrVariationType"]));
                }
                if ((ds.Tables["issuerActuarialValue"] != null)) {
                    base.Tables.Add(new issuerActuarialValueDataTable(ds.Tables["issuerActuarialValue"]));
                }
                if ((ds.Tables["avCalculatorOutputNumber"] != null)) {
                    base.Tables.Add(new avCalculatorOutputNumberDataTable(ds.Tables["avCalculatorOutputNumber"]));
                }
                if ((ds.Tables["medicalAndDrugDeductiblesIntegrated"] != null)) {
                    base.Tables.Add(new medicalAndDrugDeductiblesIntegratedDataTable(ds.Tables["medicalAndDrugDeductiblesIntegrated"]));
                }
                if ((ds.Tables["medicalAndDrugMaxOutOfPocketIntegrated"] != null)) {
                    base.Tables.Add(new medicalAndDrugMaxOutOfPocketIntegratedDataTable(ds.Tables["medicalAndDrugMaxOutOfPocketIntegrated"]));
                }
                if ((ds.Tables["multipleProviderTiers"] != null)) {
                    base.Tables.Add(new multipleProviderTiersDataTable(ds.Tables["multipleProviderTiers"]));
                }
                if ((ds.Tables["firstTierUtilization"] != null)) {
                    base.Tables.Add(new firstTierUtilizationDataTable(ds.Tables["firstTierUtilization"]));
                }
                if ((ds.Tables["secondTierUtilization"] != null)) {
                    base.Tables.Add(new secondTierUtilizationDataTable(ds.Tables["secondTierUtilization"]));
                }
                if ((ds.Tables["sbc"] != null)) {
                    base.Tables.Add(new sbcDataTable(ds.Tables["sbc"]));
                }
                if ((ds.Tables["havingBabyDeductible"] != null)) {
                    base.Tables.Add(new havingBabyDeductibleDataTable(ds.Tables["havingBabyDeductible"]));
                }
                if ((ds.Tables["havingBabyCoPayment"] != null)) {
                    base.Tables.Add(new havingBabyCoPaymentDataTable(ds.Tables["havingBabyCoPayment"]));
                }
                if ((ds.Tables["havingBabyCoInsurance"] != null)) {
                    base.Tables.Add(new havingBabyCoInsuranceDataTable(ds.Tables["havingBabyCoInsurance"]));
                }
                if ((ds.Tables["havingBabyLimit"] != null)) {
                    base.Tables.Add(new havingBabyLimitDataTable(ds.Tables["havingBabyLimit"]));
                }
                if ((ds.Tables["havingDiabetesDeductible"] != null)) {
                    base.Tables.Add(new havingDiabetesDeductibleDataTable(ds.Tables["havingDiabetesDeductible"]));
                }
                if ((ds.Tables["havingDiabetesCopay"] != null)) {
                    base.Tables.Add(new havingDiabetesCopayDataTable(ds.Tables["havingDiabetesCopay"]));
                }
                if ((ds.Tables["havingDiabetesCoInsurance"] != null)) {
                    base.Tables.Add(new havingDiabetesCoInsuranceDataTable(ds.Tables["havingDiabetesCoInsurance"]));
                }
                if ((ds.Tables["havingDiabetesLimit"] != null)) {
                    base.Tables.Add(new havingDiabetesLimitDataTable(ds.Tables["havingDiabetesLimit"]));
                }
                if ((ds.Tables["moopList"] != null)) {
                    base.Tables.Add(new moopListDataTable(ds.Tables["moopList"]));
                }
                if ((ds.Tables["moop"] != null)) {
                    base.Tables.Add(new moopDataTable(ds.Tables["moop"]));
                }
                if ((ds.Tables["name"] != null)) {
                    base.Tables.Add(new nameDataTable(ds.Tables["name"]));
                }
                if ((ds.Tables["inNetworkTier1IndividualAmount"] != null)) {
                    base.Tables.Add(new inNetworkTier1IndividualAmountDataTable(ds.Tables["inNetworkTier1IndividualAmount"]));
                }
                if ((ds.Tables["inNetworkTier1FamilyAmount"] != null)) {
                    base.Tables.Add(new inNetworkTier1FamilyAmountDataTable(ds.Tables["inNetworkTier1FamilyAmount"]));
                }
                if ((ds.Tables["inNetworkTier2IndividualAmount"] != null)) {
                    base.Tables.Add(new inNetworkTier2IndividualAmountDataTable(ds.Tables["inNetworkTier2IndividualAmount"]));
                }
                if ((ds.Tables["inNetworkTier2FamilyAmount"] != null)) {
                    base.Tables.Add(new inNetworkTier2FamilyAmountDataTable(ds.Tables["inNetworkTier2FamilyAmount"]));
                }
                if ((ds.Tables["outOfNetworkIndividualAmount"] != null)) {
                    base.Tables.Add(new outOfNetworkIndividualAmountDataTable(ds.Tables["outOfNetworkIndividualAmount"]));
                }
                if ((ds.Tables["outOfNetworkFamilyAmount"] != null)) {
                    base.Tables.Add(new outOfNetworkFamilyAmountDataTable(ds.Tables["outOfNetworkFamilyAmount"]));
                }
                if ((ds.Tables["combinedInOutNetworkIndividualAmount"] != null)) {
                    base.Tables.Add(new combinedInOutNetworkIndividualAmountDataTable(ds.Tables["combinedInOutNetworkIndividualAmount"]));
                }
                if ((ds.Tables["combinedInOutNetworkFamilyAmount"] != null)) {
                    base.Tables.Add(new combinedInOutNetworkFamilyAmountDataTable(ds.Tables["combinedInOutNetworkFamilyAmount"]));
                }
                if ((ds.Tables["planDeductibleList"] != null)) {
                    base.Tables.Add(new planDeductibleListDataTable(ds.Tables["planDeductibleList"]));
                }
                if ((ds.Tables["planDeductible"] != null)) {
                    base.Tables.Add(new planDeductibleDataTable(ds.Tables["planDeductible"]));
                }
                if ((ds.Tables["deductibleType"] != null)) {
                    base.Tables.Add(new deductibleTypeDataTable(ds.Tables["deductibleType"]));
                }
                if ((ds.Tables["inNetworkTier1Individual"] != null)) {
                    base.Tables.Add(new inNetworkTier1IndividualDataTable(ds.Tables["inNetworkTier1Individual"]));
                }
                if ((ds.Tables["inNetworkTier1Family"] != null)) {
                    base.Tables.Add(new inNetworkTier1FamilyDataTable(ds.Tables["inNetworkTier1Family"]));
                }
                if ((ds.Tables["coinsuranceInNetworkTier1"] != null)) {
                    base.Tables.Add(new coinsuranceInNetworkTier1DataTable(ds.Tables["coinsuranceInNetworkTier1"]));
                }
                if ((ds.Tables["inNetworkTierTwoIndividual"] != null)) {
                    base.Tables.Add(new inNetworkTierTwoIndividualDataTable(ds.Tables["inNetworkTierTwoIndividual"]));
                }
                if ((ds.Tables["inNetworkTierTwoFamily"] != null)) {
                    base.Tables.Add(new inNetworkTierTwoFamilyDataTable(ds.Tables["inNetworkTierTwoFamily"]));
                }
                if ((ds.Tables["coinsuranceInNetworkTier2"] != null)) {
                    base.Tables.Add(new coinsuranceInNetworkTier2DataTable(ds.Tables["coinsuranceInNetworkTier2"]));
                }
                if ((ds.Tables["outOfNetworkIndividual"] != null)) {
                    base.Tables.Add(new outOfNetworkIndividualDataTable(ds.Tables["outOfNetworkIndividual"]));
                }
                if ((ds.Tables["outOfNetworkFamily"] != null)) {
                    base.Tables.Add(new outOfNetworkFamilyDataTable(ds.Tables["outOfNetworkFamily"]));
                }
                if ((ds.Tables["combinedInOrOutNetworkIndividual"] != null)) {
                    base.Tables.Add(new combinedInOrOutNetworkIndividualDataTable(ds.Tables["combinedInOrOutNetworkIndividual"]));
                }
                if ((ds.Tables["combinedInOrOutNetworkFamily"] != null)) {
                    base.Tables.Add(new combinedInOrOutNetworkFamilyDataTable(ds.Tables["combinedInOrOutNetworkFamily"]));
                }
                if ((ds.Tables["serviceVisitList"] != null)) {
                    base.Tables.Add(new serviceVisitListDataTable(ds.Tables["serviceVisitList"]));
                }
                if ((ds.Tables["serviceVisit"] != null)) {
                    base.Tables.Add(new serviceVisitDataTable(ds.Tables["serviceVisit"]));
                }
                if ((ds.Tables["visitType"] != null)) {
                    base.Tables.Add(new visitTypeDataTable(ds.Tables["visitType"]));
                }
                if ((ds.Tables["copayInNetworkTier1"] != null)) {
                    base.Tables.Add(new copayInNetworkTier1DataTable(ds.Tables["copayInNetworkTier1"]));
                }
                if ((ds.Tables["copayInNetworkTier2"] != null)) {
                    base.Tables.Add(new copayInNetworkTier2DataTable(ds.Tables["copayInNetworkTier2"]));
                }
                if ((ds.Tables["copayOutOfNetwork"] != null)) {
                    base.Tables.Add(new copayOutOfNetworkDataTable(ds.Tables["copayOutOfNetwork"]));
                }
                if ((ds.Tables["coInsuranceInNetworkTier1"] != null)) {
                    base.Tables.Add(new coInsuranceInNetworkTier1DataTable(ds.Tables["coInsuranceInNetworkTier1"]));
                }
                if ((ds.Tables["coInsuranceInNetworkTier2"] != null)) {
                    base.Tables.Add(new coInsuranceInNetworkTier2DataTable(ds.Tables["coInsuranceInNetworkTier2"]));
                }
                if ((ds.Tables["coInsuranceOutOfNetwork"] != null)) {
                    base.Tables.Add(new coInsuranceOutOfNetworkDataTable(ds.Tables["coInsuranceOutOfNetwork"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public planMarketingNameDataTable planMarketingName {
            get {
                return this.tableplanMarketingName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public metalLevelDataTable metalLevel {
            get {
                return this.tablemetalLevel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public packagesListDataTable packagesList {
            get {
                return this.tablepackagesList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public packagesDataTable packages {
            get {
                return this.tablepackages;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public headerDataTable header {
            get {
                return this.tableheader;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public issuerIdDataTable issuerId {
            get {
                return this.tableissuerId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public statePostalCodeDataTable statePostalCode {
            get {
                return this.tablestatePostalCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public marketCoverageDataTable marketCoverage {
            get {
                return this.tablemarketCoverage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dentalPlanOnlyIndDataTable dentalPlanOnlyInd {
            get {
                return this.tabledentalPlanOnlyInd;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tinDataTable tin {
            get {
                return this.tabletin;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public benefitsListDataTable benefitsList {
            get {
                return this.tablebenefitsList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public benefitsDataTable benefits {
            get {
                return this.tablebenefits;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public benefitTypeCodeDataTable benefitTypeCode {
            get {
                return this.tablebenefitTypeCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isEHBDataTable isEHB {
            get {
                return this.tableisEHB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isStateMandateDataTable isStateMandate {
            get {
                return this.tableisStateMandate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isBenefitCoveredDataTable isBenefitCovered {
            get {
                return this.tableisBenefitCovered;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public serviceLimitDataTable serviceLimit {
            get {
                return this.tableserviceLimit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public quantityLimitDataTable quantityLimit {
            get {
                return this.tablequantityLimit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public unitLimitDataTable unitLimit {
            get {
                return this.tableunitLimit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public minimumStayDataTable minimumStay {
            get {
                return this.tableminimumStay;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public exclusionDataTable exclusion {
            get {
                return this.tableexclusion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public explanationDataTable explanation {
            get {
                return this.tableexplanation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ehbVarianceReasonDataTable ehbVarianceReason {
            get {
                return this.tableehbVarianceReason;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public subjectToDeductibleTier1DataTable subjectToDeductibleTier1 {
            get {
                return this.tablesubjectToDeductibleTier1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public subjectToDeductibleTier2DataTable subjectToDeductibleTier2 {
            get {
                return this.tablesubjectToDeductibleTier2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public excludedInNetworkMOOPDataTable excludedInNetworkMOOP {
            get {
                return this.tableexcludedInNetworkMOOP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public excludedOutOfNetworkMOOPDataTable excludedOutOfNetworkMOOP {
            get {
                return this.tableexcludedOutOfNetworkMOOP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public plansListDataTable plansList {
            get {
                return this.tableplansList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public plansDataTable plans {
            get {
                return this.tableplans;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public planAttributesDataTable planAttributes {
            get {
                return this.tableplanAttributes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public standardComponentIDDataTable standardComponentID {
            get {
                return this.tablestandardComponentID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public hiosProductIDDataTable hiosProductID {
            get {
                return this.tablehiosProductID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public hpidDataTable hpid {
            get {
                return this.tablehpid;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public networkIDDataTable networkID {
            get {
                return this.tablenetworkID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public serviceAreaIDDataTable serviceAreaID {
            get {
                return this.tableserviceAreaID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public formularyIDDataTable formularyID {
            get {
                return this.tableformularyID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isNewPlanDataTable isNewPlan {
            get {
                return this.tableisNewPlan;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public planTypeDataTable planType {
            get {
                return this.tableplanType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public uniquePlanDesignDataTable uniquePlanDesign {
            get {
                return this.tableuniquePlanDesign;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public qhpOrNonQhpDataTable qhpOrNonQhp {
            get {
                return this.tableqhpOrNonQhp;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public insurancePlanPregnancyNoticeReqIndDataTable insurancePlanPregnancyNoticeReqInd {
            get {
                return this.tableinsurancePlanPregnancyNoticeReqInd;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isSpecialistReferralRequiredDataTable isSpecialistReferralRequired {
            get {
                return this.tableisSpecialistReferralRequired;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public healthCareSpecialistReferralTypeDataTable healthCareSpecialistReferralType {
            get {
                return this.tablehealthCareSpecialistReferralType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public insurancePlanBenefitExclusionTextDataTable insurancePlanBenefitExclusionText {
            get {
                return this.tableinsurancePlanBenefitExclusionText;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public indianPlanVariationDataTable indianPlanVariation {
            get {
                return this.tableindianPlanVariation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public hsaEligibilityDataTable hsaEligibility {
            get {
                return this.tablehsaEligibility;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public employerHSAHRAContributionIndicatorDataTable employerHSAHRAContributionIndicator {
            get {
                return this.tableemployerHSAHRAContributionIndicator;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public empContributionAmountForHSAOrHRADataTable empContributionAmountForHSAOrHRA {
            get {
                return this.tableempContributionAmountForHSAOrHRA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public childOnlyOfferingDataTable childOnlyOffering {
            get {
                return this.tablechildOnlyOffering;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public childOnlyPlanIDDataTable childOnlyPlanID {
            get {
                return this.tablechildOnlyPlanID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isWellnessProgramOfferedDataTable isWellnessProgramOffered {
            get {
                return this.tableisWellnessProgramOffered;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isDiseaseMgmtProgramsOfferedDataTable isDiseaseMgmtProgramsOffered {
            get {
                return this.tableisDiseaseMgmtProgramsOffered;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ehbApportionmentForPediatricDentalDataTable ehbApportionmentForPediatricDental {
            get {
                return this.tableehbApportionmentForPediatricDental;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public guaranteedVsEstimatedRateDataTable guaranteedVsEstimatedRate {
            get {
                return this.tableguaranteedVsEstimatedRate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public maximumCoinsuranceForSpecialtyDrugsDataTable maximumCoinsuranceForSpecialtyDrugs {
            get {
                return this.tablemaximumCoinsuranceForSpecialtyDrugs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public maxNumDaysForChargingInpatientCopayDataTable maxNumDaysForChargingInpatientCopay {
            get {
                return this.tablemaxNumDaysForChargingInpatientCopay;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable beginPrimaryCareCostSharingAfterSetNumberVisits {
            get {
                return this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays {
            get {
                return this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public planEffectiveDateDataTable planEffectiveDate {
            get {
                return this.tableplanEffectiveDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public planExpirationDateDataTable planExpirationDate {
            get {
                return this.tableplanExpirationDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public outOfCountryCoverageDataTable outOfCountryCoverage {
            get {
                return this.tableoutOfCountryCoverage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public outOfCountryCoverageDescriptionDataTable outOfCountryCoverageDescription {
            get {
                return this.tableoutOfCountryCoverageDescription;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public outOfServiceAreaCoverageDataTable outOfServiceAreaCoverage {
            get {
                return this.tableoutOfServiceAreaCoverage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public outOfServiceAreaCoverageDescriptionDataTable outOfServiceAreaCoverageDescription {
            get {
                return this.tableoutOfServiceAreaCoverageDescription;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public nationalNetworkDataTable nationalNetwork {
            get {
                return this.tablenationalNetwork;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public summaryBenefitAndCoverageURLDataTable summaryBenefitAndCoverageURL {
            get {
                return this.tablesummaryBenefitAndCoverageURL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public enrollmentPaymentURLDataTable enrollmentPaymentURL {
            get {
                return this.tableenrollmentPaymentURL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public planBrochureDataTable planBrochure {
            get {
                return this.tableplanBrochure;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public costShareVariancesListDataTable costShareVariancesList {
            get {
                return this.tablecostShareVariancesList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public costShareVarianceDataTable costShareVariance {
            get {
                return this.tablecostShareVariance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public planIdDataTable planId {
            get {
                return this.tableplanId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public csrVariationTypeDataTable csrVariationType {
            get {
                return this.tablecsrVariationType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public issuerActuarialValueDataTable issuerActuarialValue {
            get {
                return this.tableissuerActuarialValue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public avCalculatorOutputNumberDataTable avCalculatorOutputNumber {
            get {
                return this.tableavCalculatorOutputNumber;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public medicalAndDrugDeductiblesIntegratedDataTable medicalAndDrugDeductiblesIntegrated {
            get {
                return this.tablemedicalAndDrugDeductiblesIntegrated;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public medicalAndDrugMaxOutOfPocketIntegratedDataTable medicalAndDrugMaxOutOfPocketIntegrated {
            get {
                return this.tablemedicalAndDrugMaxOutOfPocketIntegrated;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public multipleProviderTiersDataTable multipleProviderTiers {
            get {
                return this.tablemultipleProviderTiers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public firstTierUtilizationDataTable firstTierUtilization {
            get {
                return this.tablefirstTierUtilization;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public secondTierUtilizationDataTable secondTierUtilization {
            get {
                return this.tablesecondTierUtilization;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sbcDataTable sbc {
            get {
                return this.tablesbc;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public havingBabyDeductibleDataTable havingBabyDeductible {
            get {
                return this.tablehavingBabyDeductible;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public havingBabyCoPaymentDataTable havingBabyCoPayment {
            get {
                return this.tablehavingBabyCoPayment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public havingBabyCoInsuranceDataTable havingBabyCoInsurance {
            get {
                return this.tablehavingBabyCoInsurance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public havingBabyLimitDataTable havingBabyLimit {
            get {
                return this.tablehavingBabyLimit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public havingDiabetesDeductibleDataTable havingDiabetesDeductible {
            get {
                return this.tablehavingDiabetesDeductible;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public havingDiabetesCopayDataTable havingDiabetesCopay {
            get {
                return this.tablehavingDiabetesCopay;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public havingDiabetesCoInsuranceDataTable havingDiabetesCoInsurance {
            get {
                return this.tablehavingDiabetesCoInsurance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public havingDiabetesLimitDataTable havingDiabetesLimit {
            get {
                return this.tablehavingDiabetesLimit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public moopListDataTable moopList {
            get {
                return this.tablemoopList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public moopDataTable moop {
            get {
                return this.tablemoop;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public nameDataTable name {
            get {
                return this.tablename;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public inNetworkTier1IndividualAmountDataTable inNetworkTier1IndividualAmount {
            get {
                return this.tableinNetworkTier1IndividualAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public inNetworkTier1FamilyAmountDataTable inNetworkTier1FamilyAmount {
            get {
                return this.tableinNetworkTier1FamilyAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public inNetworkTier2IndividualAmountDataTable inNetworkTier2IndividualAmount {
            get {
                return this.tableinNetworkTier2IndividualAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public inNetworkTier2FamilyAmountDataTable inNetworkTier2FamilyAmount {
            get {
                return this.tableinNetworkTier2FamilyAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public outOfNetworkIndividualAmountDataTable outOfNetworkIndividualAmount {
            get {
                return this.tableoutOfNetworkIndividualAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public outOfNetworkFamilyAmountDataTable outOfNetworkFamilyAmount {
            get {
                return this.tableoutOfNetworkFamilyAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public combinedInOutNetworkIndividualAmountDataTable combinedInOutNetworkIndividualAmount {
            get {
                return this.tablecombinedInOutNetworkIndividualAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public combinedInOutNetworkFamilyAmountDataTable combinedInOutNetworkFamilyAmount {
            get {
                return this.tablecombinedInOutNetworkFamilyAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public planDeductibleListDataTable planDeductibleList {
            get {
                return this.tableplanDeductibleList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public planDeductibleDataTable planDeductible {
            get {
                return this.tableplanDeductible;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public deductibleTypeDataTable deductibleType {
            get {
                return this.tabledeductibleType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public inNetworkTier1IndividualDataTable inNetworkTier1Individual {
            get {
                return this.tableinNetworkTier1Individual;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public inNetworkTier1FamilyDataTable inNetworkTier1Family {
            get {
                return this.tableinNetworkTier1Family;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public coinsuranceInNetworkTier1DataTable coinsuranceInNetworkTier1 {
            get {
                return this.tablecoinsuranceInNetworkTier1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public inNetworkTierTwoIndividualDataTable inNetworkTierTwoIndividual {
            get {
                return this.tableinNetworkTierTwoIndividual;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public inNetworkTierTwoFamilyDataTable inNetworkTierTwoFamily {
            get {
                return this.tableinNetworkTierTwoFamily;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public coinsuranceInNetworkTier2DataTable coinsuranceInNetworkTier2 {
            get {
                return this.tablecoinsuranceInNetworkTier2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public outOfNetworkIndividualDataTable outOfNetworkIndividual {
            get {
                return this.tableoutOfNetworkIndividual;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public outOfNetworkFamilyDataTable outOfNetworkFamily {
            get {
                return this.tableoutOfNetworkFamily;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public combinedInOrOutNetworkIndividualDataTable combinedInOrOutNetworkIndividual {
            get {
                return this.tablecombinedInOrOutNetworkIndividual;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public combinedInOrOutNetworkFamilyDataTable combinedInOrOutNetworkFamily {
            get {
                return this.tablecombinedInOrOutNetworkFamily;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public serviceVisitListDataTable serviceVisitList {
            get {
                return this.tableserviceVisitList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public serviceVisitDataTable serviceVisit {
            get {
                return this.tableserviceVisit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public visitTypeDataTable visitType {
            get {
                return this.tablevisitType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public copayInNetworkTier1DataTable copayInNetworkTier1 {
            get {
                return this.tablecopayInNetworkTier1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public copayInNetworkTier2DataTable copayInNetworkTier2 {
            get {
                return this.tablecopayInNetworkTier2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public copayOutOfNetworkDataTable copayOutOfNetwork {
            get {
                return this.tablecopayOutOfNetwork;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public coInsuranceInNetworkTier1DataTable coInsuranceInNetworkTier1 {
            get {
                return this.tablecoInsuranceInNetworkTier1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public coInsuranceInNetworkTier2DataTable coInsuranceInNetworkTier2 {
            get {
                return this.tablecoInsuranceInNetworkTier2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public coInsuranceOutOfNetworkDataTable coInsuranceOutOfNetwork {
            get {
                return this.tablecoInsuranceOutOfNetwork;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            planBenefitTemplateVO cln = ((planBenefitTemplateVO)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["planMarketingName"] != null)) {
                    base.Tables.Add(new planMarketingNameDataTable(ds.Tables["planMarketingName"]));
                }
                if ((ds.Tables["metalLevel"] != null)) {
                    base.Tables.Add(new metalLevelDataTable(ds.Tables["metalLevel"]));
                }
                if ((ds.Tables["packagesList"] != null)) {
                    base.Tables.Add(new packagesListDataTable(ds.Tables["packagesList"]));
                }
                if ((ds.Tables["packages"] != null)) {
                    base.Tables.Add(new packagesDataTable(ds.Tables["packages"]));
                }
                if ((ds.Tables["header"] != null)) {
                    base.Tables.Add(new headerDataTable(ds.Tables["header"]));
                }
                if ((ds.Tables["issuerId"] != null)) {
                    base.Tables.Add(new issuerIdDataTable(ds.Tables["issuerId"]));
                }
                if ((ds.Tables["statePostalCode"] != null)) {
                    base.Tables.Add(new statePostalCodeDataTable(ds.Tables["statePostalCode"]));
                }
                if ((ds.Tables["marketCoverage"] != null)) {
                    base.Tables.Add(new marketCoverageDataTable(ds.Tables["marketCoverage"]));
                }
                if ((ds.Tables["dentalPlanOnlyInd"] != null)) {
                    base.Tables.Add(new dentalPlanOnlyIndDataTable(ds.Tables["dentalPlanOnlyInd"]));
                }
                if ((ds.Tables["tin"] != null)) {
                    base.Tables.Add(new tinDataTable(ds.Tables["tin"]));
                }
                if ((ds.Tables["benefitsList"] != null)) {
                    base.Tables.Add(new benefitsListDataTable(ds.Tables["benefitsList"]));
                }
                if ((ds.Tables["benefits"] != null)) {
                    base.Tables.Add(new benefitsDataTable(ds.Tables["benefits"]));
                }
                if ((ds.Tables["benefitTypeCode"] != null)) {
                    base.Tables.Add(new benefitTypeCodeDataTable(ds.Tables["benefitTypeCode"]));
                }
                if ((ds.Tables["isEHB"] != null)) {
                    base.Tables.Add(new isEHBDataTable(ds.Tables["isEHB"]));
                }
                if ((ds.Tables["isStateMandate"] != null)) {
                    base.Tables.Add(new isStateMandateDataTable(ds.Tables["isStateMandate"]));
                }
                if ((ds.Tables["isBenefitCovered"] != null)) {
                    base.Tables.Add(new isBenefitCoveredDataTable(ds.Tables["isBenefitCovered"]));
                }
                if ((ds.Tables["serviceLimit"] != null)) {
                    base.Tables.Add(new serviceLimitDataTable(ds.Tables["serviceLimit"]));
                }
                if ((ds.Tables["quantityLimit"] != null)) {
                    base.Tables.Add(new quantityLimitDataTable(ds.Tables["quantityLimit"]));
                }
                if ((ds.Tables["unitLimit"] != null)) {
                    base.Tables.Add(new unitLimitDataTable(ds.Tables["unitLimit"]));
                }
                if ((ds.Tables["minimumStay"] != null)) {
                    base.Tables.Add(new minimumStayDataTable(ds.Tables["minimumStay"]));
                }
                if ((ds.Tables["exclusion"] != null)) {
                    base.Tables.Add(new exclusionDataTable(ds.Tables["exclusion"]));
                }
                if ((ds.Tables["explanation"] != null)) {
                    base.Tables.Add(new explanationDataTable(ds.Tables["explanation"]));
                }
                if ((ds.Tables["ehbVarianceReason"] != null)) {
                    base.Tables.Add(new ehbVarianceReasonDataTable(ds.Tables["ehbVarianceReason"]));
                }
                if ((ds.Tables["subjectToDeductibleTier1"] != null)) {
                    base.Tables.Add(new subjectToDeductibleTier1DataTable(ds.Tables["subjectToDeductibleTier1"]));
                }
                if ((ds.Tables["subjectToDeductibleTier2"] != null)) {
                    base.Tables.Add(new subjectToDeductibleTier2DataTable(ds.Tables["subjectToDeductibleTier2"]));
                }
                if ((ds.Tables["excludedInNetworkMOOP"] != null)) {
                    base.Tables.Add(new excludedInNetworkMOOPDataTable(ds.Tables["excludedInNetworkMOOP"]));
                }
                if ((ds.Tables["excludedOutOfNetworkMOOP"] != null)) {
                    base.Tables.Add(new excludedOutOfNetworkMOOPDataTable(ds.Tables["excludedOutOfNetworkMOOP"]));
                }
                if ((ds.Tables["plansList"] != null)) {
                    base.Tables.Add(new plansListDataTable(ds.Tables["plansList"]));
                }
                if ((ds.Tables["plans"] != null)) {
                    base.Tables.Add(new plansDataTable(ds.Tables["plans"]));
                }
                if ((ds.Tables["planAttributes"] != null)) {
                    base.Tables.Add(new planAttributesDataTable(ds.Tables["planAttributes"]));
                }
                if ((ds.Tables["standardComponentID"] != null)) {
                    base.Tables.Add(new standardComponentIDDataTable(ds.Tables["standardComponentID"]));
                }
                if ((ds.Tables["hiosProductID"] != null)) {
                    base.Tables.Add(new hiosProductIDDataTable(ds.Tables["hiosProductID"]));
                }
                if ((ds.Tables["hpid"] != null)) {
                    base.Tables.Add(new hpidDataTable(ds.Tables["hpid"]));
                }
                if ((ds.Tables["networkID"] != null)) {
                    base.Tables.Add(new networkIDDataTable(ds.Tables["networkID"]));
                }
                if ((ds.Tables["serviceAreaID"] != null)) {
                    base.Tables.Add(new serviceAreaIDDataTable(ds.Tables["serviceAreaID"]));
                }
                if ((ds.Tables["formularyID"] != null)) {
                    base.Tables.Add(new formularyIDDataTable(ds.Tables["formularyID"]));
                }
                if ((ds.Tables["isNewPlan"] != null)) {
                    base.Tables.Add(new isNewPlanDataTable(ds.Tables["isNewPlan"]));
                }
                if ((ds.Tables["planType"] != null)) {
                    base.Tables.Add(new planTypeDataTable(ds.Tables["planType"]));
                }
                if ((ds.Tables["uniquePlanDesign"] != null)) {
                    base.Tables.Add(new uniquePlanDesignDataTable(ds.Tables["uniquePlanDesign"]));
                }
                if ((ds.Tables["qhpOrNonQhp"] != null)) {
                    base.Tables.Add(new qhpOrNonQhpDataTable(ds.Tables["qhpOrNonQhp"]));
                }
                if ((ds.Tables["insurancePlanPregnancyNoticeReqInd"] != null)) {
                    base.Tables.Add(new insurancePlanPregnancyNoticeReqIndDataTable(ds.Tables["insurancePlanPregnancyNoticeReqInd"]));
                }
                if ((ds.Tables["isSpecialistReferralRequired"] != null)) {
                    base.Tables.Add(new isSpecialistReferralRequiredDataTable(ds.Tables["isSpecialistReferralRequired"]));
                }
                if ((ds.Tables["healthCareSpecialistReferralType"] != null)) {
                    base.Tables.Add(new healthCareSpecialistReferralTypeDataTable(ds.Tables["healthCareSpecialistReferralType"]));
                }
                if ((ds.Tables["insurancePlanBenefitExclusionText"] != null)) {
                    base.Tables.Add(new insurancePlanBenefitExclusionTextDataTable(ds.Tables["insurancePlanBenefitExclusionText"]));
                }
                if ((ds.Tables["indianPlanVariation"] != null)) {
                    base.Tables.Add(new indianPlanVariationDataTable(ds.Tables["indianPlanVariation"]));
                }
                if ((ds.Tables["hsaEligibility"] != null)) {
                    base.Tables.Add(new hsaEligibilityDataTable(ds.Tables["hsaEligibility"]));
                }
                if ((ds.Tables["employerHSAHRAContributionIndicator"] != null)) {
                    base.Tables.Add(new employerHSAHRAContributionIndicatorDataTable(ds.Tables["employerHSAHRAContributionIndicator"]));
                }
                if ((ds.Tables["empContributionAmountForHSAOrHRA"] != null)) {
                    base.Tables.Add(new empContributionAmountForHSAOrHRADataTable(ds.Tables["empContributionAmountForHSAOrHRA"]));
                }
                if ((ds.Tables["childOnlyOffering"] != null)) {
                    base.Tables.Add(new childOnlyOfferingDataTable(ds.Tables["childOnlyOffering"]));
                }
                if ((ds.Tables["childOnlyPlanID"] != null)) {
                    base.Tables.Add(new childOnlyPlanIDDataTable(ds.Tables["childOnlyPlanID"]));
                }
                if ((ds.Tables["isWellnessProgramOffered"] != null)) {
                    base.Tables.Add(new isWellnessProgramOfferedDataTable(ds.Tables["isWellnessProgramOffered"]));
                }
                if ((ds.Tables["isDiseaseMgmtProgramsOffered"] != null)) {
                    base.Tables.Add(new isDiseaseMgmtProgramsOfferedDataTable(ds.Tables["isDiseaseMgmtProgramsOffered"]));
                }
                if ((ds.Tables["ehbApportionmentForPediatricDental"] != null)) {
                    base.Tables.Add(new ehbApportionmentForPediatricDentalDataTable(ds.Tables["ehbApportionmentForPediatricDental"]));
                }
                if ((ds.Tables["guaranteedVsEstimatedRate"] != null)) {
                    base.Tables.Add(new guaranteedVsEstimatedRateDataTable(ds.Tables["guaranteedVsEstimatedRate"]));
                }
                if ((ds.Tables["maximumCoinsuranceForSpecialtyDrugs"] != null)) {
                    base.Tables.Add(new maximumCoinsuranceForSpecialtyDrugsDataTable(ds.Tables["maximumCoinsuranceForSpecialtyDrugs"]));
                }
                if ((ds.Tables["maxNumDaysForChargingInpatientCopay"] != null)) {
                    base.Tables.Add(new maxNumDaysForChargingInpatientCopayDataTable(ds.Tables["maxNumDaysForChargingInpatientCopay"]));
                }
                if ((ds.Tables["beginPrimaryCareCostSharingAfterSetNumberVisits"] != null)) {
                    base.Tables.Add(new beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable(ds.Tables["beginPrimaryCareCostSharingAfterSetNumberVisits"]));
                }
                if ((ds.Tables["beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays"] != null)) {
                    base.Tables.Add(new beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable(ds.Tables["beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays"]));
                }
                if ((ds.Tables["planEffectiveDate"] != null)) {
                    base.Tables.Add(new planEffectiveDateDataTable(ds.Tables["planEffectiveDate"]));
                }
                if ((ds.Tables["planExpirationDate"] != null)) {
                    base.Tables.Add(new planExpirationDateDataTable(ds.Tables["planExpirationDate"]));
                }
                if ((ds.Tables["outOfCountryCoverage"] != null)) {
                    base.Tables.Add(new outOfCountryCoverageDataTable(ds.Tables["outOfCountryCoverage"]));
                }
                if ((ds.Tables["outOfCountryCoverageDescription"] != null)) {
                    base.Tables.Add(new outOfCountryCoverageDescriptionDataTable(ds.Tables["outOfCountryCoverageDescription"]));
                }
                if ((ds.Tables["outOfServiceAreaCoverage"] != null)) {
                    base.Tables.Add(new outOfServiceAreaCoverageDataTable(ds.Tables["outOfServiceAreaCoverage"]));
                }
                if ((ds.Tables["outOfServiceAreaCoverageDescription"] != null)) {
                    base.Tables.Add(new outOfServiceAreaCoverageDescriptionDataTable(ds.Tables["outOfServiceAreaCoverageDescription"]));
                }
                if ((ds.Tables["nationalNetwork"] != null)) {
                    base.Tables.Add(new nationalNetworkDataTable(ds.Tables["nationalNetwork"]));
                }
                if ((ds.Tables["summaryBenefitAndCoverageURL"] != null)) {
                    base.Tables.Add(new summaryBenefitAndCoverageURLDataTable(ds.Tables["summaryBenefitAndCoverageURL"]));
                }
                if ((ds.Tables["enrollmentPaymentURL"] != null)) {
                    base.Tables.Add(new enrollmentPaymentURLDataTable(ds.Tables["enrollmentPaymentURL"]));
                }
                if ((ds.Tables["planBrochure"] != null)) {
                    base.Tables.Add(new planBrochureDataTable(ds.Tables["planBrochure"]));
                }
                if ((ds.Tables["costShareVariancesList"] != null)) {
                    base.Tables.Add(new costShareVariancesListDataTable(ds.Tables["costShareVariancesList"]));
                }
                if ((ds.Tables["costShareVariance"] != null)) {
                    base.Tables.Add(new costShareVarianceDataTable(ds.Tables["costShareVariance"]));
                }
                if ((ds.Tables["planId"] != null)) {
                    base.Tables.Add(new planIdDataTable(ds.Tables["planId"]));
                }
                if ((ds.Tables["csrVariationType"] != null)) {
                    base.Tables.Add(new csrVariationTypeDataTable(ds.Tables["csrVariationType"]));
                }
                if ((ds.Tables["issuerActuarialValue"] != null)) {
                    base.Tables.Add(new issuerActuarialValueDataTable(ds.Tables["issuerActuarialValue"]));
                }
                if ((ds.Tables["avCalculatorOutputNumber"] != null)) {
                    base.Tables.Add(new avCalculatorOutputNumberDataTable(ds.Tables["avCalculatorOutputNumber"]));
                }
                if ((ds.Tables["medicalAndDrugDeductiblesIntegrated"] != null)) {
                    base.Tables.Add(new medicalAndDrugDeductiblesIntegratedDataTable(ds.Tables["medicalAndDrugDeductiblesIntegrated"]));
                }
                if ((ds.Tables["medicalAndDrugMaxOutOfPocketIntegrated"] != null)) {
                    base.Tables.Add(new medicalAndDrugMaxOutOfPocketIntegratedDataTable(ds.Tables["medicalAndDrugMaxOutOfPocketIntegrated"]));
                }
                if ((ds.Tables["multipleProviderTiers"] != null)) {
                    base.Tables.Add(new multipleProviderTiersDataTable(ds.Tables["multipleProviderTiers"]));
                }
                if ((ds.Tables["firstTierUtilization"] != null)) {
                    base.Tables.Add(new firstTierUtilizationDataTable(ds.Tables["firstTierUtilization"]));
                }
                if ((ds.Tables["secondTierUtilization"] != null)) {
                    base.Tables.Add(new secondTierUtilizationDataTable(ds.Tables["secondTierUtilization"]));
                }
                if ((ds.Tables["sbc"] != null)) {
                    base.Tables.Add(new sbcDataTable(ds.Tables["sbc"]));
                }
                if ((ds.Tables["havingBabyDeductible"] != null)) {
                    base.Tables.Add(new havingBabyDeductibleDataTable(ds.Tables["havingBabyDeductible"]));
                }
                if ((ds.Tables["havingBabyCoPayment"] != null)) {
                    base.Tables.Add(new havingBabyCoPaymentDataTable(ds.Tables["havingBabyCoPayment"]));
                }
                if ((ds.Tables["havingBabyCoInsurance"] != null)) {
                    base.Tables.Add(new havingBabyCoInsuranceDataTable(ds.Tables["havingBabyCoInsurance"]));
                }
                if ((ds.Tables["havingBabyLimit"] != null)) {
                    base.Tables.Add(new havingBabyLimitDataTable(ds.Tables["havingBabyLimit"]));
                }
                if ((ds.Tables["havingDiabetesDeductible"] != null)) {
                    base.Tables.Add(new havingDiabetesDeductibleDataTable(ds.Tables["havingDiabetesDeductible"]));
                }
                if ((ds.Tables["havingDiabetesCopay"] != null)) {
                    base.Tables.Add(new havingDiabetesCopayDataTable(ds.Tables["havingDiabetesCopay"]));
                }
                if ((ds.Tables["havingDiabetesCoInsurance"] != null)) {
                    base.Tables.Add(new havingDiabetesCoInsuranceDataTable(ds.Tables["havingDiabetesCoInsurance"]));
                }
                if ((ds.Tables["havingDiabetesLimit"] != null)) {
                    base.Tables.Add(new havingDiabetesLimitDataTable(ds.Tables["havingDiabetesLimit"]));
                }
                if ((ds.Tables["moopList"] != null)) {
                    base.Tables.Add(new moopListDataTable(ds.Tables["moopList"]));
                }
                if ((ds.Tables["moop"] != null)) {
                    base.Tables.Add(new moopDataTable(ds.Tables["moop"]));
                }
                if ((ds.Tables["name"] != null)) {
                    base.Tables.Add(new nameDataTable(ds.Tables["name"]));
                }
                if ((ds.Tables["inNetworkTier1IndividualAmount"] != null)) {
                    base.Tables.Add(new inNetworkTier1IndividualAmountDataTable(ds.Tables["inNetworkTier1IndividualAmount"]));
                }
                if ((ds.Tables["inNetworkTier1FamilyAmount"] != null)) {
                    base.Tables.Add(new inNetworkTier1FamilyAmountDataTable(ds.Tables["inNetworkTier1FamilyAmount"]));
                }
                if ((ds.Tables["inNetworkTier2IndividualAmount"] != null)) {
                    base.Tables.Add(new inNetworkTier2IndividualAmountDataTable(ds.Tables["inNetworkTier2IndividualAmount"]));
                }
                if ((ds.Tables["inNetworkTier2FamilyAmount"] != null)) {
                    base.Tables.Add(new inNetworkTier2FamilyAmountDataTable(ds.Tables["inNetworkTier2FamilyAmount"]));
                }
                if ((ds.Tables["outOfNetworkIndividualAmount"] != null)) {
                    base.Tables.Add(new outOfNetworkIndividualAmountDataTable(ds.Tables["outOfNetworkIndividualAmount"]));
                }
                if ((ds.Tables["outOfNetworkFamilyAmount"] != null)) {
                    base.Tables.Add(new outOfNetworkFamilyAmountDataTable(ds.Tables["outOfNetworkFamilyAmount"]));
                }
                if ((ds.Tables["combinedInOutNetworkIndividualAmount"] != null)) {
                    base.Tables.Add(new combinedInOutNetworkIndividualAmountDataTable(ds.Tables["combinedInOutNetworkIndividualAmount"]));
                }
                if ((ds.Tables["combinedInOutNetworkFamilyAmount"] != null)) {
                    base.Tables.Add(new combinedInOutNetworkFamilyAmountDataTable(ds.Tables["combinedInOutNetworkFamilyAmount"]));
                }
                if ((ds.Tables["planDeductibleList"] != null)) {
                    base.Tables.Add(new planDeductibleListDataTable(ds.Tables["planDeductibleList"]));
                }
                if ((ds.Tables["planDeductible"] != null)) {
                    base.Tables.Add(new planDeductibleDataTable(ds.Tables["planDeductible"]));
                }
                if ((ds.Tables["deductibleType"] != null)) {
                    base.Tables.Add(new deductibleTypeDataTable(ds.Tables["deductibleType"]));
                }
                if ((ds.Tables["inNetworkTier1Individual"] != null)) {
                    base.Tables.Add(new inNetworkTier1IndividualDataTable(ds.Tables["inNetworkTier1Individual"]));
                }
                if ((ds.Tables["inNetworkTier1Family"] != null)) {
                    base.Tables.Add(new inNetworkTier1FamilyDataTable(ds.Tables["inNetworkTier1Family"]));
                }
                if ((ds.Tables["coinsuranceInNetworkTier1"] != null)) {
                    base.Tables.Add(new coinsuranceInNetworkTier1DataTable(ds.Tables["coinsuranceInNetworkTier1"]));
                }
                if ((ds.Tables["inNetworkTierTwoIndividual"] != null)) {
                    base.Tables.Add(new inNetworkTierTwoIndividualDataTable(ds.Tables["inNetworkTierTwoIndividual"]));
                }
                if ((ds.Tables["inNetworkTierTwoFamily"] != null)) {
                    base.Tables.Add(new inNetworkTierTwoFamilyDataTable(ds.Tables["inNetworkTierTwoFamily"]));
                }
                if ((ds.Tables["coinsuranceInNetworkTier2"] != null)) {
                    base.Tables.Add(new coinsuranceInNetworkTier2DataTable(ds.Tables["coinsuranceInNetworkTier2"]));
                }
                if ((ds.Tables["outOfNetworkIndividual"] != null)) {
                    base.Tables.Add(new outOfNetworkIndividualDataTable(ds.Tables["outOfNetworkIndividual"]));
                }
                if ((ds.Tables["outOfNetworkFamily"] != null)) {
                    base.Tables.Add(new outOfNetworkFamilyDataTable(ds.Tables["outOfNetworkFamily"]));
                }
                if ((ds.Tables["combinedInOrOutNetworkIndividual"] != null)) {
                    base.Tables.Add(new combinedInOrOutNetworkIndividualDataTable(ds.Tables["combinedInOrOutNetworkIndividual"]));
                }
                if ((ds.Tables["combinedInOrOutNetworkFamily"] != null)) {
                    base.Tables.Add(new combinedInOrOutNetworkFamilyDataTable(ds.Tables["combinedInOrOutNetworkFamily"]));
                }
                if ((ds.Tables["serviceVisitList"] != null)) {
                    base.Tables.Add(new serviceVisitListDataTable(ds.Tables["serviceVisitList"]));
                }
                if ((ds.Tables["serviceVisit"] != null)) {
                    base.Tables.Add(new serviceVisitDataTable(ds.Tables["serviceVisit"]));
                }
                if ((ds.Tables["visitType"] != null)) {
                    base.Tables.Add(new visitTypeDataTable(ds.Tables["visitType"]));
                }
                if ((ds.Tables["copayInNetworkTier1"] != null)) {
                    base.Tables.Add(new copayInNetworkTier1DataTable(ds.Tables["copayInNetworkTier1"]));
                }
                if ((ds.Tables["copayInNetworkTier2"] != null)) {
                    base.Tables.Add(new copayInNetworkTier2DataTable(ds.Tables["copayInNetworkTier2"]));
                }
                if ((ds.Tables["copayOutOfNetwork"] != null)) {
                    base.Tables.Add(new copayOutOfNetworkDataTable(ds.Tables["copayOutOfNetwork"]));
                }
                if ((ds.Tables["coInsuranceInNetworkTier1"] != null)) {
                    base.Tables.Add(new coInsuranceInNetworkTier1DataTable(ds.Tables["coInsuranceInNetworkTier1"]));
                }
                if ((ds.Tables["coInsuranceInNetworkTier2"] != null)) {
                    base.Tables.Add(new coInsuranceInNetworkTier2DataTable(ds.Tables["coInsuranceInNetworkTier2"]));
                }
                if ((ds.Tables["coInsuranceOutOfNetwork"] != null)) {
                    base.Tables.Add(new coInsuranceOutOfNetworkDataTable(ds.Tables["coInsuranceOutOfNetwork"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableplanMarketingName = ((planMarketingNameDataTable)(base.Tables["planMarketingName"]));
            if ((initTable == true)) {
                if ((this.tableplanMarketingName != null)) {
                    this.tableplanMarketingName.InitVars();
                }
            }
            this.tablemetalLevel = ((metalLevelDataTable)(base.Tables["metalLevel"]));
            if ((initTable == true)) {
                if ((this.tablemetalLevel != null)) {
                    this.tablemetalLevel.InitVars();
                }
            }
            this.tablepackagesList = ((packagesListDataTable)(base.Tables["packagesList"]));
            if ((initTable == true)) {
                if ((this.tablepackagesList != null)) {
                    this.tablepackagesList.InitVars();
                }
            }
            this.tablepackages = ((packagesDataTable)(base.Tables["packages"]));
            if ((initTable == true)) {
                if ((this.tablepackages != null)) {
                    this.tablepackages.InitVars();
                }
            }
            this.tableheader = ((headerDataTable)(base.Tables["header"]));
            if ((initTable == true)) {
                if ((this.tableheader != null)) {
                    this.tableheader.InitVars();
                }
            }
            this.tableissuerId = ((issuerIdDataTable)(base.Tables["issuerId"]));
            if ((initTable == true)) {
                if ((this.tableissuerId != null)) {
                    this.tableissuerId.InitVars();
                }
            }
            this.tablestatePostalCode = ((statePostalCodeDataTable)(base.Tables["statePostalCode"]));
            if ((initTable == true)) {
                if ((this.tablestatePostalCode != null)) {
                    this.tablestatePostalCode.InitVars();
                }
            }
            this.tablemarketCoverage = ((marketCoverageDataTable)(base.Tables["marketCoverage"]));
            if ((initTable == true)) {
                if ((this.tablemarketCoverage != null)) {
                    this.tablemarketCoverage.InitVars();
                }
            }
            this.tabledentalPlanOnlyInd = ((dentalPlanOnlyIndDataTable)(base.Tables["dentalPlanOnlyInd"]));
            if ((initTable == true)) {
                if ((this.tabledentalPlanOnlyInd != null)) {
                    this.tabledentalPlanOnlyInd.InitVars();
                }
            }
            this.tabletin = ((tinDataTable)(base.Tables["tin"]));
            if ((initTable == true)) {
                if ((this.tabletin != null)) {
                    this.tabletin.InitVars();
                }
            }
            this.tablebenefitsList = ((benefitsListDataTable)(base.Tables["benefitsList"]));
            if ((initTable == true)) {
                if ((this.tablebenefitsList != null)) {
                    this.tablebenefitsList.InitVars();
                }
            }
            this.tablebenefits = ((benefitsDataTable)(base.Tables["benefits"]));
            if ((initTable == true)) {
                if ((this.tablebenefits != null)) {
                    this.tablebenefits.InitVars();
                }
            }
            this.tablebenefitTypeCode = ((benefitTypeCodeDataTable)(base.Tables["benefitTypeCode"]));
            if ((initTable == true)) {
                if ((this.tablebenefitTypeCode != null)) {
                    this.tablebenefitTypeCode.InitVars();
                }
            }
            this.tableisEHB = ((isEHBDataTable)(base.Tables["isEHB"]));
            if ((initTable == true)) {
                if ((this.tableisEHB != null)) {
                    this.tableisEHB.InitVars();
                }
            }
            this.tableisStateMandate = ((isStateMandateDataTable)(base.Tables["isStateMandate"]));
            if ((initTable == true)) {
                if ((this.tableisStateMandate != null)) {
                    this.tableisStateMandate.InitVars();
                }
            }
            this.tableisBenefitCovered = ((isBenefitCoveredDataTable)(base.Tables["isBenefitCovered"]));
            if ((initTable == true)) {
                if ((this.tableisBenefitCovered != null)) {
                    this.tableisBenefitCovered.InitVars();
                }
            }
            this.tableserviceLimit = ((serviceLimitDataTable)(base.Tables["serviceLimit"]));
            if ((initTable == true)) {
                if ((this.tableserviceLimit != null)) {
                    this.tableserviceLimit.InitVars();
                }
            }
            this.tablequantityLimit = ((quantityLimitDataTable)(base.Tables["quantityLimit"]));
            if ((initTable == true)) {
                if ((this.tablequantityLimit != null)) {
                    this.tablequantityLimit.InitVars();
                }
            }
            this.tableunitLimit = ((unitLimitDataTable)(base.Tables["unitLimit"]));
            if ((initTable == true)) {
                if ((this.tableunitLimit != null)) {
                    this.tableunitLimit.InitVars();
                }
            }
            this.tableminimumStay = ((minimumStayDataTable)(base.Tables["minimumStay"]));
            if ((initTable == true)) {
                if ((this.tableminimumStay != null)) {
                    this.tableminimumStay.InitVars();
                }
            }
            this.tableexclusion = ((exclusionDataTable)(base.Tables["exclusion"]));
            if ((initTable == true)) {
                if ((this.tableexclusion != null)) {
                    this.tableexclusion.InitVars();
                }
            }
            this.tableexplanation = ((explanationDataTable)(base.Tables["explanation"]));
            if ((initTable == true)) {
                if ((this.tableexplanation != null)) {
                    this.tableexplanation.InitVars();
                }
            }
            this.tableehbVarianceReason = ((ehbVarianceReasonDataTable)(base.Tables["ehbVarianceReason"]));
            if ((initTable == true)) {
                if ((this.tableehbVarianceReason != null)) {
                    this.tableehbVarianceReason.InitVars();
                }
            }
            this.tablesubjectToDeductibleTier1 = ((subjectToDeductibleTier1DataTable)(base.Tables["subjectToDeductibleTier1"]));
            if ((initTable == true)) {
                if ((this.tablesubjectToDeductibleTier1 != null)) {
                    this.tablesubjectToDeductibleTier1.InitVars();
                }
            }
            this.tablesubjectToDeductibleTier2 = ((subjectToDeductibleTier2DataTable)(base.Tables["subjectToDeductibleTier2"]));
            if ((initTable == true)) {
                if ((this.tablesubjectToDeductibleTier2 != null)) {
                    this.tablesubjectToDeductibleTier2.InitVars();
                }
            }
            this.tableexcludedInNetworkMOOP = ((excludedInNetworkMOOPDataTable)(base.Tables["excludedInNetworkMOOP"]));
            if ((initTable == true)) {
                if ((this.tableexcludedInNetworkMOOP != null)) {
                    this.tableexcludedInNetworkMOOP.InitVars();
                }
            }
            this.tableexcludedOutOfNetworkMOOP = ((excludedOutOfNetworkMOOPDataTable)(base.Tables["excludedOutOfNetworkMOOP"]));
            if ((initTable == true)) {
                if ((this.tableexcludedOutOfNetworkMOOP != null)) {
                    this.tableexcludedOutOfNetworkMOOP.InitVars();
                }
            }
            this.tableplansList = ((plansListDataTable)(base.Tables["plansList"]));
            if ((initTable == true)) {
                if ((this.tableplansList != null)) {
                    this.tableplansList.InitVars();
                }
            }
            this.tableplans = ((plansDataTable)(base.Tables["plans"]));
            if ((initTable == true)) {
                if ((this.tableplans != null)) {
                    this.tableplans.InitVars();
                }
            }
            this.tableplanAttributes = ((planAttributesDataTable)(base.Tables["planAttributes"]));
            if ((initTable == true)) {
                if ((this.tableplanAttributes != null)) {
                    this.tableplanAttributes.InitVars();
                }
            }
            this.tablestandardComponentID = ((standardComponentIDDataTable)(base.Tables["standardComponentID"]));
            if ((initTable == true)) {
                if ((this.tablestandardComponentID != null)) {
                    this.tablestandardComponentID.InitVars();
                }
            }
            this.tablehiosProductID = ((hiosProductIDDataTable)(base.Tables["hiosProductID"]));
            if ((initTable == true)) {
                if ((this.tablehiosProductID != null)) {
                    this.tablehiosProductID.InitVars();
                }
            }
            this.tablehpid = ((hpidDataTable)(base.Tables["hpid"]));
            if ((initTable == true)) {
                if ((this.tablehpid != null)) {
                    this.tablehpid.InitVars();
                }
            }
            this.tablenetworkID = ((networkIDDataTable)(base.Tables["networkID"]));
            if ((initTable == true)) {
                if ((this.tablenetworkID != null)) {
                    this.tablenetworkID.InitVars();
                }
            }
            this.tableserviceAreaID = ((serviceAreaIDDataTable)(base.Tables["serviceAreaID"]));
            if ((initTable == true)) {
                if ((this.tableserviceAreaID != null)) {
                    this.tableserviceAreaID.InitVars();
                }
            }
            this.tableformularyID = ((formularyIDDataTable)(base.Tables["formularyID"]));
            if ((initTable == true)) {
                if ((this.tableformularyID != null)) {
                    this.tableformularyID.InitVars();
                }
            }
            this.tableisNewPlan = ((isNewPlanDataTable)(base.Tables["isNewPlan"]));
            if ((initTable == true)) {
                if ((this.tableisNewPlan != null)) {
                    this.tableisNewPlan.InitVars();
                }
            }
            this.tableplanType = ((planTypeDataTable)(base.Tables["planType"]));
            if ((initTable == true)) {
                if ((this.tableplanType != null)) {
                    this.tableplanType.InitVars();
                }
            }
            this.tableuniquePlanDesign = ((uniquePlanDesignDataTable)(base.Tables["uniquePlanDesign"]));
            if ((initTable == true)) {
                if ((this.tableuniquePlanDesign != null)) {
                    this.tableuniquePlanDesign.InitVars();
                }
            }
            this.tableqhpOrNonQhp = ((qhpOrNonQhpDataTable)(base.Tables["qhpOrNonQhp"]));
            if ((initTable == true)) {
                if ((this.tableqhpOrNonQhp != null)) {
                    this.tableqhpOrNonQhp.InitVars();
                }
            }
            this.tableinsurancePlanPregnancyNoticeReqInd = ((insurancePlanPregnancyNoticeReqIndDataTable)(base.Tables["insurancePlanPregnancyNoticeReqInd"]));
            if ((initTable == true)) {
                if ((this.tableinsurancePlanPregnancyNoticeReqInd != null)) {
                    this.tableinsurancePlanPregnancyNoticeReqInd.InitVars();
                }
            }
            this.tableisSpecialistReferralRequired = ((isSpecialistReferralRequiredDataTable)(base.Tables["isSpecialistReferralRequired"]));
            if ((initTable == true)) {
                if ((this.tableisSpecialistReferralRequired != null)) {
                    this.tableisSpecialistReferralRequired.InitVars();
                }
            }
            this.tablehealthCareSpecialistReferralType = ((healthCareSpecialistReferralTypeDataTable)(base.Tables["healthCareSpecialistReferralType"]));
            if ((initTable == true)) {
                if ((this.tablehealthCareSpecialistReferralType != null)) {
                    this.tablehealthCareSpecialistReferralType.InitVars();
                }
            }
            this.tableinsurancePlanBenefitExclusionText = ((insurancePlanBenefitExclusionTextDataTable)(base.Tables["insurancePlanBenefitExclusionText"]));
            if ((initTable == true)) {
                if ((this.tableinsurancePlanBenefitExclusionText != null)) {
                    this.tableinsurancePlanBenefitExclusionText.InitVars();
                }
            }
            this.tableindianPlanVariation = ((indianPlanVariationDataTable)(base.Tables["indianPlanVariation"]));
            if ((initTable == true)) {
                if ((this.tableindianPlanVariation != null)) {
                    this.tableindianPlanVariation.InitVars();
                }
            }
            this.tablehsaEligibility = ((hsaEligibilityDataTable)(base.Tables["hsaEligibility"]));
            if ((initTable == true)) {
                if ((this.tablehsaEligibility != null)) {
                    this.tablehsaEligibility.InitVars();
                }
            }
            this.tableemployerHSAHRAContributionIndicator = ((employerHSAHRAContributionIndicatorDataTable)(base.Tables["employerHSAHRAContributionIndicator"]));
            if ((initTable == true)) {
                if ((this.tableemployerHSAHRAContributionIndicator != null)) {
                    this.tableemployerHSAHRAContributionIndicator.InitVars();
                }
            }
            this.tableempContributionAmountForHSAOrHRA = ((empContributionAmountForHSAOrHRADataTable)(base.Tables["empContributionAmountForHSAOrHRA"]));
            if ((initTable == true)) {
                if ((this.tableempContributionAmountForHSAOrHRA != null)) {
                    this.tableempContributionAmountForHSAOrHRA.InitVars();
                }
            }
            this.tablechildOnlyOffering = ((childOnlyOfferingDataTable)(base.Tables["childOnlyOffering"]));
            if ((initTable == true)) {
                if ((this.tablechildOnlyOffering != null)) {
                    this.tablechildOnlyOffering.InitVars();
                }
            }
            this.tablechildOnlyPlanID = ((childOnlyPlanIDDataTable)(base.Tables["childOnlyPlanID"]));
            if ((initTable == true)) {
                if ((this.tablechildOnlyPlanID != null)) {
                    this.tablechildOnlyPlanID.InitVars();
                }
            }
            this.tableisWellnessProgramOffered = ((isWellnessProgramOfferedDataTable)(base.Tables["isWellnessProgramOffered"]));
            if ((initTable == true)) {
                if ((this.tableisWellnessProgramOffered != null)) {
                    this.tableisWellnessProgramOffered.InitVars();
                }
            }
            this.tableisDiseaseMgmtProgramsOffered = ((isDiseaseMgmtProgramsOfferedDataTable)(base.Tables["isDiseaseMgmtProgramsOffered"]));
            if ((initTable == true)) {
                if ((this.tableisDiseaseMgmtProgramsOffered != null)) {
                    this.tableisDiseaseMgmtProgramsOffered.InitVars();
                }
            }
            this.tableehbApportionmentForPediatricDental = ((ehbApportionmentForPediatricDentalDataTable)(base.Tables["ehbApportionmentForPediatricDental"]));
            if ((initTable == true)) {
                if ((this.tableehbApportionmentForPediatricDental != null)) {
                    this.tableehbApportionmentForPediatricDental.InitVars();
                }
            }
            this.tableguaranteedVsEstimatedRate = ((guaranteedVsEstimatedRateDataTable)(base.Tables["guaranteedVsEstimatedRate"]));
            if ((initTable == true)) {
                if ((this.tableguaranteedVsEstimatedRate != null)) {
                    this.tableguaranteedVsEstimatedRate.InitVars();
                }
            }
            this.tablemaximumCoinsuranceForSpecialtyDrugs = ((maximumCoinsuranceForSpecialtyDrugsDataTable)(base.Tables["maximumCoinsuranceForSpecialtyDrugs"]));
            if ((initTable == true)) {
                if ((this.tablemaximumCoinsuranceForSpecialtyDrugs != null)) {
                    this.tablemaximumCoinsuranceForSpecialtyDrugs.InitVars();
                }
            }
            this.tablemaxNumDaysForChargingInpatientCopay = ((maxNumDaysForChargingInpatientCopayDataTable)(base.Tables["maxNumDaysForChargingInpatientCopay"]));
            if ((initTable == true)) {
                if ((this.tablemaxNumDaysForChargingInpatientCopay != null)) {
                    this.tablemaxNumDaysForChargingInpatientCopay.InitVars();
                }
            }
            this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits = ((beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable)(base.Tables["beginPrimaryCareCostSharingAfterSetNumberVisits"]));
            if ((initTable == true)) {
                if ((this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits != null)) {
                    this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.InitVars();
                }
            }
            this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays = ((beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable)(base.Tables["beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays"]));
            if ((initTable == true)) {
                if ((this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays != null)) {
                    this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.InitVars();
                }
            }
            this.tableplanEffectiveDate = ((planEffectiveDateDataTable)(base.Tables["planEffectiveDate"]));
            if ((initTable == true)) {
                if ((this.tableplanEffectiveDate != null)) {
                    this.tableplanEffectiveDate.InitVars();
                }
            }
            this.tableplanExpirationDate = ((planExpirationDateDataTable)(base.Tables["planExpirationDate"]));
            if ((initTable == true)) {
                if ((this.tableplanExpirationDate != null)) {
                    this.tableplanExpirationDate.InitVars();
                }
            }
            this.tableoutOfCountryCoverage = ((outOfCountryCoverageDataTable)(base.Tables["outOfCountryCoverage"]));
            if ((initTable == true)) {
                if ((this.tableoutOfCountryCoverage != null)) {
                    this.tableoutOfCountryCoverage.InitVars();
                }
            }
            this.tableoutOfCountryCoverageDescription = ((outOfCountryCoverageDescriptionDataTable)(base.Tables["outOfCountryCoverageDescription"]));
            if ((initTable == true)) {
                if ((this.tableoutOfCountryCoverageDescription != null)) {
                    this.tableoutOfCountryCoverageDescription.InitVars();
                }
            }
            this.tableoutOfServiceAreaCoverage = ((outOfServiceAreaCoverageDataTable)(base.Tables["outOfServiceAreaCoverage"]));
            if ((initTable == true)) {
                if ((this.tableoutOfServiceAreaCoverage != null)) {
                    this.tableoutOfServiceAreaCoverage.InitVars();
                }
            }
            this.tableoutOfServiceAreaCoverageDescription = ((outOfServiceAreaCoverageDescriptionDataTable)(base.Tables["outOfServiceAreaCoverageDescription"]));
            if ((initTable == true)) {
                if ((this.tableoutOfServiceAreaCoverageDescription != null)) {
                    this.tableoutOfServiceAreaCoverageDescription.InitVars();
                }
            }
            this.tablenationalNetwork = ((nationalNetworkDataTable)(base.Tables["nationalNetwork"]));
            if ((initTable == true)) {
                if ((this.tablenationalNetwork != null)) {
                    this.tablenationalNetwork.InitVars();
                }
            }
            this.tablesummaryBenefitAndCoverageURL = ((summaryBenefitAndCoverageURLDataTable)(base.Tables["summaryBenefitAndCoverageURL"]));
            if ((initTable == true)) {
                if ((this.tablesummaryBenefitAndCoverageURL != null)) {
                    this.tablesummaryBenefitAndCoverageURL.InitVars();
                }
            }
            this.tableenrollmentPaymentURL = ((enrollmentPaymentURLDataTable)(base.Tables["enrollmentPaymentURL"]));
            if ((initTable == true)) {
                if ((this.tableenrollmentPaymentURL != null)) {
                    this.tableenrollmentPaymentURL.InitVars();
                }
            }
            this.tableplanBrochure = ((planBrochureDataTable)(base.Tables["planBrochure"]));
            if ((initTable == true)) {
                if ((this.tableplanBrochure != null)) {
                    this.tableplanBrochure.InitVars();
                }
            }
            this.tablecostShareVariancesList = ((costShareVariancesListDataTable)(base.Tables["costShareVariancesList"]));
            if ((initTable == true)) {
                if ((this.tablecostShareVariancesList != null)) {
                    this.tablecostShareVariancesList.InitVars();
                }
            }
            this.tablecostShareVariance = ((costShareVarianceDataTable)(base.Tables["costShareVariance"]));
            if ((initTable == true)) {
                if ((this.tablecostShareVariance != null)) {
                    this.tablecostShareVariance.InitVars();
                }
            }
            this.tableplanId = ((planIdDataTable)(base.Tables["planId"]));
            if ((initTable == true)) {
                if ((this.tableplanId != null)) {
                    this.tableplanId.InitVars();
                }
            }
            this.tablecsrVariationType = ((csrVariationTypeDataTable)(base.Tables["csrVariationType"]));
            if ((initTable == true)) {
                if ((this.tablecsrVariationType != null)) {
                    this.tablecsrVariationType.InitVars();
                }
            }
            this.tableissuerActuarialValue = ((issuerActuarialValueDataTable)(base.Tables["issuerActuarialValue"]));
            if ((initTable == true)) {
                if ((this.tableissuerActuarialValue != null)) {
                    this.tableissuerActuarialValue.InitVars();
                }
            }
            this.tableavCalculatorOutputNumber = ((avCalculatorOutputNumberDataTable)(base.Tables["avCalculatorOutputNumber"]));
            if ((initTable == true)) {
                if ((this.tableavCalculatorOutputNumber != null)) {
                    this.tableavCalculatorOutputNumber.InitVars();
                }
            }
            this.tablemedicalAndDrugDeductiblesIntegrated = ((medicalAndDrugDeductiblesIntegratedDataTable)(base.Tables["medicalAndDrugDeductiblesIntegrated"]));
            if ((initTable == true)) {
                if ((this.tablemedicalAndDrugDeductiblesIntegrated != null)) {
                    this.tablemedicalAndDrugDeductiblesIntegrated.InitVars();
                }
            }
            this.tablemedicalAndDrugMaxOutOfPocketIntegrated = ((medicalAndDrugMaxOutOfPocketIntegratedDataTable)(base.Tables["medicalAndDrugMaxOutOfPocketIntegrated"]));
            if ((initTable == true)) {
                if ((this.tablemedicalAndDrugMaxOutOfPocketIntegrated != null)) {
                    this.tablemedicalAndDrugMaxOutOfPocketIntegrated.InitVars();
                }
            }
            this.tablemultipleProviderTiers = ((multipleProviderTiersDataTable)(base.Tables["multipleProviderTiers"]));
            if ((initTable == true)) {
                if ((this.tablemultipleProviderTiers != null)) {
                    this.tablemultipleProviderTiers.InitVars();
                }
            }
            this.tablefirstTierUtilization = ((firstTierUtilizationDataTable)(base.Tables["firstTierUtilization"]));
            if ((initTable == true)) {
                if ((this.tablefirstTierUtilization != null)) {
                    this.tablefirstTierUtilization.InitVars();
                }
            }
            this.tablesecondTierUtilization = ((secondTierUtilizationDataTable)(base.Tables["secondTierUtilization"]));
            if ((initTable == true)) {
                if ((this.tablesecondTierUtilization != null)) {
                    this.tablesecondTierUtilization.InitVars();
                }
            }
            this.tablesbc = ((sbcDataTable)(base.Tables["sbc"]));
            if ((initTable == true)) {
                if ((this.tablesbc != null)) {
                    this.tablesbc.InitVars();
                }
            }
            this.tablehavingBabyDeductible = ((havingBabyDeductibleDataTable)(base.Tables["havingBabyDeductible"]));
            if ((initTable == true)) {
                if ((this.tablehavingBabyDeductible != null)) {
                    this.tablehavingBabyDeductible.InitVars();
                }
            }
            this.tablehavingBabyCoPayment = ((havingBabyCoPaymentDataTable)(base.Tables["havingBabyCoPayment"]));
            if ((initTable == true)) {
                if ((this.tablehavingBabyCoPayment != null)) {
                    this.tablehavingBabyCoPayment.InitVars();
                }
            }
            this.tablehavingBabyCoInsurance = ((havingBabyCoInsuranceDataTable)(base.Tables["havingBabyCoInsurance"]));
            if ((initTable == true)) {
                if ((this.tablehavingBabyCoInsurance != null)) {
                    this.tablehavingBabyCoInsurance.InitVars();
                }
            }
            this.tablehavingBabyLimit = ((havingBabyLimitDataTable)(base.Tables["havingBabyLimit"]));
            if ((initTable == true)) {
                if ((this.tablehavingBabyLimit != null)) {
                    this.tablehavingBabyLimit.InitVars();
                }
            }
            this.tablehavingDiabetesDeductible = ((havingDiabetesDeductibleDataTable)(base.Tables["havingDiabetesDeductible"]));
            if ((initTable == true)) {
                if ((this.tablehavingDiabetesDeductible != null)) {
                    this.tablehavingDiabetesDeductible.InitVars();
                }
            }
            this.tablehavingDiabetesCopay = ((havingDiabetesCopayDataTable)(base.Tables["havingDiabetesCopay"]));
            if ((initTable == true)) {
                if ((this.tablehavingDiabetesCopay != null)) {
                    this.tablehavingDiabetesCopay.InitVars();
                }
            }
            this.tablehavingDiabetesCoInsurance = ((havingDiabetesCoInsuranceDataTable)(base.Tables["havingDiabetesCoInsurance"]));
            if ((initTable == true)) {
                if ((this.tablehavingDiabetesCoInsurance != null)) {
                    this.tablehavingDiabetesCoInsurance.InitVars();
                }
            }
            this.tablehavingDiabetesLimit = ((havingDiabetesLimitDataTable)(base.Tables["havingDiabetesLimit"]));
            if ((initTable == true)) {
                if ((this.tablehavingDiabetesLimit != null)) {
                    this.tablehavingDiabetesLimit.InitVars();
                }
            }
            this.tablemoopList = ((moopListDataTable)(base.Tables["moopList"]));
            if ((initTable == true)) {
                if ((this.tablemoopList != null)) {
                    this.tablemoopList.InitVars();
                }
            }
            this.tablemoop = ((moopDataTable)(base.Tables["moop"]));
            if ((initTable == true)) {
                if ((this.tablemoop != null)) {
                    this.tablemoop.InitVars();
                }
            }
            this.tablename = ((nameDataTable)(base.Tables["name"]));
            if ((initTable == true)) {
                if ((this.tablename != null)) {
                    this.tablename.InitVars();
                }
            }
            this.tableinNetworkTier1IndividualAmount = ((inNetworkTier1IndividualAmountDataTable)(base.Tables["inNetworkTier1IndividualAmount"]));
            if ((initTable == true)) {
                if ((this.tableinNetworkTier1IndividualAmount != null)) {
                    this.tableinNetworkTier1IndividualAmount.InitVars();
                }
            }
            this.tableinNetworkTier1FamilyAmount = ((inNetworkTier1FamilyAmountDataTable)(base.Tables["inNetworkTier1FamilyAmount"]));
            if ((initTable == true)) {
                if ((this.tableinNetworkTier1FamilyAmount != null)) {
                    this.tableinNetworkTier1FamilyAmount.InitVars();
                }
            }
            this.tableinNetworkTier2IndividualAmount = ((inNetworkTier2IndividualAmountDataTable)(base.Tables["inNetworkTier2IndividualAmount"]));
            if ((initTable == true)) {
                if ((this.tableinNetworkTier2IndividualAmount != null)) {
                    this.tableinNetworkTier2IndividualAmount.InitVars();
                }
            }
            this.tableinNetworkTier2FamilyAmount = ((inNetworkTier2FamilyAmountDataTable)(base.Tables["inNetworkTier2FamilyAmount"]));
            if ((initTable == true)) {
                if ((this.tableinNetworkTier2FamilyAmount != null)) {
                    this.tableinNetworkTier2FamilyAmount.InitVars();
                }
            }
            this.tableoutOfNetworkIndividualAmount = ((outOfNetworkIndividualAmountDataTable)(base.Tables["outOfNetworkIndividualAmount"]));
            if ((initTable == true)) {
                if ((this.tableoutOfNetworkIndividualAmount != null)) {
                    this.tableoutOfNetworkIndividualAmount.InitVars();
                }
            }
            this.tableoutOfNetworkFamilyAmount = ((outOfNetworkFamilyAmountDataTable)(base.Tables["outOfNetworkFamilyAmount"]));
            if ((initTable == true)) {
                if ((this.tableoutOfNetworkFamilyAmount != null)) {
                    this.tableoutOfNetworkFamilyAmount.InitVars();
                }
            }
            this.tablecombinedInOutNetworkIndividualAmount = ((combinedInOutNetworkIndividualAmountDataTable)(base.Tables["combinedInOutNetworkIndividualAmount"]));
            if ((initTable == true)) {
                if ((this.tablecombinedInOutNetworkIndividualAmount != null)) {
                    this.tablecombinedInOutNetworkIndividualAmount.InitVars();
                }
            }
            this.tablecombinedInOutNetworkFamilyAmount = ((combinedInOutNetworkFamilyAmountDataTable)(base.Tables["combinedInOutNetworkFamilyAmount"]));
            if ((initTable == true)) {
                if ((this.tablecombinedInOutNetworkFamilyAmount != null)) {
                    this.tablecombinedInOutNetworkFamilyAmount.InitVars();
                }
            }
            this.tableplanDeductibleList = ((planDeductibleListDataTable)(base.Tables["planDeductibleList"]));
            if ((initTable == true)) {
                if ((this.tableplanDeductibleList != null)) {
                    this.tableplanDeductibleList.InitVars();
                }
            }
            this.tableplanDeductible = ((planDeductibleDataTable)(base.Tables["planDeductible"]));
            if ((initTable == true)) {
                if ((this.tableplanDeductible != null)) {
                    this.tableplanDeductible.InitVars();
                }
            }
            this.tabledeductibleType = ((deductibleTypeDataTable)(base.Tables["deductibleType"]));
            if ((initTable == true)) {
                if ((this.tabledeductibleType != null)) {
                    this.tabledeductibleType.InitVars();
                }
            }
            this.tableinNetworkTier1Individual = ((inNetworkTier1IndividualDataTable)(base.Tables["inNetworkTier1Individual"]));
            if ((initTable == true)) {
                if ((this.tableinNetworkTier1Individual != null)) {
                    this.tableinNetworkTier1Individual.InitVars();
                }
            }
            this.tableinNetworkTier1Family = ((inNetworkTier1FamilyDataTable)(base.Tables["inNetworkTier1Family"]));
            if ((initTable == true)) {
                if ((this.tableinNetworkTier1Family != null)) {
                    this.tableinNetworkTier1Family.InitVars();
                }
            }
            this.tablecoinsuranceInNetworkTier1 = ((coinsuranceInNetworkTier1DataTable)(base.Tables["coinsuranceInNetworkTier1"]));
            if ((initTable == true)) {
                if ((this.tablecoinsuranceInNetworkTier1 != null)) {
                    this.tablecoinsuranceInNetworkTier1.InitVars();
                }
            }
            this.tableinNetworkTierTwoIndividual = ((inNetworkTierTwoIndividualDataTable)(base.Tables["inNetworkTierTwoIndividual"]));
            if ((initTable == true)) {
                if ((this.tableinNetworkTierTwoIndividual != null)) {
                    this.tableinNetworkTierTwoIndividual.InitVars();
                }
            }
            this.tableinNetworkTierTwoFamily = ((inNetworkTierTwoFamilyDataTable)(base.Tables["inNetworkTierTwoFamily"]));
            if ((initTable == true)) {
                if ((this.tableinNetworkTierTwoFamily != null)) {
                    this.tableinNetworkTierTwoFamily.InitVars();
                }
            }
            this.tablecoinsuranceInNetworkTier2 = ((coinsuranceInNetworkTier2DataTable)(base.Tables["coinsuranceInNetworkTier2"]));
            if ((initTable == true)) {
                if ((this.tablecoinsuranceInNetworkTier2 != null)) {
                    this.tablecoinsuranceInNetworkTier2.InitVars();
                }
            }
            this.tableoutOfNetworkIndividual = ((outOfNetworkIndividualDataTable)(base.Tables["outOfNetworkIndividual"]));
            if ((initTable == true)) {
                if ((this.tableoutOfNetworkIndividual != null)) {
                    this.tableoutOfNetworkIndividual.InitVars();
                }
            }
            this.tableoutOfNetworkFamily = ((outOfNetworkFamilyDataTable)(base.Tables["outOfNetworkFamily"]));
            if ((initTable == true)) {
                if ((this.tableoutOfNetworkFamily != null)) {
                    this.tableoutOfNetworkFamily.InitVars();
                }
            }
            this.tablecombinedInOrOutNetworkIndividual = ((combinedInOrOutNetworkIndividualDataTable)(base.Tables["combinedInOrOutNetworkIndividual"]));
            if ((initTable == true)) {
                if ((this.tablecombinedInOrOutNetworkIndividual != null)) {
                    this.tablecombinedInOrOutNetworkIndividual.InitVars();
                }
            }
            this.tablecombinedInOrOutNetworkFamily = ((combinedInOrOutNetworkFamilyDataTable)(base.Tables["combinedInOrOutNetworkFamily"]));
            if ((initTable == true)) {
                if ((this.tablecombinedInOrOutNetworkFamily != null)) {
                    this.tablecombinedInOrOutNetworkFamily.InitVars();
                }
            }
            this.tableserviceVisitList = ((serviceVisitListDataTable)(base.Tables["serviceVisitList"]));
            if ((initTable == true)) {
                if ((this.tableserviceVisitList != null)) {
                    this.tableserviceVisitList.InitVars();
                }
            }
            this.tableserviceVisit = ((serviceVisitDataTable)(base.Tables["serviceVisit"]));
            if ((initTable == true)) {
                if ((this.tableserviceVisit != null)) {
                    this.tableserviceVisit.InitVars();
                }
            }
            this.tablevisitType = ((visitTypeDataTable)(base.Tables["visitType"]));
            if ((initTable == true)) {
                if ((this.tablevisitType != null)) {
                    this.tablevisitType.InitVars();
                }
            }
            this.tablecopayInNetworkTier1 = ((copayInNetworkTier1DataTable)(base.Tables["copayInNetworkTier1"]));
            if ((initTable == true)) {
                if ((this.tablecopayInNetworkTier1 != null)) {
                    this.tablecopayInNetworkTier1.InitVars();
                }
            }
            this.tablecopayInNetworkTier2 = ((copayInNetworkTier2DataTable)(base.Tables["copayInNetworkTier2"]));
            if ((initTable == true)) {
                if ((this.tablecopayInNetworkTier2 != null)) {
                    this.tablecopayInNetworkTier2.InitVars();
                }
            }
            this.tablecopayOutOfNetwork = ((copayOutOfNetworkDataTable)(base.Tables["copayOutOfNetwork"]));
            if ((initTable == true)) {
                if ((this.tablecopayOutOfNetwork != null)) {
                    this.tablecopayOutOfNetwork.InitVars();
                }
            }
            this.tablecoInsuranceInNetworkTier1 = ((coInsuranceInNetworkTier1DataTable)(base.Tables["coInsuranceInNetworkTier1"]));
            if ((initTable == true)) {
                if ((this.tablecoInsuranceInNetworkTier1 != null)) {
                    this.tablecoInsuranceInNetworkTier1.InitVars();
                }
            }
            this.tablecoInsuranceInNetworkTier2 = ((coInsuranceInNetworkTier2DataTable)(base.Tables["coInsuranceInNetworkTier2"]));
            if ((initTable == true)) {
                if ((this.tablecoInsuranceInNetworkTier2 != null)) {
                    this.tablecoInsuranceInNetworkTier2.InitVars();
                }
            }
            this.tablecoInsuranceOutOfNetwork = ((coInsuranceOutOfNetworkDataTable)(base.Tables["coInsuranceOutOfNetwork"]));
            if ((initTable == true)) {
                if ((this.tablecoInsuranceOutOfNetwork != null)) {
                    this.tablecoInsuranceOutOfNetwork.InitVars();
                }
            }
            this.relationplanAttributes_planMarketingName = this.Relations["planAttributes_planMarketingName"];
            this.relationcostShareVariance_planMarketingName = this.Relations["costShareVariance_planMarketingName"];
            this.relationplanAttributes_metalLevel = this.Relations["planAttributes_metalLevel"];
            this.relationcostShareVariance_metalLevel = this.Relations["costShareVariance_metalLevel"];
            this.relationpackagesList_packages = this.Relations["packagesList_packages"];
            this.relationpackages_header = this.Relations["packages_header"];
            this.relationheader_issuerId = this.Relations["header_issuerId"];
            this.relationheader_statePostalCode = this.Relations["header_statePostalCode"];
            this.relationheader_marketCoverage = this.Relations["header_marketCoverage"];
            this.relationheader_dentalPlanOnlyInd = this.Relations["header_dentalPlanOnlyInd"];
            this.relationheader_tin = this.Relations["header_tin"];
            this.relationpackages_benefitsList = this.Relations["packages_benefitsList"];
            this.relationbenefitsList_benefits = this.Relations["benefitsList_benefits"];
            this.relationbenefits_benefitTypeCode = this.Relations["benefits_benefitTypeCode"];
            this.relationbenefits_isEHB = this.Relations["benefits_isEHB"];
            this.relationbenefits_isStateMandate = this.Relations["benefits_isStateMandate"];
            this.relationbenefits_isBenefitCovered = this.Relations["benefits_isBenefitCovered"];
            this.relationbenefits_serviceLimit = this.Relations["benefits_serviceLimit"];
            this.relationbenefits_quantityLimit = this.Relations["benefits_quantityLimit"];
            this.relationbenefits_unitLimit = this.Relations["benefits_unitLimit"];
            this.relationbenefits_minimumStay = this.Relations["benefits_minimumStay"];
            this.relationbenefits_exclusion = this.Relations["benefits_exclusion"];
            this.relationbenefits_explanation = this.Relations["benefits_explanation"];
            this.relationbenefits_ehbVarianceReason = this.Relations["benefits_ehbVarianceReason"];
            this.relationbenefits_subjectToDeductibleTier1 = this.Relations["benefits_subjectToDeductibleTier1"];
            this.relationbenefits_subjectToDeductibleTier2 = this.Relations["benefits_subjectToDeductibleTier2"];
            this.relationbenefits_excludedInNetworkMOOP = this.Relations["benefits_excludedInNetworkMOOP"];
            this.relationbenefits_excludedOutOfNetworkMOOP = this.Relations["benefits_excludedOutOfNetworkMOOP"];
            this.relationpackages_plansList = this.Relations["packages_plansList"];
            this.relationplansList_plans = this.Relations["plansList_plans"];
            this.relationplans_planAttributes = this.Relations["plans_planAttributes"];
            this.relationplanAttributes_standardComponentID = this.Relations["planAttributes_standardComponentID"];
            this.relationplanAttributes_hiosProductID = this.Relations["planAttributes_hiosProductID"];
            this.relationplanAttributes_hpid = this.Relations["planAttributes_hpid"];
            this.relationplanAttributes_networkID = this.Relations["planAttributes_networkID"];
            this.relationplanAttributes_serviceAreaID = this.Relations["planAttributes_serviceAreaID"];
            this.relationplanAttributes_formularyID = this.Relations["planAttributes_formularyID"];
            this.relationplanAttributes_isNewPlan = this.Relations["planAttributes_isNewPlan"];
            this.relationplanAttributes_planType = this.Relations["planAttributes_planType"];
            this.relationplanAttributes_uniquePlanDesign = this.Relations["planAttributes_uniquePlanDesign"];
            this.relationplanAttributes_qhpOrNonQhp = this.Relations["planAttributes_qhpOrNonQhp"];
            this.relationplanAttributes_insurancePlanPregnancyNoticeReqInd = this.Relations["planAttributes_insurancePlanPregnancyNoticeReqInd"];
            this.relationplanAttributes_isSpecialistReferralRequired = this.Relations["planAttributes_isSpecialistReferralRequired"];
            this.relationplanAttributes_healthCareSpecialistReferralType = this.Relations["planAttributes_healthCareSpecialistReferralType"];
            this.relationplanAttributes_insurancePlanBenefitExclusionText = this.Relations["planAttributes_insurancePlanBenefitExclusionText"];
            this.relationplanAttributes_indianPlanVariation = this.Relations["planAttributes_indianPlanVariation"];
            this.relationplanAttributes_hsaEligibility = this.Relations["planAttributes_hsaEligibility"];
            this.relationplanAttributes_employerHSAHRAContributionIndicator = this.Relations["planAttributes_employerHSAHRAContributionIndicator"];
            this.relationplanAttributes_empContributionAmountForHSAOrHRA = this.Relations["planAttributes_empContributionAmountForHSAOrHRA"];
            this.relationplanAttributes_childOnlyOffering = this.Relations["planAttributes_childOnlyOffering"];
            this.relationplanAttributes_childOnlyPlanID = this.Relations["planAttributes_childOnlyPlanID"];
            this.relationplanAttributes_isWellnessProgramOffered = this.Relations["planAttributes_isWellnessProgramOffered"];
            this.relationplanAttributes_isDiseaseMgmtProgramsOffered = this.Relations["planAttributes_isDiseaseMgmtProgramsOffered"];
            this.relationplanAttributes_ehbApportionmentForPediatricDental = this.Relations["planAttributes_ehbApportionmentForPediatricDental"];
            this.relationplanAttributes_guaranteedVsEstimatedRate = this.Relations["planAttributes_guaranteedVsEstimatedRate"];
            this.relationplanAttributes_maximumCoinsuranceForSpecialtyDrugs = this.Relations["planAttributes_maximumCoinsuranceForSpecialtyDrugs"];
            this.relationplanAttributes_maxNumDaysForChargingInpatientCopay = this.Relations["planAttributes_maxNumDaysForChargingInpatientCopay"];
            this.relationplanAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits = this.Relations["planAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits"];
            this.relationplanAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays = this.Relations["planAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays"];
            this.relationplanAttributes_planEffectiveDate = this.Relations["planAttributes_planEffectiveDate"];
            this.relationplanAttributes_planExpirationDate = this.Relations["planAttributes_planExpirationDate"];
            this.relationplanAttributes_outOfCountryCoverage = this.Relations["planAttributes_outOfCountryCoverage"];
            this.relationplanAttributes_outOfCountryCoverageDescription = this.Relations["planAttributes_outOfCountryCoverageDescription"];
            this.relationplanAttributes_outOfServiceAreaCoverage = this.Relations["planAttributes_outOfServiceAreaCoverage"];
            this.relationplanAttributes_outOfServiceAreaCoverageDescription = this.Relations["planAttributes_outOfServiceAreaCoverageDescription"];
            this.relationplanAttributes_nationalNetwork = this.Relations["planAttributes_nationalNetwork"];
            this.relationplanAttributes_summaryBenefitAndCoverageURL = this.Relations["planAttributes_summaryBenefitAndCoverageURL"];
            this.relationplanAttributes_enrollmentPaymentURL = this.Relations["planAttributes_enrollmentPaymentURL"];
            this.relationplanAttributes_planBrochure = this.Relations["planAttributes_planBrochure"];
            this.relationplans_costShareVariancesList = this.Relations["plans_costShareVariancesList"];
            this.relationcostShareVariancesList_costShareVariance = this.Relations["costShareVariancesList_costShareVariance"];
            this.relationcostShareVariance_planId = this.Relations["costShareVariance_planId"];
            this.relationcostShareVariance_csrVariationType = this.Relations["costShareVariance_csrVariationType"];
            this.relationcostShareVariance_issuerActuarialValue = this.Relations["costShareVariance_issuerActuarialValue"];
            this.relationcostShareVariance_avCalculatorOutputNumber = this.Relations["costShareVariance_avCalculatorOutputNumber"];
            this.relationcostShareVariance_medicalAndDrugDeductiblesIntegrated = this.Relations["costShareVariance_medicalAndDrugDeductiblesIntegrated"];
            this.relationcostShareVariance_medicalAndDrugMaxOutOfPocketIntegrated = this.Relations["costShareVariance_medicalAndDrugMaxOutOfPocketIntegrated"];
            this.relationcostShareVariance_multipleProviderTiers = this.Relations["costShareVariance_multipleProviderTiers"];
            this.relationcostShareVariance_firstTierUtilization = this.Relations["costShareVariance_firstTierUtilization"];
            this.relationcostShareVariance_secondTierUtilization = this.Relations["costShareVariance_secondTierUtilization"];
            this.relationcostShareVariance_sbc = this.Relations["costShareVariance_sbc"];
            this.relationsbc_havingBabyDeductible = this.Relations["sbc_havingBabyDeductible"];
            this.relationsbc_havingBabyCoPayment = this.Relations["sbc_havingBabyCoPayment"];
            this.relationsbc_havingBabyCoInsurance = this.Relations["sbc_havingBabyCoInsurance"];
            this.relationsbc_havingBabyLimit = this.Relations["sbc_havingBabyLimit"];
            this.relationsbc_havingDiabetesDeductible = this.Relations["sbc_havingDiabetesDeductible"];
            this.relationsbc_havingDiabetesCopay = this.Relations["sbc_havingDiabetesCopay"];
            this.relationsbc_havingDiabetesCoInsurance = this.Relations["sbc_havingDiabetesCoInsurance"];
            this.relationsbc_havingDiabetesLimit = this.Relations["sbc_havingDiabetesLimit"];
            this.relationcostShareVariance_moopList = this.Relations["costShareVariance_moopList"];
            this.relationmoopList_moop = this.Relations["moopList_moop"];
            this.relationmoop_name = this.Relations["moop_name"];
            this.relationmoop_inNetworkTier1IndividualAmount = this.Relations["moop_inNetworkTier1IndividualAmount"];
            this.relationmoop_inNetworkTier1FamilyAmount = this.Relations["moop_inNetworkTier1FamilyAmount"];
            this.relationmoop_inNetworkTier2IndividualAmount = this.Relations["moop_inNetworkTier2IndividualAmount"];
            this.relationmoop_inNetworkTier2FamilyAmount = this.Relations["moop_inNetworkTier2FamilyAmount"];
            this.relationmoop_outOfNetworkIndividualAmount = this.Relations["moop_outOfNetworkIndividualAmount"];
            this.relationmoop_outOfNetworkFamilyAmount = this.Relations["moop_outOfNetworkFamilyAmount"];
            this.relationmoop_combinedInOutNetworkIndividualAmount = this.Relations["moop_combinedInOutNetworkIndividualAmount"];
            this.relationmoop_combinedInOutNetworkFamilyAmount = this.Relations["moop_combinedInOutNetworkFamilyAmount"];
            this.relationcostShareVariance_planDeductibleList = this.Relations["costShareVariance_planDeductibleList"];
            this.relationplanDeductibleList_planDeductible = this.Relations["planDeductibleList_planDeductible"];
            this.relationplanDeductible_deductibleType = this.Relations["planDeductible_deductibleType"];
            this.relationplanDeductible_inNetworkTier1Individual = this.Relations["planDeductible_inNetworkTier1Individual"];
            this.relationplanDeductible_inNetworkTier1Family = this.Relations["planDeductible_inNetworkTier1Family"];
            this.relationplanDeductible_coinsuranceInNetworkTier1 = this.Relations["planDeductible_coinsuranceInNetworkTier1"];
            this.relationplanDeductible_inNetworkTierTwoIndividual = this.Relations["planDeductible_inNetworkTierTwoIndividual"];
            this.relationplanDeductible_inNetworkTierTwoFamily = this.Relations["planDeductible_inNetworkTierTwoFamily"];
            this.relationplanDeductible_coinsuranceInNetworkTier2 = this.Relations["planDeductible_coinsuranceInNetworkTier2"];
            this.relationplanDeductible_outOfNetworkIndividual = this.Relations["planDeductible_outOfNetworkIndividual"];
            this.relationplanDeductible_outOfNetworkFamily = this.Relations["planDeductible_outOfNetworkFamily"];
            this.relationplanDeductible_combinedInOrOutNetworkIndividual = this.Relations["planDeductible_combinedInOrOutNetworkIndividual"];
            this.relationplanDeductible_combinedInOrOutNetworkFamily = this.Relations["planDeductible_combinedInOrOutNetworkFamily"];
            this.relationcostShareVariance_serviceVisitList = this.Relations["costShareVariance_serviceVisitList"];
            this.relationserviceVisitList_serviceVisit = this.Relations["serviceVisitList_serviceVisit"];
            this.relationserviceVisit_visitType = this.Relations["serviceVisit_visitType"];
            this.relationserviceVisit_copayInNetworkTier1 = this.Relations["serviceVisit_copayInNetworkTier1"];
            this.relationserviceVisit_copayInNetworkTier2 = this.Relations["serviceVisit_copayInNetworkTier2"];
            this.relationserviceVisit_copayOutOfNetwork = this.Relations["serviceVisit_copayOutOfNetwork"];
            this.relationserviceVisit_coInsuranceInNetworkTier1 = this.Relations["serviceVisit_coInsuranceInNetworkTier1"];
            this.relationserviceVisit_coInsuranceInNetworkTier2 = this.Relations["serviceVisit_coInsuranceInNetworkTier2"];
            this.relationserviceVisit_coInsuranceOutOfNetwork = this.Relations["serviceVisit_coInsuranceOutOfNetwork"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "planBenefitTemplateVO";
            this.Prefix = "";
            this.Namespace = "http://vo.ffe.cms.hhs.gov";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableplanMarketingName = new planMarketingNameDataTable();
            base.Tables.Add(this.tableplanMarketingName);
            this.tablemetalLevel = new metalLevelDataTable();
            base.Tables.Add(this.tablemetalLevel);
            this.tablepackagesList = new packagesListDataTable();
            base.Tables.Add(this.tablepackagesList);
            this.tablepackages = new packagesDataTable();
            base.Tables.Add(this.tablepackages);
            this.tableheader = new headerDataTable();
            base.Tables.Add(this.tableheader);
            this.tableissuerId = new issuerIdDataTable();
            base.Tables.Add(this.tableissuerId);
            this.tablestatePostalCode = new statePostalCodeDataTable();
            base.Tables.Add(this.tablestatePostalCode);
            this.tablemarketCoverage = new marketCoverageDataTable();
            base.Tables.Add(this.tablemarketCoverage);
            this.tabledentalPlanOnlyInd = new dentalPlanOnlyIndDataTable();
            base.Tables.Add(this.tabledentalPlanOnlyInd);
            this.tabletin = new tinDataTable();
            base.Tables.Add(this.tabletin);
            this.tablebenefitsList = new benefitsListDataTable();
            base.Tables.Add(this.tablebenefitsList);
            this.tablebenefits = new benefitsDataTable();
            base.Tables.Add(this.tablebenefits);
            this.tablebenefitTypeCode = new benefitTypeCodeDataTable();
            base.Tables.Add(this.tablebenefitTypeCode);
            this.tableisEHB = new isEHBDataTable();
            base.Tables.Add(this.tableisEHB);
            this.tableisStateMandate = new isStateMandateDataTable();
            base.Tables.Add(this.tableisStateMandate);
            this.tableisBenefitCovered = new isBenefitCoveredDataTable();
            base.Tables.Add(this.tableisBenefitCovered);
            this.tableserviceLimit = new serviceLimitDataTable();
            base.Tables.Add(this.tableserviceLimit);
            this.tablequantityLimit = new quantityLimitDataTable();
            base.Tables.Add(this.tablequantityLimit);
            this.tableunitLimit = new unitLimitDataTable();
            base.Tables.Add(this.tableunitLimit);
            this.tableminimumStay = new minimumStayDataTable();
            base.Tables.Add(this.tableminimumStay);
            this.tableexclusion = new exclusionDataTable();
            base.Tables.Add(this.tableexclusion);
            this.tableexplanation = new explanationDataTable();
            base.Tables.Add(this.tableexplanation);
            this.tableehbVarianceReason = new ehbVarianceReasonDataTable();
            base.Tables.Add(this.tableehbVarianceReason);
            this.tablesubjectToDeductibleTier1 = new subjectToDeductibleTier1DataTable();
            base.Tables.Add(this.tablesubjectToDeductibleTier1);
            this.tablesubjectToDeductibleTier2 = new subjectToDeductibleTier2DataTable();
            base.Tables.Add(this.tablesubjectToDeductibleTier2);
            this.tableexcludedInNetworkMOOP = new excludedInNetworkMOOPDataTable();
            base.Tables.Add(this.tableexcludedInNetworkMOOP);
            this.tableexcludedOutOfNetworkMOOP = new excludedOutOfNetworkMOOPDataTable();
            base.Tables.Add(this.tableexcludedOutOfNetworkMOOP);
            this.tableplansList = new plansListDataTable();
            base.Tables.Add(this.tableplansList);
            this.tableplans = new plansDataTable();
            base.Tables.Add(this.tableplans);
            this.tableplanAttributes = new planAttributesDataTable();
            base.Tables.Add(this.tableplanAttributes);
            this.tablestandardComponentID = new standardComponentIDDataTable();
            base.Tables.Add(this.tablestandardComponentID);
            this.tablehiosProductID = new hiosProductIDDataTable();
            base.Tables.Add(this.tablehiosProductID);
            this.tablehpid = new hpidDataTable();
            base.Tables.Add(this.tablehpid);
            this.tablenetworkID = new networkIDDataTable();
            base.Tables.Add(this.tablenetworkID);
            this.tableserviceAreaID = new serviceAreaIDDataTable();
            base.Tables.Add(this.tableserviceAreaID);
            this.tableformularyID = new formularyIDDataTable();
            base.Tables.Add(this.tableformularyID);
            this.tableisNewPlan = new isNewPlanDataTable();
            base.Tables.Add(this.tableisNewPlan);
            this.tableplanType = new planTypeDataTable();
            base.Tables.Add(this.tableplanType);
            this.tableuniquePlanDesign = new uniquePlanDesignDataTable();
            base.Tables.Add(this.tableuniquePlanDesign);
            this.tableqhpOrNonQhp = new qhpOrNonQhpDataTable();
            base.Tables.Add(this.tableqhpOrNonQhp);
            this.tableinsurancePlanPregnancyNoticeReqInd = new insurancePlanPregnancyNoticeReqIndDataTable();
            base.Tables.Add(this.tableinsurancePlanPregnancyNoticeReqInd);
            this.tableisSpecialistReferralRequired = new isSpecialistReferralRequiredDataTable();
            base.Tables.Add(this.tableisSpecialistReferralRequired);
            this.tablehealthCareSpecialistReferralType = new healthCareSpecialistReferralTypeDataTable();
            base.Tables.Add(this.tablehealthCareSpecialistReferralType);
            this.tableinsurancePlanBenefitExclusionText = new insurancePlanBenefitExclusionTextDataTable();
            base.Tables.Add(this.tableinsurancePlanBenefitExclusionText);
            this.tableindianPlanVariation = new indianPlanVariationDataTable();
            base.Tables.Add(this.tableindianPlanVariation);
            this.tablehsaEligibility = new hsaEligibilityDataTable();
            base.Tables.Add(this.tablehsaEligibility);
            this.tableemployerHSAHRAContributionIndicator = new employerHSAHRAContributionIndicatorDataTable();
            base.Tables.Add(this.tableemployerHSAHRAContributionIndicator);
            this.tableempContributionAmountForHSAOrHRA = new empContributionAmountForHSAOrHRADataTable();
            base.Tables.Add(this.tableempContributionAmountForHSAOrHRA);
            this.tablechildOnlyOffering = new childOnlyOfferingDataTable();
            base.Tables.Add(this.tablechildOnlyOffering);
            this.tablechildOnlyPlanID = new childOnlyPlanIDDataTable();
            base.Tables.Add(this.tablechildOnlyPlanID);
            this.tableisWellnessProgramOffered = new isWellnessProgramOfferedDataTable();
            base.Tables.Add(this.tableisWellnessProgramOffered);
            this.tableisDiseaseMgmtProgramsOffered = new isDiseaseMgmtProgramsOfferedDataTable();
            base.Tables.Add(this.tableisDiseaseMgmtProgramsOffered);
            this.tableehbApportionmentForPediatricDental = new ehbApportionmentForPediatricDentalDataTable();
            base.Tables.Add(this.tableehbApportionmentForPediatricDental);
            this.tableguaranteedVsEstimatedRate = new guaranteedVsEstimatedRateDataTable();
            base.Tables.Add(this.tableguaranteedVsEstimatedRate);
            this.tablemaximumCoinsuranceForSpecialtyDrugs = new maximumCoinsuranceForSpecialtyDrugsDataTable();
            base.Tables.Add(this.tablemaximumCoinsuranceForSpecialtyDrugs);
            this.tablemaxNumDaysForChargingInpatientCopay = new maxNumDaysForChargingInpatientCopayDataTable();
            base.Tables.Add(this.tablemaxNumDaysForChargingInpatientCopay);
            this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits = new beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable();
            base.Tables.Add(this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits);
            this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays = new beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable();
            base.Tables.Add(this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays);
            this.tableplanEffectiveDate = new planEffectiveDateDataTable();
            base.Tables.Add(this.tableplanEffectiveDate);
            this.tableplanExpirationDate = new planExpirationDateDataTable();
            base.Tables.Add(this.tableplanExpirationDate);
            this.tableoutOfCountryCoverage = new outOfCountryCoverageDataTable();
            base.Tables.Add(this.tableoutOfCountryCoverage);
            this.tableoutOfCountryCoverageDescription = new outOfCountryCoverageDescriptionDataTable();
            base.Tables.Add(this.tableoutOfCountryCoverageDescription);
            this.tableoutOfServiceAreaCoverage = new outOfServiceAreaCoverageDataTable();
            base.Tables.Add(this.tableoutOfServiceAreaCoverage);
            this.tableoutOfServiceAreaCoverageDescription = new outOfServiceAreaCoverageDescriptionDataTable();
            base.Tables.Add(this.tableoutOfServiceAreaCoverageDescription);
            this.tablenationalNetwork = new nationalNetworkDataTable();
            base.Tables.Add(this.tablenationalNetwork);
            this.tablesummaryBenefitAndCoverageURL = new summaryBenefitAndCoverageURLDataTable();
            base.Tables.Add(this.tablesummaryBenefitAndCoverageURL);
            this.tableenrollmentPaymentURL = new enrollmentPaymentURLDataTable();
            base.Tables.Add(this.tableenrollmentPaymentURL);
            this.tableplanBrochure = new planBrochureDataTable();
            base.Tables.Add(this.tableplanBrochure);
            this.tablecostShareVariancesList = new costShareVariancesListDataTable();
            base.Tables.Add(this.tablecostShareVariancesList);
            this.tablecostShareVariance = new costShareVarianceDataTable();
            base.Tables.Add(this.tablecostShareVariance);
            this.tableplanId = new planIdDataTable();
            base.Tables.Add(this.tableplanId);
            this.tablecsrVariationType = new csrVariationTypeDataTable();
            base.Tables.Add(this.tablecsrVariationType);
            this.tableissuerActuarialValue = new issuerActuarialValueDataTable();
            base.Tables.Add(this.tableissuerActuarialValue);
            this.tableavCalculatorOutputNumber = new avCalculatorOutputNumberDataTable();
            base.Tables.Add(this.tableavCalculatorOutputNumber);
            this.tablemedicalAndDrugDeductiblesIntegrated = new medicalAndDrugDeductiblesIntegratedDataTable();
            base.Tables.Add(this.tablemedicalAndDrugDeductiblesIntegrated);
            this.tablemedicalAndDrugMaxOutOfPocketIntegrated = new medicalAndDrugMaxOutOfPocketIntegratedDataTable();
            base.Tables.Add(this.tablemedicalAndDrugMaxOutOfPocketIntegrated);
            this.tablemultipleProviderTiers = new multipleProviderTiersDataTable();
            base.Tables.Add(this.tablemultipleProviderTiers);
            this.tablefirstTierUtilization = new firstTierUtilizationDataTable();
            base.Tables.Add(this.tablefirstTierUtilization);
            this.tablesecondTierUtilization = new secondTierUtilizationDataTable();
            base.Tables.Add(this.tablesecondTierUtilization);
            this.tablesbc = new sbcDataTable();
            base.Tables.Add(this.tablesbc);
            this.tablehavingBabyDeductible = new havingBabyDeductibleDataTable();
            base.Tables.Add(this.tablehavingBabyDeductible);
            this.tablehavingBabyCoPayment = new havingBabyCoPaymentDataTable();
            base.Tables.Add(this.tablehavingBabyCoPayment);
            this.tablehavingBabyCoInsurance = new havingBabyCoInsuranceDataTable();
            base.Tables.Add(this.tablehavingBabyCoInsurance);
            this.tablehavingBabyLimit = new havingBabyLimitDataTable();
            base.Tables.Add(this.tablehavingBabyLimit);
            this.tablehavingDiabetesDeductible = new havingDiabetesDeductibleDataTable();
            base.Tables.Add(this.tablehavingDiabetesDeductible);
            this.tablehavingDiabetesCopay = new havingDiabetesCopayDataTable();
            base.Tables.Add(this.tablehavingDiabetesCopay);
            this.tablehavingDiabetesCoInsurance = new havingDiabetesCoInsuranceDataTable();
            base.Tables.Add(this.tablehavingDiabetesCoInsurance);
            this.tablehavingDiabetesLimit = new havingDiabetesLimitDataTable();
            base.Tables.Add(this.tablehavingDiabetesLimit);
            this.tablemoopList = new moopListDataTable();
            base.Tables.Add(this.tablemoopList);
            this.tablemoop = new moopDataTable();
            base.Tables.Add(this.tablemoop);
            this.tablename = new nameDataTable();
            base.Tables.Add(this.tablename);
            this.tableinNetworkTier1IndividualAmount = new inNetworkTier1IndividualAmountDataTable();
            base.Tables.Add(this.tableinNetworkTier1IndividualAmount);
            this.tableinNetworkTier1FamilyAmount = new inNetworkTier1FamilyAmountDataTable();
            base.Tables.Add(this.tableinNetworkTier1FamilyAmount);
            this.tableinNetworkTier2IndividualAmount = new inNetworkTier2IndividualAmountDataTable();
            base.Tables.Add(this.tableinNetworkTier2IndividualAmount);
            this.tableinNetworkTier2FamilyAmount = new inNetworkTier2FamilyAmountDataTable();
            base.Tables.Add(this.tableinNetworkTier2FamilyAmount);
            this.tableoutOfNetworkIndividualAmount = new outOfNetworkIndividualAmountDataTable();
            base.Tables.Add(this.tableoutOfNetworkIndividualAmount);
            this.tableoutOfNetworkFamilyAmount = new outOfNetworkFamilyAmountDataTable();
            base.Tables.Add(this.tableoutOfNetworkFamilyAmount);
            this.tablecombinedInOutNetworkIndividualAmount = new combinedInOutNetworkIndividualAmountDataTable();
            base.Tables.Add(this.tablecombinedInOutNetworkIndividualAmount);
            this.tablecombinedInOutNetworkFamilyAmount = new combinedInOutNetworkFamilyAmountDataTable();
            base.Tables.Add(this.tablecombinedInOutNetworkFamilyAmount);
            this.tableplanDeductibleList = new planDeductibleListDataTable();
            base.Tables.Add(this.tableplanDeductibleList);
            this.tableplanDeductible = new planDeductibleDataTable();
            base.Tables.Add(this.tableplanDeductible);
            this.tabledeductibleType = new deductibleTypeDataTable();
            base.Tables.Add(this.tabledeductibleType);
            this.tableinNetworkTier1Individual = new inNetworkTier1IndividualDataTable();
            base.Tables.Add(this.tableinNetworkTier1Individual);
            this.tableinNetworkTier1Family = new inNetworkTier1FamilyDataTable();
            base.Tables.Add(this.tableinNetworkTier1Family);
            this.tablecoinsuranceInNetworkTier1 = new coinsuranceInNetworkTier1DataTable();
            base.Tables.Add(this.tablecoinsuranceInNetworkTier1);
            this.tableinNetworkTierTwoIndividual = new inNetworkTierTwoIndividualDataTable();
            base.Tables.Add(this.tableinNetworkTierTwoIndividual);
            this.tableinNetworkTierTwoFamily = new inNetworkTierTwoFamilyDataTable();
            base.Tables.Add(this.tableinNetworkTierTwoFamily);
            this.tablecoinsuranceInNetworkTier2 = new coinsuranceInNetworkTier2DataTable();
            base.Tables.Add(this.tablecoinsuranceInNetworkTier2);
            this.tableoutOfNetworkIndividual = new outOfNetworkIndividualDataTable();
            base.Tables.Add(this.tableoutOfNetworkIndividual);
            this.tableoutOfNetworkFamily = new outOfNetworkFamilyDataTable();
            base.Tables.Add(this.tableoutOfNetworkFamily);
            this.tablecombinedInOrOutNetworkIndividual = new combinedInOrOutNetworkIndividualDataTable();
            base.Tables.Add(this.tablecombinedInOrOutNetworkIndividual);
            this.tablecombinedInOrOutNetworkFamily = new combinedInOrOutNetworkFamilyDataTable();
            base.Tables.Add(this.tablecombinedInOrOutNetworkFamily);
            this.tableserviceVisitList = new serviceVisitListDataTable();
            base.Tables.Add(this.tableserviceVisitList);
            this.tableserviceVisit = new serviceVisitDataTable();
            base.Tables.Add(this.tableserviceVisit);
            this.tablevisitType = new visitTypeDataTable();
            base.Tables.Add(this.tablevisitType);
            this.tablecopayInNetworkTier1 = new copayInNetworkTier1DataTable();
            base.Tables.Add(this.tablecopayInNetworkTier1);
            this.tablecopayInNetworkTier2 = new copayInNetworkTier2DataTable();
            base.Tables.Add(this.tablecopayInNetworkTier2);
            this.tablecopayOutOfNetwork = new copayOutOfNetworkDataTable();
            base.Tables.Add(this.tablecopayOutOfNetwork);
            this.tablecoInsuranceInNetworkTier1 = new coInsuranceInNetworkTier1DataTable();
            base.Tables.Add(this.tablecoInsuranceInNetworkTier1);
            this.tablecoInsuranceInNetworkTier2 = new coInsuranceInNetworkTier2DataTable();
            base.Tables.Add(this.tablecoInsuranceInNetworkTier2);
            this.tablecoInsuranceOutOfNetwork = new coInsuranceOutOfNetworkDataTable();
            base.Tables.Add(this.tablecoInsuranceOutOfNetwork);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_planMarketingName", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanMarketingName.planAttributes_IdColumn});
            this.tableplanMarketingName.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_planMarketingName", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanMarketingName.costShareVariance_IdColumn});
            this.tableplanMarketingName.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_metalLevel", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemetalLevel.planAttributes_IdColumn});
            this.tablemetalLevel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_metalLevel", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemetalLevel.costShareVariance_IdColumn});
            this.tablemetalLevel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("packagesList_packages", new global::System.Data.DataColumn[] {
                        this.tablepackagesList.packagesList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablepackages.packagesList_IdColumn});
            this.tablepackages.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("packages_header", new global::System.Data.DataColumn[] {
                        this.tablepackages.packages_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableheader.packages_IdColumn});
            this.tableheader.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("header_issuerId", new global::System.Data.DataColumn[] {
                        this.tableheader.header_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableissuerId.header_IdColumn});
            this.tableissuerId.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("header_statePostalCode", new global::System.Data.DataColumn[] {
                        this.tableheader.header_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablestatePostalCode.header_IdColumn});
            this.tablestatePostalCode.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("header_marketCoverage", new global::System.Data.DataColumn[] {
                        this.tableheader.header_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarketCoverage.header_IdColumn});
            this.tablemarketCoverage.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("header_dentalPlanOnlyInd", new global::System.Data.DataColumn[] {
                        this.tableheader.header_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tabledentalPlanOnlyInd.header_IdColumn});
            this.tabledentalPlanOnlyInd.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("header_tin", new global::System.Data.DataColumn[] {
                        this.tableheader.header_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tabletin.header_IdColumn});
            this.tabletin.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("packages_benefitsList", new global::System.Data.DataColumn[] {
                        this.tablepackages.packages_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablebenefitsList.packages_IdColumn});
            this.tablebenefitsList.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefitsList_benefits", new global::System.Data.DataColumn[] {
                        this.tablebenefitsList.benefitsList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefitsList_IdColumn});
            this.tablebenefits.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_benefitTypeCode", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablebenefitTypeCode.benefits_IdColumn});
            this.tablebenefitTypeCode.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_isEHB", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisEHB.benefits_IdColumn});
            this.tableisEHB.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_isStateMandate", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisStateMandate.benefits_IdColumn});
            this.tableisStateMandate.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_isBenefitCovered", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisBenefitCovered.benefits_IdColumn});
            this.tableisBenefitCovered.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_serviceLimit", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableserviceLimit.benefits_IdColumn});
            this.tableserviceLimit.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_quantityLimit", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablequantityLimit.benefits_IdColumn});
            this.tablequantityLimit.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_unitLimit", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableunitLimit.benefits_IdColumn});
            this.tableunitLimit.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_minimumStay", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableminimumStay.benefits_IdColumn});
            this.tableminimumStay.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_exclusion", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableexclusion.benefits_IdColumn});
            this.tableexclusion.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_explanation", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableexplanation.benefits_IdColumn});
            this.tableexplanation.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_ehbVarianceReason", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableehbVarianceReason.benefits_IdColumn});
            this.tableehbVarianceReason.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_subjectToDeductibleTier1", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablesubjectToDeductibleTier1.benefits_IdColumn});
            this.tablesubjectToDeductibleTier1.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_subjectToDeductibleTier2", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablesubjectToDeductibleTier2.benefits_IdColumn});
            this.tablesubjectToDeductibleTier2.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_excludedInNetworkMOOP", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableexcludedInNetworkMOOP.benefits_IdColumn});
            this.tableexcludedInNetworkMOOP.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("benefits_excludedOutOfNetworkMOOP", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableexcludedOutOfNetworkMOOP.benefits_IdColumn});
            this.tableexcludedOutOfNetworkMOOP.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("packages_plansList", new global::System.Data.DataColumn[] {
                        this.tablepackages.packages_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplansList.packages_IdColumn});
            this.tableplansList.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("plansList_plans", new global::System.Data.DataColumn[] {
                        this.tableplansList.plansList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplans.plansList_IdColumn});
            this.tableplans.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("plans_planAttributes", new global::System.Data.DataColumn[] {
                        this.tableplans.plans_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.plans_IdColumn});
            this.tableplanAttributes.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_standardComponentID", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablestandardComponentID.planAttributes_IdColumn});
            this.tablestandardComponentID.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_hiosProductID", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehiosProductID.planAttributes_IdColumn});
            this.tablehiosProductID.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_hpid", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehpid.planAttributes_IdColumn});
            this.tablehpid.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_networkID", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablenetworkID.planAttributes_IdColumn});
            this.tablenetworkID.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_serviceAreaID", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableserviceAreaID.planAttributes_IdColumn});
            this.tableserviceAreaID.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_formularyID", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableformularyID.planAttributes_IdColumn});
            this.tableformularyID.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_isNewPlan", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisNewPlan.planAttributes_IdColumn});
            this.tableisNewPlan.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_planType", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanType.planAttributes_IdColumn});
            this.tableplanType.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_uniquePlanDesign", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableuniquePlanDesign.planAttributes_IdColumn});
            this.tableuniquePlanDesign.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_qhpOrNonQhp", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableqhpOrNonQhp.planAttributes_IdColumn});
            this.tableqhpOrNonQhp.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_insurancePlanPregnancyNoticeReqInd", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinsurancePlanPregnancyNoticeReqInd.planAttributes_IdColumn});
            this.tableinsurancePlanPregnancyNoticeReqInd.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_isSpecialistReferralRequired", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisSpecialistReferralRequired.planAttributes_IdColumn});
            this.tableisSpecialistReferralRequired.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_healthCareSpecialistReferralType", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehealthCareSpecialistReferralType.planAttributes_IdColumn});
            this.tablehealthCareSpecialistReferralType.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_insurancePlanBenefitExclusionText", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinsurancePlanBenefitExclusionText.planAttributes_IdColumn});
            this.tableinsurancePlanBenefitExclusionText.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_indianPlanVariation", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableindianPlanVariation.planAttributes_IdColumn});
            this.tableindianPlanVariation.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_hsaEligibility", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehsaEligibility.planAttributes_IdColumn});
            this.tablehsaEligibility.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_employerHSAHRAContributionIndicator", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableemployerHSAHRAContributionIndicator.planAttributes_IdColumn});
            this.tableemployerHSAHRAContributionIndicator.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_empContributionAmountForHSAOrHRA", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableempContributionAmountForHSAOrHRA.planAttributes_IdColumn});
            this.tableempContributionAmountForHSAOrHRA.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_childOnlyOffering", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablechildOnlyOffering.planAttributes_IdColumn});
            this.tablechildOnlyOffering.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_childOnlyPlanID", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablechildOnlyPlanID.planAttributes_IdColumn});
            this.tablechildOnlyPlanID.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_isWellnessProgramOffered", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisWellnessProgramOffered.planAttributes_IdColumn});
            this.tableisWellnessProgramOffered.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_isDiseaseMgmtProgramsOffered", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisDiseaseMgmtProgramsOffered.planAttributes_IdColumn});
            this.tableisDiseaseMgmtProgramsOffered.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_ehbApportionmentForPediatricDental", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableehbApportionmentForPediatricDental.planAttributes_IdColumn});
            this.tableehbApportionmentForPediatricDental.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_guaranteedVsEstimatedRate", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableguaranteedVsEstimatedRate.planAttributes_IdColumn});
            this.tableguaranteedVsEstimatedRate.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_maximumCoinsuranceForSpecialtyDrugs", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemaximumCoinsuranceForSpecialtyDrugs.planAttributes_IdColumn});
            this.tablemaximumCoinsuranceForSpecialtyDrugs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_maxNumDaysForChargingInpatientCopay", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemaxNumDaysForChargingInpatientCopay.planAttributes_IdColumn});
            this.tablemaxNumDaysForChargingInpatientCopay.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.planAttributes_IdColumn});
            this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.planAttributes_IdColumn});
            this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_planEffectiveDate", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanEffectiveDate.planAttributes_IdColumn});
            this.tableplanEffectiveDate.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_planExpirationDate", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanExpirationDate.planAttributes_IdColumn});
            this.tableplanExpirationDate.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_outOfCountryCoverage", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfCountryCoverage.planAttributes_IdColumn});
            this.tableoutOfCountryCoverage.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_outOfCountryCoverageDescription", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfCountryCoverageDescription.planAttributes_IdColumn});
            this.tableoutOfCountryCoverageDescription.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_outOfServiceAreaCoverage", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfServiceAreaCoverage.planAttributes_IdColumn});
            this.tableoutOfServiceAreaCoverage.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_outOfServiceAreaCoverageDescription", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfServiceAreaCoverageDescription.planAttributes_IdColumn});
            this.tableoutOfServiceAreaCoverageDescription.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_nationalNetwork", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablenationalNetwork.planAttributes_IdColumn});
            this.tablenationalNetwork.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_summaryBenefitAndCoverageURL", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablesummaryBenefitAndCoverageURL.planAttributes_IdColumn});
            this.tablesummaryBenefitAndCoverageURL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_enrollmentPaymentURL", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableenrollmentPaymentURL.planAttributes_IdColumn});
            this.tableenrollmentPaymentURL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planAttributes_planBrochure", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanBrochure.planAttributes_IdColumn});
            this.tableplanBrochure.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("plans_costShareVariancesList", new global::System.Data.DataColumn[] {
                        this.tableplans.plans_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecostShareVariancesList.plans_IdColumn});
            this.tablecostShareVariancesList.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariancesList_costShareVariance", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariancesList.costShareVariancesList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariancesList_IdColumn});
            this.tablecostShareVariance.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_planId", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanId.costShareVariance_IdColumn});
            this.tableplanId.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_csrVariationType", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecsrVariationType.costShareVariance_IdColumn});
            this.tablecsrVariationType.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_issuerActuarialValue", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableissuerActuarialValue.costShareVariance_IdColumn});
            this.tableissuerActuarialValue.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_avCalculatorOutputNumber", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableavCalculatorOutputNumber.costShareVariance_IdColumn});
            this.tableavCalculatorOutputNumber.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_medicalAndDrugDeductiblesIntegrated", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemedicalAndDrugDeductiblesIntegrated.costShareVariance_IdColumn});
            this.tablemedicalAndDrugDeductiblesIntegrated.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_medicalAndDrugMaxOutOfPocketIntegrated", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemedicalAndDrugMaxOutOfPocketIntegrated.costShareVariance_IdColumn});
            this.tablemedicalAndDrugMaxOutOfPocketIntegrated.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_multipleProviderTiers", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemultipleProviderTiers.costShareVariance_IdColumn});
            this.tablemultipleProviderTiers.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_firstTierUtilization", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablefirstTierUtilization.costShareVariance_IdColumn});
            this.tablefirstTierUtilization.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_secondTierUtilization", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablesecondTierUtilization.costShareVariance_IdColumn});
            this.tablesecondTierUtilization.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_sbc", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablesbc.costShareVariance_IdColumn});
            this.tablesbc.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("sbc_havingBabyDeductible", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingBabyDeductible.sbc_IdColumn});
            this.tablehavingBabyDeductible.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("sbc_havingBabyCoPayment", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingBabyCoPayment.sbc_IdColumn});
            this.tablehavingBabyCoPayment.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("sbc_havingBabyCoInsurance", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingBabyCoInsurance.sbc_IdColumn});
            this.tablehavingBabyCoInsurance.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("sbc_havingBabyLimit", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingBabyLimit.sbc_IdColumn});
            this.tablehavingBabyLimit.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("sbc_havingDiabetesDeductible", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingDiabetesDeductible.sbc_IdColumn});
            this.tablehavingDiabetesDeductible.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("sbc_havingDiabetesCopay", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingDiabetesCopay.sbc_IdColumn});
            this.tablehavingDiabetesCopay.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("sbc_havingDiabetesCoInsurance", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingDiabetesCoInsurance.sbc_IdColumn});
            this.tablehavingDiabetesCoInsurance.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("sbc_havingDiabetesLimit", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingDiabetesLimit.sbc_IdColumn});
            this.tablehavingDiabetesLimit.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_moopList", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemoopList.costShareVariance_IdColumn});
            this.tablemoopList.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("moopList_moop", new global::System.Data.DataColumn[] {
                        this.tablemoopList.moopList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemoop.moopList_IdColumn});
            this.tablemoop.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("moop_name", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablename.moop_IdColumn});
            this.tablename.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("moop_inNetworkTier1IndividualAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTier1IndividualAmount.moop_IdColumn});
            this.tableinNetworkTier1IndividualAmount.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("moop_inNetworkTier1FamilyAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTier1FamilyAmount.moop_IdColumn});
            this.tableinNetworkTier1FamilyAmount.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("moop_inNetworkTier2IndividualAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTier2IndividualAmount.moop_IdColumn});
            this.tableinNetworkTier2IndividualAmount.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("moop_inNetworkTier2FamilyAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTier2FamilyAmount.moop_IdColumn});
            this.tableinNetworkTier2FamilyAmount.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("moop_outOfNetworkIndividualAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfNetworkIndividualAmount.moop_IdColumn});
            this.tableoutOfNetworkIndividualAmount.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("moop_outOfNetworkFamilyAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfNetworkFamilyAmount.moop_IdColumn});
            this.tableoutOfNetworkFamilyAmount.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("moop_combinedInOutNetworkIndividualAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecombinedInOutNetworkIndividualAmount.moop_IdColumn});
            this.tablecombinedInOutNetworkIndividualAmount.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("moop_combinedInOutNetworkFamilyAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecombinedInOutNetworkFamilyAmount.moop_IdColumn});
            this.tablecombinedInOutNetworkFamilyAmount.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_planDeductibleList", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanDeductibleList.costShareVariance_IdColumn});
            this.tableplanDeductibleList.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planDeductibleList_planDeductible", new global::System.Data.DataColumn[] {
                        this.tableplanDeductibleList.planDeductibleList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductibleList_IdColumn});
            this.tableplanDeductible.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planDeductible_deductibleType", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tabledeductibleType.planDeductible_IdColumn});
            this.tabledeductibleType.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planDeductible_inNetworkTier1Individual", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTier1Individual.planDeductible_IdColumn});
            this.tableinNetworkTier1Individual.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planDeductible_inNetworkTier1Family", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTier1Family.planDeductible_IdColumn});
            this.tableinNetworkTier1Family.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planDeductible_coinsuranceInNetworkTier1", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecoinsuranceInNetworkTier1.planDeductible_IdColumn});
            this.tablecoinsuranceInNetworkTier1.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planDeductible_inNetworkTierTwoIndividual", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTierTwoIndividual.planDeductible_IdColumn});
            this.tableinNetworkTierTwoIndividual.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planDeductible_inNetworkTierTwoFamily", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTierTwoFamily.planDeductible_IdColumn});
            this.tableinNetworkTierTwoFamily.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planDeductible_coinsuranceInNetworkTier2", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecoinsuranceInNetworkTier2.planDeductible_IdColumn});
            this.tablecoinsuranceInNetworkTier2.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planDeductible_outOfNetworkIndividual", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfNetworkIndividual.planDeductible_IdColumn});
            this.tableoutOfNetworkIndividual.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planDeductible_outOfNetworkFamily", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfNetworkFamily.planDeductible_IdColumn});
            this.tableoutOfNetworkFamily.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planDeductible_combinedInOrOutNetworkIndividual", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecombinedInOrOutNetworkIndividual.planDeductible_IdColumn});
            this.tablecombinedInOrOutNetworkIndividual.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("planDeductible_combinedInOrOutNetworkFamily", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecombinedInOrOutNetworkFamily.planDeductible_IdColumn});
            this.tablecombinedInOrOutNetworkFamily.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("costShareVariance_serviceVisitList", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableserviceVisitList.costShareVariance_IdColumn});
            this.tableserviceVisitList.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("serviceVisitList_serviceVisit", new global::System.Data.DataColumn[] {
                        this.tableserviceVisitList.serviceVisitList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisitList_IdColumn});
            this.tableserviceVisit.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("serviceVisit_visitType", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablevisitType.serviceVisit_IdColumn});
            this.tablevisitType.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("serviceVisit_copayInNetworkTier1", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecopayInNetworkTier1.serviceVisit_IdColumn});
            this.tablecopayInNetworkTier1.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("serviceVisit_copayInNetworkTier2", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecopayInNetworkTier2.serviceVisit_IdColumn});
            this.tablecopayInNetworkTier2.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("serviceVisit_copayOutOfNetwork", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecopayOutOfNetwork.serviceVisit_IdColumn});
            this.tablecopayOutOfNetwork.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("serviceVisit_coInsuranceInNetworkTier1", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecoInsuranceInNetworkTier1.serviceVisit_IdColumn});
            this.tablecoInsuranceInNetworkTier1.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("serviceVisit_coInsuranceInNetworkTier2", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecoInsuranceInNetworkTier2.serviceVisit_IdColumn});
            this.tablecoInsuranceInNetworkTier2.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("serviceVisit_coInsuranceOutOfNetwork", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecoInsuranceOutOfNetwork.serviceVisit_IdColumn});
            this.tablecoInsuranceOutOfNetwork.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationplanAttributes_planMarketingName = new global::System.Data.DataRelation("planAttributes_planMarketingName", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanMarketingName.planAttributes_IdColumn}, false);
            this.relationplanAttributes_planMarketingName.Nested = true;
            this.Relations.Add(this.relationplanAttributes_planMarketingName);
            this.relationcostShareVariance_planMarketingName = new global::System.Data.DataRelation("costShareVariance_planMarketingName", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanMarketingName.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_planMarketingName.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_planMarketingName);
            this.relationplanAttributes_metalLevel = new global::System.Data.DataRelation("planAttributes_metalLevel", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemetalLevel.planAttributes_IdColumn}, false);
            this.relationplanAttributes_metalLevel.Nested = true;
            this.Relations.Add(this.relationplanAttributes_metalLevel);
            this.relationcostShareVariance_metalLevel = new global::System.Data.DataRelation("costShareVariance_metalLevel", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemetalLevel.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_metalLevel.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_metalLevel);
            this.relationpackagesList_packages = new global::System.Data.DataRelation("packagesList_packages", new global::System.Data.DataColumn[] {
                        this.tablepackagesList.packagesList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablepackages.packagesList_IdColumn}, false);
            this.relationpackagesList_packages.Nested = true;
            this.Relations.Add(this.relationpackagesList_packages);
            this.relationpackages_header = new global::System.Data.DataRelation("packages_header", new global::System.Data.DataColumn[] {
                        this.tablepackages.packages_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableheader.packages_IdColumn}, false);
            this.relationpackages_header.Nested = true;
            this.Relations.Add(this.relationpackages_header);
            this.relationheader_issuerId = new global::System.Data.DataRelation("header_issuerId", new global::System.Data.DataColumn[] {
                        this.tableheader.header_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableissuerId.header_IdColumn}, false);
            this.relationheader_issuerId.Nested = true;
            this.Relations.Add(this.relationheader_issuerId);
            this.relationheader_statePostalCode = new global::System.Data.DataRelation("header_statePostalCode", new global::System.Data.DataColumn[] {
                        this.tableheader.header_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablestatePostalCode.header_IdColumn}, false);
            this.relationheader_statePostalCode.Nested = true;
            this.Relations.Add(this.relationheader_statePostalCode);
            this.relationheader_marketCoverage = new global::System.Data.DataRelation("header_marketCoverage", new global::System.Data.DataColumn[] {
                        this.tableheader.header_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarketCoverage.header_IdColumn}, false);
            this.relationheader_marketCoverage.Nested = true;
            this.Relations.Add(this.relationheader_marketCoverage);
            this.relationheader_dentalPlanOnlyInd = new global::System.Data.DataRelation("header_dentalPlanOnlyInd", new global::System.Data.DataColumn[] {
                        this.tableheader.header_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tabledentalPlanOnlyInd.header_IdColumn}, false);
            this.relationheader_dentalPlanOnlyInd.Nested = true;
            this.Relations.Add(this.relationheader_dentalPlanOnlyInd);
            this.relationheader_tin = new global::System.Data.DataRelation("header_tin", new global::System.Data.DataColumn[] {
                        this.tableheader.header_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tabletin.header_IdColumn}, false);
            this.relationheader_tin.Nested = true;
            this.Relations.Add(this.relationheader_tin);
            this.relationpackages_benefitsList = new global::System.Data.DataRelation("packages_benefitsList", new global::System.Data.DataColumn[] {
                        this.tablepackages.packages_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablebenefitsList.packages_IdColumn}, false);
            this.relationpackages_benefitsList.Nested = true;
            this.Relations.Add(this.relationpackages_benefitsList);
            this.relationbenefitsList_benefits = new global::System.Data.DataRelation("benefitsList_benefits", new global::System.Data.DataColumn[] {
                        this.tablebenefitsList.benefitsList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefitsList_IdColumn}, false);
            this.relationbenefitsList_benefits.Nested = true;
            this.Relations.Add(this.relationbenefitsList_benefits);
            this.relationbenefits_benefitTypeCode = new global::System.Data.DataRelation("benefits_benefitTypeCode", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablebenefitTypeCode.benefits_IdColumn}, false);
            this.relationbenefits_benefitTypeCode.Nested = true;
            this.Relations.Add(this.relationbenefits_benefitTypeCode);
            this.relationbenefits_isEHB = new global::System.Data.DataRelation("benefits_isEHB", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisEHB.benefits_IdColumn}, false);
            this.relationbenefits_isEHB.Nested = true;
            this.Relations.Add(this.relationbenefits_isEHB);
            this.relationbenefits_isStateMandate = new global::System.Data.DataRelation("benefits_isStateMandate", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisStateMandate.benefits_IdColumn}, false);
            this.relationbenefits_isStateMandate.Nested = true;
            this.Relations.Add(this.relationbenefits_isStateMandate);
            this.relationbenefits_isBenefitCovered = new global::System.Data.DataRelation("benefits_isBenefitCovered", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisBenefitCovered.benefits_IdColumn}, false);
            this.relationbenefits_isBenefitCovered.Nested = true;
            this.Relations.Add(this.relationbenefits_isBenefitCovered);
            this.relationbenefits_serviceLimit = new global::System.Data.DataRelation("benefits_serviceLimit", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableserviceLimit.benefits_IdColumn}, false);
            this.relationbenefits_serviceLimit.Nested = true;
            this.Relations.Add(this.relationbenefits_serviceLimit);
            this.relationbenefits_quantityLimit = new global::System.Data.DataRelation("benefits_quantityLimit", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablequantityLimit.benefits_IdColumn}, false);
            this.relationbenefits_quantityLimit.Nested = true;
            this.Relations.Add(this.relationbenefits_quantityLimit);
            this.relationbenefits_unitLimit = new global::System.Data.DataRelation("benefits_unitLimit", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableunitLimit.benefits_IdColumn}, false);
            this.relationbenefits_unitLimit.Nested = true;
            this.Relations.Add(this.relationbenefits_unitLimit);
            this.relationbenefits_minimumStay = new global::System.Data.DataRelation("benefits_minimumStay", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableminimumStay.benefits_IdColumn}, false);
            this.relationbenefits_minimumStay.Nested = true;
            this.Relations.Add(this.relationbenefits_minimumStay);
            this.relationbenefits_exclusion = new global::System.Data.DataRelation("benefits_exclusion", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableexclusion.benefits_IdColumn}, false);
            this.relationbenefits_exclusion.Nested = true;
            this.Relations.Add(this.relationbenefits_exclusion);
            this.relationbenefits_explanation = new global::System.Data.DataRelation("benefits_explanation", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableexplanation.benefits_IdColumn}, false);
            this.relationbenefits_explanation.Nested = true;
            this.Relations.Add(this.relationbenefits_explanation);
            this.relationbenefits_ehbVarianceReason = new global::System.Data.DataRelation("benefits_ehbVarianceReason", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableehbVarianceReason.benefits_IdColumn}, false);
            this.relationbenefits_ehbVarianceReason.Nested = true;
            this.Relations.Add(this.relationbenefits_ehbVarianceReason);
            this.relationbenefits_subjectToDeductibleTier1 = new global::System.Data.DataRelation("benefits_subjectToDeductibleTier1", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablesubjectToDeductibleTier1.benefits_IdColumn}, false);
            this.relationbenefits_subjectToDeductibleTier1.Nested = true;
            this.Relations.Add(this.relationbenefits_subjectToDeductibleTier1);
            this.relationbenefits_subjectToDeductibleTier2 = new global::System.Data.DataRelation("benefits_subjectToDeductibleTier2", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablesubjectToDeductibleTier2.benefits_IdColumn}, false);
            this.relationbenefits_subjectToDeductibleTier2.Nested = true;
            this.Relations.Add(this.relationbenefits_subjectToDeductibleTier2);
            this.relationbenefits_excludedInNetworkMOOP = new global::System.Data.DataRelation("benefits_excludedInNetworkMOOP", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableexcludedInNetworkMOOP.benefits_IdColumn}, false);
            this.relationbenefits_excludedInNetworkMOOP.Nested = true;
            this.Relations.Add(this.relationbenefits_excludedInNetworkMOOP);
            this.relationbenefits_excludedOutOfNetworkMOOP = new global::System.Data.DataRelation("benefits_excludedOutOfNetworkMOOP", new global::System.Data.DataColumn[] {
                        this.tablebenefits.benefits_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableexcludedOutOfNetworkMOOP.benefits_IdColumn}, false);
            this.relationbenefits_excludedOutOfNetworkMOOP.Nested = true;
            this.Relations.Add(this.relationbenefits_excludedOutOfNetworkMOOP);
            this.relationpackages_plansList = new global::System.Data.DataRelation("packages_plansList", new global::System.Data.DataColumn[] {
                        this.tablepackages.packages_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplansList.packages_IdColumn}, false);
            this.relationpackages_plansList.Nested = true;
            this.Relations.Add(this.relationpackages_plansList);
            this.relationplansList_plans = new global::System.Data.DataRelation("plansList_plans", new global::System.Data.DataColumn[] {
                        this.tableplansList.plansList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplans.plansList_IdColumn}, false);
            this.relationplansList_plans.Nested = true;
            this.Relations.Add(this.relationplansList_plans);
            this.relationplans_planAttributes = new global::System.Data.DataRelation("plans_planAttributes", new global::System.Data.DataColumn[] {
                        this.tableplans.plans_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.plans_IdColumn}, false);
            this.relationplans_planAttributes.Nested = true;
            this.Relations.Add(this.relationplans_planAttributes);
            this.relationplanAttributes_standardComponentID = new global::System.Data.DataRelation("planAttributes_standardComponentID", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablestandardComponentID.planAttributes_IdColumn}, false);
            this.relationplanAttributes_standardComponentID.Nested = true;
            this.Relations.Add(this.relationplanAttributes_standardComponentID);
            this.relationplanAttributes_hiosProductID = new global::System.Data.DataRelation("planAttributes_hiosProductID", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehiosProductID.planAttributes_IdColumn}, false);
            this.relationplanAttributes_hiosProductID.Nested = true;
            this.Relations.Add(this.relationplanAttributes_hiosProductID);
            this.relationplanAttributes_hpid = new global::System.Data.DataRelation("planAttributes_hpid", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehpid.planAttributes_IdColumn}, false);
            this.relationplanAttributes_hpid.Nested = true;
            this.Relations.Add(this.relationplanAttributes_hpid);
            this.relationplanAttributes_networkID = new global::System.Data.DataRelation("planAttributes_networkID", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablenetworkID.planAttributes_IdColumn}, false);
            this.relationplanAttributes_networkID.Nested = true;
            this.Relations.Add(this.relationplanAttributes_networkID);
            this.relationplanAttributes_serviceAreaID = new global::System.Data.DataRelation("planAttributes_serviceAreaID", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableserviceAreaID.planAttributes_IdColumn}, false);
            this.relationplanAttributes_serviceAreaID.Nested = true;
            this.Relations.Add(this.relationplanAttributes_serviceAreaID);
            this.relationplanAttributes_formularyID = new global::System.Data.DataRelation("planAttributes_formularyID", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableformularyID.planAttributes_IdColumn}, false);
            this.relationplanAttributes_formularyID.Nested = true;
            this.Relations.Add(this.relationplanAttributes_formularyID);
            this.relationplanAttributes_isNewPlan = new global::System.Data.DataRelation("planAttributes_isNewPlan", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisNewPlan.planAttributes_IdColumn}, false);
            this.relationplanAttributes_isNewPlan.Nested = true;
            this.Relations.Add(this.relationplanAttributes_isNewPlan);
            this.relationplanAttributes_planType = new global::System.Data.DataRelation("planAttributes_planType", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanType.planAttributes_IdColumn}, false);
            this.relationplanAttributes_planType.Nested = true;
            this.Relations.Add(this.relationplanAttributes_planType);
            this.relationplanAttributes_uniquePlanDesign = new global::System.Data.DataRelation("planAttributes_uniquePlanDesign", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableuniquePlanDesign.planAttributes_IdColumn}, false);
            this.relationplanAttributes_uniquePlanDesign.Nested = true;
            this.Relations.Add(this.relationplanAttributes_uniquePlanDesign);
            this.relationplanAttributes_qhpOrNonQhp = new global::System.Data.DataRelation("planAttributes_qhpOrNonQhp", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableqhpOrNonQhp.planAttributes_IdColumn}, false);
            this.relationplanAttributes_qhpOrNonQhp.Nested = true;
            this.Relations.Add(this.relationplanAttributes_qhpOrNonQhp);
            this.relationplanAttributes_insurancePlanPregnancyNoticeReqInd = new global::System.Data.DataRelation("planAttributes_insurancePlanPregnancyNoticeReqInd", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinsurancePlanPregnancyNoticeReqInd.planAttributes_IdColumn}, false);
            this.relationplanAttributes_insurancePlanPregnancyNoticeReqInd.Nested = true;
            this.Relations.Add(this.relationplanAttributes_insurancePlanPregnancyNoticeReqInd);
            this.relationplanAttributes_isSpecialistReferralRequired = new global::System.Data.DataRelation("planAttributes_isSpecialistReferralRequired", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisSpecialistReferralRequired.planAttributes_IdColumn}, false);
            this.relationplanAttributes_isSpecialistReferralRequired.Nested = true;
            this.Relations.Add(this.relationplanAttributes_isSpecialistReferralRequired);
            this.relationplanAttributes_healthCareSpecialistReferralType = new global::System.Data.DataRelation("planAttributes_healthCareSpecialistReferralType", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehealthCareSpecialistReferralType.planAttributes_IdColumn}, false);
            this.relationplanAttributes_healthCareSpecialistReferralType.Nested = true;
            this.Relations.Add(this.relationplanAttributes_healthCareSpecialistReferralType);
            this.relationplanAttributes_insurancePlanBenefitExclusionText = new global::System.Data.DataRelation("planAttributes_insurancePlanBenefitExclusionText", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinsurancePlanBenefitExclusionText.planAttributes_IdColumn}, false);
            this.relationplanAttributes_insurancePlanBenefitExclusionText.Nested = true;
            this.Relations.Add(this.relationplanAttributes_insurancePlanBenefitExclusionText);
            this.relationplanAttributes_indianPlanVariation = new global::System.Data.DataRelation("planAttributes_indianPlanVariation", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableindianPlanVariation.planAttributes_IdColumn}, false);
            this.relationplanAttributes_indianPlanVariation.Nested = true;
            this.Relations.Add(this.relationplanAttributes_indianPlanVariation);
            this.relationplanAttributes_hsaEligibility = new global::System.Data.DataRelation("planAttributes_hsaEligibility", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehsaEligibility.planAttributes_IdColumn}, false);
            this.relationplanAttributes_hsaEligibility.Nested = true;
            this.Relations.Add(this.relationplanAttributes_hsaEligibility);
            this.relationplanAttributes_employerHSAHRAContributionIndicator = new global::System.Data.DataRelation("planAttributes_employerHSAHRAContributionIndicator", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableemployerHSAHRAContributionIndicator.planAttributes_IdColumn}, false);
            this.relationplanAttributes_employerHSAHRAContributionIndicator.Nested = true;
            this.Relations.Add(this.relationplanAttributes_employerHSAHRAContributionIndicator);
            this.relationplanAttributes_empContributionAmountForHSAOrHRA = new global::System.Data.DataRelation("planAttributes_empContributionAmountForHSAOrHRA", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableempContributionAmountForHSAOrHRA.planAttributes_IdColumn}, false);
            this.relationplanAttributes_empContributionAmountForHSAOrHRA.Nested = true;
            this.Relations.Add(this.relationplanAttributes_empContributionAmountForHSAOrHRA);
            this.relationplanAttributes_childOnlyOffering = new global::System.Data.DataRelation("planAttributes_childOnlyOffering", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablechildOnlyOffering.planAttributes_IdColumn}, false);
            this.relationplanAttributes_childOnlyOffering.Nested = true;
            this.Relations.Add(this.relationplanAttributes_childOnlyOffering);
            this.relationplanAttributes_childOnlyPlanID = new global::System.Data.DataRelation("planAttributes_childOnlyPlanID", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablechildOnlyPlanID.planAttributes_IdColumn}, false);
            this.relationplanAttributes_childOnlyPlanID.Nested = true;
            this.Relations.Add(this.relationplanAttributes_childOnlyPlanID);
            this.relationplanAttributes_isWellnessProgramOffered = new global::System.Data.DataRelation("planAttributes_isWellnessProgramOffered", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisWellnessProgramOffered.planAttributes_IdColumn}, false);
            this.relationplanAttributes_isWellnessProgramOffered.Nested = true;
            this.Relations.Add(this.relationplanAttributes_isWellnessProgramOffered);
            this.relationplanAttributes_isDiseaseMgmtProgramsOffered = new global::System.Data.DataRelation("planAttributes_isDiseaseMgmtProgramsOffered", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableisDiseaseMgmtProgramsOffered.planAttributes_IdColumn}, false);
            this.relationplanAttributes_isDiseaseMgmtProgramsOffered.Nested = true;
            this.Relations.Add(this.relationplanAttributes_isDiseaseMgmtProgramsOffered);
            this.relationplanAttributes_ehbApportionmentForPediatricDental = new global::System.Data.DataRelation("planAttributes_ehbApportionmentForPediatricDental", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableehbApportionmentForPediatricDental.planAttributes_IdColumn}, false);
            this.relationplanAttributes_ehbApportionmentForPediatricDental.Nested = true;
            this.Relations.Add(this.relationplanAttributes_ehbApportionmentForPediatricDental);
            this.relationplanAttributes_guaranteedVsEstimatedRate = new global::System.Data.DataRelation("planAttributes_guaranteedVsEstimatedRate", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableguaranteedVsEstimatedRate.planAttributes_IdColumn}, false);
            this.relationplanAttributes_guaranteedVsEstimatedRate.Nested = true;
            this.Relations.Add(this.relationplanAttributes_guaranteedVsEstimatedRate);
            this.relationplanAttributes_maximumCoinsuranceForSpecialtyDrugs = new global::System.Data.DataRelation("planAttributes_maximumCoinsuranceForSpecialtyDrugs", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemaximumCoinsuranceForSpecialtyDrugs.planAttributes_IdColumn}, false);
            this.relationplanAttributes_maximumCoinsuranceForSpecialtyDrugs.Nested = true;
            this.Relations.Add(this.relationplanAttributes_maximumCoinsuranceForSpecialtyDrugs);
            this.relationplanAttributes_maxNumDaysForChargingInpatientCopay = new global::System.Data.DataRelation("planAttributes_maxNumDaysForChargingInpatientCopay", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemaxNumDaysForChargingInpatientCopay.planAttributes_IdColumn}, false);
            this.relationplanAttributes_maxNumDaysForChargingInpatientCopay.Nested = true;
            this.Relations.Add(this.relationplanAttributes_maxNumDaysForChargingInpatientCopay);
            this.relationplanAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits = new global::System.Data.DataRelation("planAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.planAttributes_IdColumn}, false);
            this.relationplanAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits.Nested = true;
            this.Relations.Add(this.relationplanAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits);
            this.relationplanAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays = new global::System.Data.DataRelation("planAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.planAttributes_IdColumn}, false);
            this.relationplanAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.Nested = true;
            this.Relations.Add(this.relationplanAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays);
            this.relationplanAttributes_planEffectiveDate = new global::System.Data.DataRelation("planAttributes_planEffectiveDate", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanEffectiveDate.planAttributes_IdColumn}, false);
            this.relationplanAttributes_planEffectiveDate.Nested = true;
            this.Relations.Add(this.relationplanAttributes_planEffectiveDate);
            this.relationplanAttributes_planExpirationDate = new global::System.Data.DataRelation("planAttributes_planExpirationDate", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanExpirationDate.planAttributes_IdColumn}, false);
            this.relationplanAttributes_planExpirationDate.Nested = true;
            this.Relations.Add(this.relationplanAttributes_planExpirationDate);
            this.relationplanAttributes_outOfCountryCoverage = new global::System.Data.DataRelation("planAttributes_outOfCountryCoverage", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfCountryCoverage.planAttributes_IdColumn}, false);
            this.relationplanAttributes_outOfCountryCoverage.Nested = true;
            this.Relations.Add(this.relationplanAttributes_outOfCountryCoverage);
            this.relationplanAttributes_outOfCountryCoverageDescription = new global::System.Data.DataRelation("planAttributes_outOfCountryCoverageDescription", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfCountryCoverageDescription.planAttributes_IdColumn}, false);
            this.relationplanAttributes_outOfCountryCoverageDescription.Nested = true;
            this.Relations.Add(this.relationplanAttributes_outOfCountryCoverageDescription);
            this.relationplanAttributes_outOfServiceAreaCoverage = new global::System.Data.DataRelation("planAttributes_outOfServiceAreaCoverage", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfServiceAreaCoverage.planAttributes_IdColumn}, false);
            this.relationplanAttributes_outOfServiceAreaCoverage.Nested = true;
            this.Relations.Add(this.relationplanAttributes_outOfServiceAreaCoverage);
            this.relationplanAttributes_outOfServiceAreaCoverageDescription = new global::System.Data.DataRelation("planAttributes_outOfServiceAreaCoverageDescription", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfServiceAreaCoverageDescription.planAttributes_IdColumn}, false);
            this.relationplanAttributes_outOfServiceAreaCoverageDescription.Nested = true;
            this.Relations.Add(this.relationplanAttributes_outOfServiceAreaCoverageDescription);
            this.relationplanAttributes_nationalNetwork = new global::System.Data.DataRelation("planAttributes_nationalNetwork", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablenationalNetwork.planAttributes_IdColumn}, false);
            this.relationplanAttributes_nationalNetwork.Nested = true;
            this.Relations.Add(this.relationplanAttributes_nationalNetwork);
            this.relationplanAttributes_summaryBenefitAndCoverageURL = new global::System.Data.DataRelation("planAttributes_summaryBenefitAndCoverageURL", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablesummaryBenefitAndCoverageURL.planAttributes_IdColumn}, false);
            this.relationplanAttributes_summaryBenefitAndCoverageURL.Nested = true;
            this.Relations.Add(this.relationplanAttributes_summaryBenefitAndCoverageURL);
            this.relationplanAttributes_enrollmentPaymentURL = new global::System.Data.DataRelation("planAttributes_enrollmentPaymentURL", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableenrollmentPaymentURL.planAttributes_IdColumn}, false);
            this.relationplanAttributes_enrollmentPaymentURL.Nested = true;
            this.Relations.Add(this.relationplanAttributes_enrollmentPaymentURL);
            this.relationplanAttributes_planBrochure = new global::System.Data.DataRelation("planAttributes_planBrochure", new global::System.Data.DataColumn[] {
                        this.tableplanAttributes.planAttributes_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanBrochure.planAttributes_IdColumn}, false);
            this.relationplanAttributes_planBrochure.Nested = true;
            this.Relations.Add(this.relationplanAttributes_planBrochure);
            this.relationplans_costShareVariancesList = new global::System.Data.DataRelation("plans_costShareVariancesList", new global::System.Data.DataColumn[] {
                        this.tableplans.plans_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecostShareVariancesList.plans_IdColumn}, false);
            this.relationplans_costShareVariancesList.Nested = true;
            this.Relations.Add(this.relationplans_costShareVariancesList);
            this.relationcostShareVariancesList_costShareVariance = new global::System.Data.DataRelation("costShareVariancesList_costShareVariance", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariancesList.costShareVariancesList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariancesList_IdColumn}, false);
            this.relationcostShareVariancesList_costShareVariance.Nested = true;
            this.Relations.Add(this.relationcostShareVariancesList_costShareVariance);
            this.relationcostShareVariance_planId = new global::System.Data.DataRelation("costShareVariance_planId", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanId.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_planId.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_planId);
            this.relationcostShareVariance_csrVariationType = new global::System.Data.DataRelation("costShareVariance_csrVariationType", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecsrVariationType.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_csrVariationType.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_csrVariationType);
            this.relationcostShareVariance_issuerActuarialValue = new global::System.Data.DataRelation("costShareVariance_issuerActuarialValue", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableissuerActuarialValue.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_issuerActuarialValue.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_issuerActuarialValue);
            this.relationcostShareVariance_avCalculatorOutputNumber = new global::System.Data.DataRelation("costShareVariance_avCalculatorOutputNumber", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableavCalculatorOutputNumber.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_avCalculatorOutputNumber.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_avCalculatorOutputNumber);
            this.relationcostShareVariance_medicalAndDrugDeductiblesIntegrated = new global::System.Data.DataRelation("costShareVariance_medicalAndDrugDeductiblesIntegrated", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemedicalAndDrugDeductiblesIntegrated.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_medicalAndDrugDeductiblesIntegrated.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_medicalAndDrugDeductiblesIntegrated);
            this.relationcostShareVariance_medicalAndDrugMaxOutOfPocketIntegrated = new global::System.Data.DataRelation("costShareVariance_medicalAndDrugMaxOutOfPocketIntegrated", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemedicalAndDrugMaxOutOfPocketIntegrated.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_medicalAndDrugMaxOutOfPocketIntegrated.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_medicalAndDrugMaxOutOfPocketIntegrated);
            this.relationcostShareVariance_multipleProviderTiers = new global::System.Data.DataRelation("costShareVariance_multipleProviderTiers", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemultipleProviderTiers.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_multipleProviderTiers.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_multipleProviderTiers);
            this.relationcostShareVariance_firstTierUtilization = new global::System.Data.DataRelation("costShareVariance_firstTierUtilization", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablefirstTierUtilization.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_firstTierUtilization.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_firstTierUtilization);
            this.relationcostShareVariance_secondTierUtilization = new global::System.Data.DataRelation("costShareVariance_secondTierUtilization", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablesecondTierUtilization.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_secondTierUtilization.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_secondTierUtilization);
            this.relationcostShareVariance_sbc = new global::System.Data.DataRelation("costShareVariance_sbc", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablesbc.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_sbc.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_sbc);
            this.relationsbc_havingBabyDeductible = new global::System.Data.DataRelation("sbc_havingBabyDeductible", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingBabyDeductible.sbc_IdColumn}, false);
            this.relationsbc_havingBabyDeductible.Nested = true;
            this.Relations.Add(this.relationsbc_havingBabyDeductible);
            this.relationsbc_havingBabyCoPayment = new global::System.Data.DataRelation("sbc_havingBabyCoPayment", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingBabyCoPayment.sbc_IdColumn}, false);
            this.relationsbc_havingBabyCoPayment.Nested = true;
            this.Relations.Add(this.relationsbc_havingBabyCoPayment);
            this.relationsbc_havingBabyCoInsurance = new global::System.Data.DataRelation("sbc_havingBabyCoInsurance", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingBabyCoInsurance.sbc_IdColumn}, false);
            this.relationsbc_havingBabyCoInsurance.Nested = true;
            this.Relations.Add(this.relationsbc_havingBabyCoInsurance);
            this.relationsbc_havingBabyLimit = new global::System.Data.DataRelation("sbc_havingBabyLimit", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingBabyLimit.sbc_IdColumn}, false);
            this.relationsbc_havingBabyLimit.Nested = true;
            this.Relations.Add(this.relationsbc_havingBabyLimit);
            this.relationsbc_havingDiabetesDeductible = new global::System.Data.DataRelation("sbc_havingDiabetesDeductible", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingDiabetesDeductible.sbc_IdColumn}, false);
            this.relationsbc_havingDiabetesDeductible.Nested = true;
            this.Relations.Add(this.relationsbc_havingDiabetesDeductible);
            this.relationsbc_havingDiabetesCopay = new global::System.Data.DataRelation("sbc_havingDiabetesCopay", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingDiabetesCopay.sbc_IdColumn}, false);
            this.relationsbc_havingDiabetesCopay.Nested = true;
            this.Relations.Add(this.relationsbc_havingDiabetesCopay);
            this.relationsbc_havingDiabetesCoInsurance = new global::System.Data.DataRelation("sbc_havingDiabetesCoInsurance", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingDiabetesCoInsurance.sbc_IdColumn}, false);
            this.relationsbc_havingDiabetesCoInsurance.Nested = true;
            this.Relations.Add(this.relationsbc_havingDiabetesCoInsurance);
            this.relationsbc_havingDiabetesLimit = new global::System.Data.DataRelation("sbc_havingDiabetesLimit", new global::System.Data.DataColumn[] {
                        this.tablesbc.sbc_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablehavingDiabetesLimit.sbc_IdColumn}, false);
            this.relationsbc_havingDiabetesLimit.Nested = true;
            this.Relations.Add(this.relationsbc_havingDiabetesLimit);
            this.relationcostShareVariance_moopList = new global::System.Data.DataRelation("costShareVariance_moopList", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemoopList.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_moopList.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_moopList);
            this.relationmoopList_moop = new global::System.Data.DataRelation("moopList_moop", new global::System.Data.DataColumn[] {
                        this.tablemoopList.moopList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablemoop.moopList_IdColumn}, false);
            this.relationmoopList_moop.Nested = true;
            this.Relations.Add(this.relationmoopList_moop);
            this.relationmoop_name = new global::System.Data.DataRelation("moop_name", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablename.moop_IdColumn}, false);
            this.relationmoop_name.Nested = true;
            this.Relations.Add(this.relationmoop_name);
            this.relationmoop_inNetworkTier1IndividualAmount = new global::System.Data.DataRelation("moop_inNetworkTier1IndividualAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTier1IndividualAmount.moop_IdColumn}, false);
            this.relationmoop_inNetworkTier1IndividualAmount.Nested = true;
            this.Relations.Add(this.relationmoop_inNetworkTier1IndividualAmount);
            this.relationmoop_inNetworkTier1FamilyAmount = new global::System.Data.DataRelation("moop_inNetworkTier1FamilyAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTier1FamilyAmount.moop_IdColumn}, false);
            this.relationmoop_inNetworkTier1FamilyAmount.Nested = true;
            this.Relations.Add(this.relationmoop_inNetworkTier1FamilyAmount);
            this.relationmoop_inNetworkTier2IndividualAmount = new global::System.Data.DataRelation("moop_inNetworkTier2IndividualAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTier2IndividualAmount.moop_IdColumn}, false);
            this.relationmoop_inNetworkTier2IndividualAmount.Nested = true;
            this.Relations.Add(this.relationmoop_inNetworkTier2IndividualAmount);
            this.relationmoop_inNetworkTier2FamilyAmount = new global::System.Data.DataRelation("moop_inNetworkTier2FamilyAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTier2FamilyAmount.moop_IdColumn}, false);
            this.relationmoop_inNetworkTier2FamilyAmount.Nested = true;
            this.Relations.Add(this.relationmoop_inNetworkTier2FamilyAmount);
            this.relationmoop_outOfNetworkIndividualAmount = new global::System.Data.DataRelation("moop_outOfNetworkIndividualAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfNetworkIndividualAmount.moop_IdColumn}, false);
            this.relationmoop_outOfNetworkIndividualAmount.Nested = true;
            this.Relations.Add(this.relationmoop_outOfNetworkIndividualAmount);
            this.relationmoop_outOfNetworkFamilyAmount = new global::System.Data.DataRelation("moop_outOfNetworkFamilyAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfNetworkFamilyAmount.moop_IdColumn}, false);
            this.relationmoop_outOfNetworkFamilyAmount.Nested = true;
            this.Relations.Add(this.relationmoop_outOfNetworkFamilyAmount);
            this.relationmoop_combinedInOutNetworkIndividualAmount = new global::System.Data.DataRelation("moop_combinedInOutNetworkIndividualAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecombinedInOutNetworkIndividualAmount.moop_IdColumn}, false);
            this.relationmoop_combinedInOutNetworkIndividualAmount.Nested = true;
            this.Relations.Add(this.relationmoop_combinedInOutNetworkIndividualAmount);
            this.relationmoop_combinedInOutNetworkFamilyAmount = new global::System.Data.DataRelation("moop_combinedInOutNetworkFamilyAmount", new global::System.Data.DataColumn[] {
                        this.tablemoop.moop_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecombinedInOutNetworkFamilyAmount.moop_IdColumn}, false);
            this.relationmoop_combinedInOutNetworkFamilyAmount.Nested = true;
            this.Relations.Add(this.relationmoop_combinedInOutNetworkFamilyAmount);
            this.relationcostShareVariance_planDeductibleList = new global::System.Data.DataRelation("costShareVariance_planDeductibleList", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanDeductibleList.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_planDeductibleList.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_planDeductibleList);
            this.relationplanDeductibleList_planDeductible = new global::System.Data.DataRelation("planDeductibleList_planDeductible", new global::System.Data.DataColumn[] {
                        this.tableplanDeductibleList.planDeductibleList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductibleList_IdColumn}, false);
            this.relationplanDeductibleList_planDeductible.Nested = true;
            this.Relations.Add(this.relationplanDeductibleList_planDeductible);
            this.relationplanDeductible_deductibleType = new global::System.Data.DataRelation("planDeductible_deductibleType", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tabledeductibleType.planDeductible_IdColumn}, false);
            this.relationplanDeductible_deductibleType.Nested = true;
            this.Relations.Add(this.relationplanDeductible_deductibleType);
            this.relationplanDeductible_inNetworkTier1Individual = new global::System.Data.DataRelation("planDeductible_inNetworkTier1Individual", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTier1Individual.planDeductible_IdColumn}, false);
            this.relationplanDeductible_inNetworkTier1Individual.Nested = true;
            this.Relations.Add(this.relationplanDeductible_inNetworkTier1Individual);
            this.relationplanDeductible_inNetworkTier1Family = new global::System.Data.DataRelation("planDeductible_inNetworkTier1Family", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTier1Family.planDeductible_IdColumn}, false);
            this.relationplanDeductible_inNetworkTier1Family.Nested = true;
            this.Relations.Add(this.relationplanDeductible_inNetworkTier1Family);
            this.relationplanDeductible_coinsuranceInNetworkTier1 = new global::System.Data.DataRelation("planDeductible_coinsuranceInNetworkTier1", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecoinsuranceInNetworkTier1.planDeductible_IdColumn}, false);
            this.relationplanDeductible_coinsuranceInNetworkTier1.Nested = true;
            this.Relations.Add(this.relationplanDeductible_coinsuranceInNetworkTier1);
            this.relationplanDeductible_inNetworkTierTwoIndividual = new global::System.Data.DataRelation("planDeductible_inNetworkTierTwoIndividual", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTierTwoIndividual.planDeductible_IdColumn}, false);
            this.relationplanDeductible_inNetworkTierTwoIndividual.Nested = true;
            this.Relations.Add(this.relationplanDeductible_inNetworkTierTwoIndividual);
            this.relationplanDeductible_inNetworkTierTwoFamily = new global::System.Data.DataRelation("planDeductible_inNetworkTierTwoFamily", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableinNetworkTierTwoFamily.planDeductible_IdColumn}, false);
            this.relationplanDeductible_inNetworkTierTwoFamily.Nested = true;
            this.Relations.Add(this.relationplanDeductible_inNetworkTierTwoFamily);
            this.relationplanDeductible_coinsuranceInNetworkTier2 = new global::System.Data.DataRelation("planDeductible_coinsuranceInNetworkTier2", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecoinsuranceInNetworkTier2.planDeductible_IdColumn}, false);
            this.relationplanDeductible_coinsuranceInNetworkTier2.Nested = true;
            this.Relations.Add(this.relationplanDeductible_coinsuranceInNetworkTier2);
            this.relationplanDeductible_outOfNetworkIndividual = new global::System.Data.DataRelation("planDeductible_outOfNetworkIndividual", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfNetworkIndividual.planDeductible_IdColumn}, false);
            this.relationplanDeductible_outOfNetworkIndividual.Nested = true;
            this.Relations.Add(this.relationplanDeductible_outOfNetworkIndividual);
            this.relationplanDeductible_outOfNetworkFamily = new global::System.Data.DataRelation("planDeductible_outOfNetworkFamily", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableoutOfNetworkFamily.planDeductible_IdColumn}, false);
            this.relationplanDeductible_outOfNetworkFamily.Nested = true;
            this.Relations.Add(this.relationplanDeductible_outOfNetworkFamily);
            this.relationplanDeductible_combinedInOrOutNetworkIndividual = new global::System.Data.DataRelation("planDeductible_combinedInOrOutNetworkIndividual", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecombinedInOrOutNetworkIndividual.planDeductible_IdColumn}, false);
            this.relationplanDeductible_combinedInOrOutNetworkIndividual.Nested = true;
            this.Relations.Add(this.relationplanDeductible_combinedInOrOutNetworkIndividual);
            this.relationplanDeductible_combinedInOrOutNetworkFamily = new global::System.Data.DataRelation("planDeductible_combinedInOrOutNetworkFamily", new global::System.Data.DataColumn[] {
                        this.tableplanDeductible.planDeductible_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecombinedInOrOutNetworkFamily.planDeductible_IdColumn}, false);
            this.relationplanDeductible_combinedInOrOutNetworkFamily.Nested = true;
            this.Relations.Add(this.relationplanDeductible_combinedInOrOutNetworkFamily);
            this.relationcostShareVariance_serviceVisitList = new global::System.Data.DataRelation("costShareVariance_serviceVisitList", new global::System.Data.DataColumn[] {
                        this.tablecostShareVariance.costShareVariance_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableserviceVisitList.costShareVariance_IdColumn}, false);
            this.relationcostShareVariance_serviceVisitList.Nested = true;
            this.Relations.Add(this.relationcostShareVariance_serviceVisitList);
            this.relationserviceVisitList_serviceVisit = new global::System.Data.DataRelation("serviceVisitList_serviceVisit", new global::System.Data.DataColumn[] {
                        this.tableserviceVisitList.serviceVisitList_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisitList_IdColumn}, false);
            this.relationserviceVisitList_serviceVisit.Nested = true;
            this.Relations.Add(this.relationserviceVisitList_serviceVisit);
            this.relationserviceVisit_visitType = new global::System.Data.DataRelation("serviceVisit_visitType", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablevisitType.serviceVisit_IdColumn}, false);
            this.relationserviceVisit_visitType.Nested = true;
            this.Relations.Add(this.relationserviceVisit_visitType);
            this.relationserviceVisit_copayInNetworkTier1 = new global::System.Data.DataRelation("serviceVisit_copayInNetworkTier1", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecopayInNetworkTier1.serviceVisit_IdColumn}, false);
            this.relationserviceVisit_copayInNetworkTier1.Nested = true;
            this.Relations.Add(this.relationserviceVisit_copayInNetworkTier1);
            this.relationserviceVisit_copayInNetworkTier2 = new global::System.Data.DataRelation("serviceVisit_copayInNetworkTier2", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecopayInNetworkTier2.serviceVisit_IdColumn}, false);
            this.relationserviceVisit_copayInNetworkTier2.Nested = true;
            this.Relations.Add(this.relationserviceVisit_copayInNetworkTier2);
            this.relationserviceVisit_copayOutOfNetwork = new global::System.Data.DataRelation("serviceVisit_copayOutOfNetwork", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecopayOutOfNetwork.serviceVisit_IdColumn}, false);
            this.relationserviceVisit_copayOutOfNetwork.Nested = true;
            this.Relations.Add(this.relationserviceVisit_copayOutOfNetwork);
            this.relationserviceVisit_coInsuranceInNetworkTier1 = new global::System.Data.DataRelation("serviceVisit_coInsuranceInNetworkTier1", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecoInsuranceInNetworkTier1.serviceVisit_IdColumn}, false);
            this.relationserviceVisit_coInsuranceInNetworkTier1.Nested = true;
            this.Relations.Add(this.relationserviceVisit_coInsuranceInNetworkTier1);
            this.relationserviceVisit_coInsuranceInNetworkTier2 = new global::System.Data.DataRelation("serviceVisit_coInsuranceInNetworkTier2", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecoInsuranceInNetworkTier2.serviceVisit_IdColumn}, false);
            this.relationserviceVisit_coInsuranceInNetworkTier2.Nested = true;
            this.Relations.Add(this.relationserviceVisit_coInsuranceInNetworkTier2);
            this.relationserviceVisit_coInsuranceOutOfNetwork = new global::System.Data.DataRelation("serviceVisit_coInsuranceOutOfNetwork", new global::System.Data.DataColumn[] {
                        this.tableserviceVisit.serviceVisit_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecoInsuranceOutOfNetwork.serviceVisit_IdColumn}, false);
            this.relationserviceVisit_coInsuranceOutOfNetwork.Nested = true;
            this.Relations.Add(this.relationserviceVisit_coInsuranceOutOfNetwork);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeplanMarketingName() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemetalLevel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializepackagesList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializepackages() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeheader() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeissuerId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializestatePostalCode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemarketCoverage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedentalPlanOnlyInd() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetin() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebenefitsList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebenefits() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebenefitTypeCode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeisEHB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeisStateMandate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeisBenefitCovered() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeserviceLimit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializequantityLimit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeunitLimit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeminimumStay() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeexclusion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeexplanation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeehbVarianceReason() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializesubjectToDeductibleTier1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializesubjectToDeductibleTier2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeexcludedInNetworkMOOP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeexcludedOutOfNetworkMOOP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeplansList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeplans() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeplanAttributes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializestandardComponentID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehiosProductID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehpid() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializenetworkID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeserviceAreaID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeformularyID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeisNewPlan() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeplanType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeuniquePlanDesign() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeqhpOrNonQhp() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinsurancePlanPregnancyNoticeReqInd() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeisSpecialistReferralRequired() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehealthCareSpecialistReferralType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinsurancePlanBenefitExclusionText() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeindianPlanVariation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehsaEligibility() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeemployerHSAHRAContributionIndicator() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeempContributionAmountForHSAOrHRA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializechildOnlyOffering() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializechildOnlyPlanID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeisWellnessProgramOffered() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeisDiseaseMgmtProgramsOffered() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeehbApportionmentForPediatricDental() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeguaranteedVsEstimatedRate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemaximumCoinsuranceForSpecialtyDrugs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemaxNumDaysForChargingInpatientCopay() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebeginPrimaryCareCostSharingAfterSetNumberVisits() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeplanEffectiveDate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeplanExpirationDate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeoutOfCountryCoverage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeoutOfCountryCoverageDescription() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeoutOfServiceAreaCoverage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeoutOfServiceAreaCoverageDescription() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializenationalNetwork() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializesummaryBenefitAndCoverageURL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeenrollmentPaymentURL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeplanBrochure() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecostShareVariancesList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecostShareVariance() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeplanId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecsrVariationType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeissuerActuarialValue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeavCalculatorOutputNumber() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemedicalAndDrugDeductiblesIntegrated() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemedicalAndDrugMaxOutOfPocketIntegrated() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemultipleProviderTiers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefirstTierUtilization() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializesecondTierUtilization() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializesbc() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehavingBabyDeductible() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehavingBabyCoPayment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehavingBabyCoInsurance() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehavingBabyLimit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehavingDiabetesDeductible() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehavingDiabetesCopay() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehavingDiabetesCoInsurance() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializehavingDiabetesLimit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemoopList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemoop() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializename() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinNetworkTier1IndividualAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinNetworkTier1FamilyAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinNetworkTier2IndividualAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinNetworkTier2FamilyAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeoutOfNetworkIndividualAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeoutOfNetworkFamilyAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecombinedInOutNetworkIndividualAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecombinedInOutNetworkFamilyAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeplanDeductibleList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeplanDeductible() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedeductibleType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinNetworkTier1Individual() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinNetworkTier1Family() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecoinsuranceInNetworkTier1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinNetworkTierTwoIndividual() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeinNetworkTierTwoFamily() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecoinsuranceInNetworkTier2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeoutOfNetworkIndividual() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeoutOfNetworkFamily() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecombinedInOrOutNetworkIndividual() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecombinedInOrOutNetworkFamily() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeserviceVisitList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeserviceVisit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevisitType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecopayInNetworkTier1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecopayInNetworkTier2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecopayOutOfNetwork() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecoInsuranceInNetworkTier1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecoInsuranceInNetworkTier2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecoInsuranceOutOfNetwork() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            planBenefitTemplateVO ds = new planBenefitTemplateVO();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void planMarketingNameRowChangeEventHandler(object sender, planMarketingNameRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void metalLevelRowChangeEventHandler(object sender, metalLevelRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void packagesListRowChangeEventHandler(object sender, packagesListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void packagesRowChangeEventHandler(object sender, packagesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void headerRowChangeEventHandler(object sender, headerRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void issuerIdRowChangeEventHandler(object sender, issuerIdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void statePostalCodeRowChangeEventHandler(object sender, statePostalCodeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void marketCoverageRowChangeEventHandler(object sender, marketCoverageRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dentalPlanOnlyIndRowChangeEventHandler(object sender, dentalPlanOnlyIndRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tinRowChangeEventHandler(object sender, tinRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void benefitsListRowChangeEventHandler(object sender, benefitsListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void benefitsRowChangeEventHandler(object sender, benefitsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void benefitTypeCodeRowChangeEventHandler(object sender, benefitTypeCodeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void isEHBRowChangeEventHandler(object sender, isEHBRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void isStateMandateRowChangeEventHandler(object sender, isStateMandateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void isBenefitCoveredRowChangeEventHandler(object sender, isBenefitCoveredRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void serviceLimitRowChangeEventHandler(object sender, serviceLimitRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void quantityLimitRowChangeEventHandler(object sender, quantityLimitRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void unitLimitRowChangeEventHandler(object sender, unitLimitRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void minimumStayRowChangeEventHandler(object sender, minimumStayRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void exclusionRowChangeEventHandler(object sender, exclusionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void explanationRowChangeEventHandler(object sender, explanationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ehbVarianceReasonRowChangeEventHandler(object sender, ehbVarianceReasonRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void subjectToDeductibleTier1RowChangeEventHandler(object sender, subjectToDeductibleTier1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void subjectToDeductibleTier2RowChangeEventHandler(object sender, subjectToDeductibleTier2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void excludedInNetworkMOOPRowChangeEventHandler(object sender, excludedInNetworkMOOPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void excludedOutOfNetworkMOOPRowChangeEventHandler(object sender, excludedOutOfNetworkMOOPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void plansListRowChangeEventHandler(object sender, plansListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void plansRowChangeEventHandler(object sender, plansRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void planAttributesRowChangeEventHandler(object sender, planAttributesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void standardComponentIDRowChangeEventHandler(object sender, standardComponentIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void hiosProductIDRowChangeEventHandler(object sender, hiosProductIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void hpidRowChangeEventHandler(object sender, hpidRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void networkIDRowChangeEventHandler(object sender, networkIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void serviceAreaIDRowChangeEventHandler(object sender, serviceAreaIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void formularyIDRowChangeEventHandler(object sender, formularyIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void isNewPlanRowChangeEventHandler(object sender, isNewPlanRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void planTypeRowChangeEventHandler(object sender, planTypeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void uniquePlanDesignRowChangeEventHandler(object sender, uniquePlanDesignRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void qhpOrNonQhpRowChangeEventHandler(object sender, qhpOrNonQhpRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void insurancePlanPregnancyNoticeReqIndRowChangeEventHandler(object sender, insurancePlanPregnancyNoticeReqIndRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void isSpecialistReferralRequiredRowChangeEventHandler(object sender, isSpecialistReferralRequiredRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void healthCareSpecialistReferralTypeRowChangeEventHandler(object sender, healthCareSpecialistReferralTypeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void insurancePlanBenefitExclusionTextRowChangeEventHandler(object sender, insurancePlanBenefitExclusionTextRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void indianPlanVariationRowChangeEventHandler(object sender, indianPlanVariationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void hsaEligibilityRowChangeEventHandler(object sender, hsaEligibilityRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void employerHSAHRAContributionIndicatorRowChangeEventHandler(object sender, employerHSAHRAContributionIndicatorRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void empContributionAmountForHSAOrHRARowChangeEventHandler(object sender, empContributionAmountForHSAOrHRARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void childOnlyOfferingRowChangeEventHandler(object sender, childOnlyOfferingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void childOnlyPlanIDRowChangeEventHandler(object sender, childOnlyPlanIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void isWellnessProgramOfferedRowChangeEventHandler(object sender, isWellnessProgramOfferedRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void isDiseaseMgmtProgramsOfferedRowChangeEventHandler(object sender, isDiseaseMgmtProgramsOfferedRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ehbApportionmentForPediatricDentalRowChangeEventHandler(object sender, ehbApportionmentForPediatricDentalRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void guaranteedVsEstimatedRateRowChangeEventHandler(object sender, guaranteedVsEstimatedRateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void maximumCoinsuranceForSpecialtyDrugsRowChangeEventHandler(object sender, maximumCoinsuranceForSpecialtyDrugsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void maxNumDaysForChargingInpatientCopayRowChangeEventHandler(object sender, maxNumDaysForChargingInpatientCopayRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void beginPrimaryCareCostSharingAfterSetNumberVisitsRowChangeEventHandler(object sender, beginPrimaryCareCostSharingAfterSetNumberVisitsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChangeEventHandler(object sender, beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void planEffectiveDateRowChangeEventHandler(object sender, planEffectiveDateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void planExpirationDateRowChangeEventHandler(object sender, planExpirationDateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void outOfCountryCoverageRowChangeEventHandler(object sender, outOfCountryCoverageRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void outOfCountryCoverageDescriptionRowChangeEventHandler(object sender, outOfCountryCoverageDescriptionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void outOfServiceAreaCoverageRowChangeEventHandler(object sender, outOfServiceAreaCoverageRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void outOfServiceAreaCoverageDescriptionRowChangeEventHandler(object sender, outOfServiceAreaCoverageDescriptionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void nationalNetworkRowChangeEventHandler(object sender, nationalNetworkRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void summaryBenefitAndCoverageURLRowChangeEventHandler(object sender, summaryBenefitAndCoverageURLRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void enrollmentPaymentURLRowChangeEventHandler(object sender, enrollmentPaymentURLRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void planBrochureRowChangeEventHandler(object sender, planBrochureRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void costShareVariancesListRowChangeEventHandler(object sender, costShareVariancesListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void costShareVarianceRowChangeEventHandler(object sender, costShareVarianceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void planIdRowChangeEventHandler(object sender, planIdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void csrVariationTypeRowChangeEventHandler(object sender, csrVariationTypeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void issuerActuarialValueRowChangeEventHandler(object sender, issuerActuarialValueRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void avCalculatorOutputNumberRowChangeEventHandler(object sender, avCalculatorOutputNumberRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void medicalAndDrugDeductiblesIntegratedRowChangeEventHandler(object sender, medicalAndDrugDeductiblesIntegratedRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void medicalAndDrugMaxOutOfPocketIntegratedRowChangeEventHandler(object sender, medicalAndDrugMaxOutOfPocketIntegratedRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void multipleProviderTiersRowChangeEventHandler(object sender, multipleProviderTiersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void firstTierUtilizationRowChangeEventHandler(object sender, firstTierUtilizationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void secondTierUtilizationRowChangeEventHandler(object sender, secondTierUtilizationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void sbcRowChangeEventHandler(object sender, sbcRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void havingBabyDeductibleRowChangeEventHandler(object sender, havingBabyDeductibleRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void havingBabyCoPaymentRowChangeEventHandler(object sender, havingBabyCoPaymentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void havingBabyCoInsuranceRowChangeEventHandler(object sender, havingBabyCoInsuranceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void havingBabyLimitRowChangeEventHandler(object sender, havingBabyLimitRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void havingDiabetesDeductibleRowChangeEventHandler(object sender, havingDiabetesDeductibleRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void havingDiabetesCopayRowChangeEventHandler(object sender, havingDiabetesCopayRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void havingDiabetesCoInsuranceRowChangeEventHandler(object sender, havingDiabetesCoInsuranceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void havingDiabetesLimitRowChangeEventHandler(object sender, havingDiabetesLimitRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void moopListRowChangeEventHandler(object sender, moopListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void moopRowChangeEventHandler(object sender, moopRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void nameRowChangeEventHandler(object sender, nameRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void inNetworkTier1IndividualAmountRowChangeEventHandler(object sender, inNetworkTier1IndividualAmountRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void inNetworkTier1FamilyAmountRowChangeEventHandler(object sender, inNetworkTier1FamilyAmountRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void inNetworkTier2IndividualAmountRowChangeEventHandler(object sender, inNetworkTier2IndividualAmountRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void inNetworkTier2FamilyAmountRowChangeEventHandler(object sender, inNetworkTier2FamilyAmountRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void outOfNetworkIndividualAmountRowChangeEventHandler(object sender, outOfNetworkIndividualAmountRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void outOfNetworkFamilyAmountRowChangeEventHandler(object sender, outOfNetworkFamilyAmountRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void combinedInOutNetworkIndividualAmountRowChangeEventHandler(object sender, combinedInOutNetworkIndividualAmountRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void combinedInOutNetworkFamilyAmountRowChangeEventHandler(object sender, combinedInOutNetworkFamilyAmountRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void planDeductibleListRowChangeEventHandler(object sender, planDeductibleListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void planDeductibleRowChangeEventHandler(object sender, planDeductibleRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void deductibleTypeRowChangeEventHandler(object sender, deductibleTypeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void inNetworkTier1IndividualRowChangeEventHandler(object sender, inNetworkTier1IndividualRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void inNetworkTier1FamilyRowChangeEventHandler(object sender, inNetworkTier1FamilyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void coinsuranceInNetworkTier1RowChangeEventHandler(object sender, coinsuranceInNetworkTier1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void inNetworkTierTwoIndividualRowChangeEventHandler(object sender, inNetworkTierTwoIndividualRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void inNetworkTierTwoFamilyRowChangeEventHandler(object sender, inNetworkTierTwoFamilyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void coinsuranceInNetworkTier2RowChangeEventHandler(object sender, coinsuranceInNetworkTier2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void outOfNetworkIndividualRowChangeEventHandler(object sender, outOfNetworkIndividualRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void outOfNetworkFamilyRowChangeEventHandler(object sender, outOfNetworkFamilyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void combinedInOrOutNetworkIndividualRowChangeEventHandler(object sender, combinedInOrOutNetworkIndividualRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void combinedInOrOutNetworkFamilyRowChangeEventHandler(object sender, combinedInOrOutNetworkFamilyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void serviceVisitListRowChangeEventHandler(object sender, serviceVisitListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void serviceVisitRowChangeEventHandler(object sender, serviceVisitRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void visitTypeRowChangeEventHandler(object sender, visitTypeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void copayInNetworkTier1RowChangeEventHandler(object sender, copayInNetworkTier1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void copayInNetworkTier2RowChangeEventHandler(object sender, copayInNetworkTier2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void copayOutOfNetworkRowChangeEventHandler(object sender, copayOutOfNetworkRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void coInsuranceInNetworkTier1RowChangeEventHandler(object sender, coInsuranceInNetworkTier1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void coInsuranceInNetworkTier2RowChangeEventHandler(object sender, coInsuranceInNetworkTier2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void coInsuranceOutOfNetworkRowChangeEventHandler(object sender, coInsuranceOutOfNetworkRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class planMarketingNameDataTable : global::System.Data.TypedTableBase<planMarketingNameRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planMarketingNameDataTable() {
                this.TableName = "planMarketingName";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planMarketingNameDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected planMarketingNameDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planMarketingNameRow this[int index] {
                get {
                    return ((planMarketingNameRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planMarketingNameRowChangeEventHandler planMarketingNameRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planMarketingNameRowChangeEventHandler planMarketingNameRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planMarketingNameRowChangeEventHandler planMarketingNameRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planMarketingNameRowChangeEventHandler planMarketingNameRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddplanMarketingNameRow(planMarketingNameRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planMarketingNameRow AddplanMarketingNameRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_planMarketingName, costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_planMarketingName) {
                planMarketingNameRow rowplanMarketingNameRow = ((planMarketingNameRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null,
                        null};
                if ((parentplanAttributesRowByplanAttributes_planMarketingName != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_planMarketingName[0];
                }
                if ((parentcostShareVarianceRowBycostShareVariance_planMarketingName != null)) {
                    columnValuesArray[3] = parentcostShareVarianceRowBycostShareVariance_planMarketingName[0];
                }
                rowplanMarketingNameRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowplanMarketingNameRow);
                return rowplanMarketingNameRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                planMarketingNameDataTable cln = ((planMarketingNameDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new planMarketingNameDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planMarketingNameRow NewplanMarketingNameRow() {
                return ((planMarketingNameRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new planMarketingNameRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(planMarketingNameRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.planMarketingNameRowChanged != null)) {
                    this.planMarketingNameRowChanged(this, new planMarketingNameRowChangeEvent(((planMarketingNameRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.planMarketingNameRowChanging != null)) {
                    this.planMarketingNameRowChanging(this, new planMarketingNameRowChangeEvent(((planMarketingNameRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.planMarketingNameRowDeleted != null)) {
                    this.planMarketingNameRowDeleted(this, new planMarketingNameRowChangeEvent(((planMarketingNameRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.planMarketingNameRowDeleting != null)) {
                    this.planMarketingNameRowDeleting(this, new planMarketingNameRowChangeEvent(((planMarketingNameRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveplanMarketingNameRow(planMarketingNameRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "planMarketingNameDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class metalLevelDataTable : global::System.Data.TypedTableBase<metalLevelRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public metalLevelDataTable() {
                this.TableName = "metalLevel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal metalLevelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected metalLevelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public metalLevelRow this[int index] {
                get {
                    return ((metalLevelRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event metalLevelRowChangeEventHandler metalLevelRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event metalLevelRowChangeEventHandler metalLevelRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event metalLevelRowChangeEventHandler metalLevelRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event metalLevelRowChangeEventHandler metalLevelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmetalLevelRow(metalLevelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public metalLevelRow AddmetalLevelRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_metalLevel, costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_metalLevel) {
                metalLevelRow rowmetalLevelRow = ((metalLevelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null,
                        null};
                if ((parentplanAttributesRowByplanAttributes_metalLevel != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_metalLevel[0];
                }
                if ((parentcostShareVarianceRowBycostShareVariance_metalLevel != null)) {
                    columnValuesArray[3] = parentcostShareVarianceRowBycostShareVariance_metalLevel[0];
                }
                rowmetalLevelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmetalLevelRow);
                return rowmetalLevelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                metalLevelDataTable cln = ((metalLevelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new metalLevelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public metalLevelRow NewmetalLevelRow() {
                return ((metalLevelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new metalLevelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(metalLevelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.metalLevelRowChanged != null)) {
                    this.metalLevelRowChanged(this, new metalLevelRowChangeEvent(((metalLevelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.metalLevelRowChanging != null)) {
                    this.metalLevelRowChanging(this, new metalLevelRowChangeEvent(((metalLevelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.metalLevelRowDeleted != null)) {
                    this.metalLevelRowDeleted(this, new metalLevelRowChangeEvent(((metalLevelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.metalLevelRowDeleting != null)) {
                    this.metalLevelRowDeleting(this, new metalLevelRowChangeEvent(((metalLevelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemetalLevelRow(metalLevelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "metalLevelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class packagesListDataTable : global::System.Data.TypedTableBase<packagesListRow> {
            
            private global::System.Data.DataColumn columnpackagesList_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesListDataTable() {
                this.TableName = "packagesList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal packagesListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected packagesListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn packagesList_IdColumn {
                get {
                    return this.columnpackagesList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesListRow this[int index] {
                get {
                    return ((packagesListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event packagesListRowChangeEventHandler packagesListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event packagesListRowChangeEventHandler packagesListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event packagesListRowChangeEventHandler packagesListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event packagesListRowChangeEventHandler packagesListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddpackagesListRow(packagesListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesListRow AddpackagesListRow() {
                packagesListRow rowpackagesListRow = ((packagesListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                rowpackagesListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpackagesListRow);
                return rowpackagesListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                packagesListDataTable cln = ((packagesListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new packagesListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnpackagesList_Id = base.Columns["packagesList_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnpackagesList_Id = new global::System.Data.DataColumn("packagesList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnpackagesList_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnpackagesList_Id}, true));
                this.columnpackagesList_Id.AutoIncrement = true;
                this.columnpackagesList_Id.AllowDBNull = false;
                this.columnpackagesList_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesListRow NewpackagesListRow() {
                return ((packagesListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new packagesListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(packagesListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.packagesListRowChanged != null)) {
                    this.packagesListRowChanged(this, new packagesListRowChangeEvent(((packagesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.packagesListRowChanging != null)) {
                    this.packagesListRowChanging(this, new packagesListRowChangeEvent(((packagesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.packagesListRowDeleted != null)) {
                    this.packagesListRowDeleted(this, new packagesListRowChangeEvent(((packagesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.packagesListRowDeleting != null)) {
                    this.packagesListRowDeleting(this, new packagesListRowChangeEvent(((packagesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovepackagesListRow(packagesListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "packagesListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class packagesDataTable : global::System.Data.TypedTableBase<packagesRow> {
            
            private global::System.Data.DataColumn columnpackages_Id;
            
            private global::System.Data.DataColumn columnpackagesList_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesDataTable() {
                this.TableName = "packages";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal packagesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected packagesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn packages_IdColumn {
                get {
                    return this.columnpackages_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn packagesList_IdColumn {
                get {
                    return this.columnpackagesList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesRow this[int index] {
                get {
                    return ((packagesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event packagesRowChangeEventHandler packagesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event packagesRowChangeEventHandler packagesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event packagesRowChangeEventHandler packagesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event packagesRowChangeEventHandler packagesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddpackagesRow(packagesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesRow AddpackagesRow(packagesListRow parentpackagesListRowBypackagesList_packages) {
                packagesRow rowpackagesRow = ((packagesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentpackagesListRowBypackagesList_packages != null)) {
                    columnValuesArray[1] = parentpackagesListRowBypackagesList_packages[0];
                }
                rowpackagesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpackagesRow);
                return rowpackagesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                packagesDataTable cln = ((packagesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new packagesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnpackages_Id = base.Columns["packages_Id"];
                this.columnpackagesList_Id = base.Columns["packagesList_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnpackages_Id = new global::System.Data.DataColumn("packages_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnpackages_Id);
                this.columnpackagesList_Id = new global::System.Data.DataColumn("packagesList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnpackagesList_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnpackages_Id}, true));
                this.columnpackages_Id.AutoIncrement = true;
                this.columnpackages_Id.AllowDBNull = false;
                this.columnpackages_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesRow NewpackagesRow() {
                return ((packagesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new packagesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(packagesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.packagesRowChanged != null)) {
                    this.packagesRowChanged(this, new packagesRowChangeEvent(((packagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.packagesRowChanging != null)) {
                    this.packagesRowChanging(this, new packagesRowChangeEvent(((packagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.packagesRowDeleted != null)) {
                    this.packagesRowDeleted(this, new packagesRowChangeEvent(((packagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.packagesRowDeleting != null)) {
                    this.packagesRowDeleting(this, new packagesRowChangeEvent(((packagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovepackagesRow(packagesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "packagesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class headerDataTable : global::System.Data.TypedTableBase<headerRow> {
            
            private global::System.Data.DataColumn columntemplateVersion;
            
            private global::System.Data.DataColumn columnheader_Id;
            
            private global::System.Data.DataColumn columnpackages_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public headerDataTable() {
                this.TableName = "header";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal headerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected headerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn templateVersionColumn {
                get {
                    return this.columntemplateVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn header_IdColumn {
                get {
                    return this.columnheader_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn packages_IdColumn {
                get {
                    return this.columnpackages_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public headerRow this[int index] {
                get {
                    return ((headerRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event headerRowChangeEventHandler headerRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event headerRowChangeEventHandler headerRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event headerRowChangeEventHandler headerRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event headerRowChangeEventHandler headerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddheaderRow(headerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public headerRow AddheaderRow(string templateVersion, packagesRow parentpackagesRowBypackages_header) {
                headerRow rowheaderRow = ((headerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        templateVersion,
                        null,
                        null};
                if ((parentpackagesRowBypackages_header != null)) {
                    columnValuesArray[2] = parentpackagesRowBypackages_header[0];
                }
                rowheaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowheaderRow);
                return rowheaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                headerDataTable cln = ((headerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new headerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columntemplateVersion = base.Columns["templateVersion"];
                this.columnheader_Id = base.Columns["header_Id"];
                this.columnpackages_Id = base.Columns["packages_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columntemplateVersion = new global::System.Data.DataColumn("templateVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntemplateVersion);
                this.columnheader_Id = new global::System.Data.DataColumn("header_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnheader_Id);
                this.columnpackages_Id = new global::System.Data.DataColumn("packages_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnpackages_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnheader_Id}, true));
                this.columnheader_Id.AutoIncrement = true;
                this.columnheader_Id.AllowDBNull = false;
                this.columnheader_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public headerRow NewheaderRow() {
                return ((headerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new headerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(headerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.headerRowChanged != null)) {
                    this.headerRowChanged(this, new headerRowChangeEvent(((headerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.headerRowChanging != null)) {
                    this.headerRowChanging(this, new headerRowChangeEvent(((headerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.headerRowDeleted != null)) {
                    this.headerRowDeleted(this, new headerRowChangeEvent(((headerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.headerRowDeleting != null)) {
                    this.headerRowDeleting(this, new headerRowChangeEvent(((headerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveheaderRow(headerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "headerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class issuerIdDataTable : global::System.Data.TypedTableBase<issuerIdRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnheader_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerIdDataTable() {
                this.TableName = "issuerId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal issuerIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected issuerIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn header_IdColumn {
                get {
                    return this.columnheader_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerIdRow this[int index] {
                get {
                    return ((issuerIdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event issuerIdRowChangeEventHandler issuerIdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event issuerIdRowChangeEventHandler issuerIdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event issuerIdRowChangeEventHandler issuerIdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event issuerIdRowChangeEventHandler issuerIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddissuerIdRow(issuerIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerIdRow AddissuerIdRow(string cellValue, string cellLocation, headerRow parentheaderRowByheader_issuerId) {
                issuerIdRow rowissuerIdRow = ((issuerIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentheaderRowByheader_issuerId != null)) {
                    columnValuesArray[2] = parentheaderRowByheader_issuerId[1];
                }
                rowissuerIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowissuerIdRow);
                return rowissuerIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                issuerIdDataTable cln = ((issuerIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new issuerIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnheader_Id = base.Columns["header_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnheader_Id = new global::System.Data.DataColumn("header_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnheader_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerIdRow NewissuerIdRow() {
                return ((issuerIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new issuerIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(issuerIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.issuerIdRowChanged != null)) {
                    this.issuerIdRowChanged(this, new issuerIdRowChangeEvent(((issuerIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.issuerIdRowChanging != null)) {
                    this.issuerIdRowChanging(this, new issuerIdRowChangeEvent(((issuerIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.issuerIdRowDeleted != null)) {
                    this.issuerIdRowDeleted(this, new issuerIdRowChangeEvent(((issuerIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.issuerIdRowDeleting != null)) {
                    this.issuerIdRowDeleting(this, new issuerIdRowChangeEvent(((issuerIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveissuerIdRow(issuerIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "issuerIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class statePostalCodeDataTable : global::System.Data.TypedTableBase<statePostalCodeRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnheader_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public statePostalCodeDataTable() {
                this.TableName = "statePostalCode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal statePostalCodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected statePostalCodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn header_IdColumn {
                get {
                    return this.columnheader_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public statePostalCodeRow this[int index] {
                get {
                    return ((statePostalCodeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event statePostalCodeRowChangeEventHandler statePostalCodeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event statePostalCodeRowChangeEventHandler statePostalCodeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event statePostalCodeRowChangeEventHandler statePostalCodeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event statePostalCodeRowChangeEventHandler statePostalCodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddstatePostalCodeRow(statePostalCodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public statePostalCodeRow AddstatePostalCodeRow(string cellValue, string cellLocation, headerRow parentheaderRowByheader_statePostalCode) {
                statePostalCodeRow rowstatePostalCodeRow = ((statePostalCodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentheaderRowByheader_statePostalCode != null)) {
                    columnValuesArray[2] = parentheaderRowByheader_statePostalCode[1];
                }
                rowstatePostalCodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstatePostalCodeRow);
                return rowstatePostalCodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                statePostalCodeDataTable cln = ((statePostalCodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new statePostalCodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnheader_Id = base.Columns["header_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnheader_Id = new global::System.Data.DataColumn("header_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnheader_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public statePostalCodeRow NewstatePostalCodeRow() {
                return ((statePostalCodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new statePostalCodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(statePostalCodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.statePostalCodeRowChanged != null)) {
                    this.statePostalCodeRowChanged(this, new statePostalCodeRowChangeEvent(((statePostalCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.statePostalCodeRowChanging != null)) {
                    this.statePostalCodeRowChanging(this, new statePostalCodeRowChangeEvent(((statePostalCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.statePostalCodeRowDeleted != null)) {
                    this.statePostalCodeRowDeleted(this, new statePostalCodeRowChangeEvent(((statePostalCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.statePostalCodeRowDeleting != null)) {
                    this.statePostalCodeRowDeleting(this, new statePostalCodeRowChangeEvent(((statePostalCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovestatePostalCodeRow(statePostalCodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "statePostalCodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class marketCoverageDataTable : global::System.Data.TypedTableBase<marketCoverageRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnheader_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public marketCoverageDataTable() {
                this.TableName = "marketCoverage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal marketCoverageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected marketCoverageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn header_IdColumn {
                get {
                    return this.columnheader_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public marketCoverageRow this[int index] {
                get {
                    return ((marketCoverageRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event marketCoverageRowChangeEventHandler marketCoverageRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event marketCoverageRowChangeEventHandler marketCoverageRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event marketCoverageRowChangeEventHandler marketCoverageRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event marketCoverageRowChangeEventHandler marketCoverageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmarketCoverageRow(marketCoverageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public marketCoverageRow AddmarketCoverageRow(string cellValue, string cellLocation, headerRow parentheaderRowByheader_marketCoverage) {
                marketCoverageRow rowmarketCoverageRow = ((marketCoverageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentheaderRowByheader_marketCoverage != null)) {
                    columnValuesArray[2] = parentheaderRowByheader_marketCoverage[1];
                }
                rowmarketCoverageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmarketCoverageRow);
                return rowmarketCoverageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                marketCoverageDataTable cln = ((marketCoverageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new marketCoverageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnheader_Id = base.Columns["header_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnheader_Id = new global::System.Data.DataColumn("header_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnheader_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public marketCoverageRow NewmarketCoverageRow() {
                return ((marketCoverageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new marketCoverageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(marketCoverageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.marketCoverageRowChanged != null)) {
                    this.marketCoverageRowChanged(this, new marketCoverageRowChangeEvent(((marketCoverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.marketCoverageRowChanging != null)) {
                    this.marketCoverageRowChanging(this, new marketCoverageRowChangeEvent(((marketCoverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.marketCoverageRowDeleted != null)) {
                    this.marketCoverageRowDeleted(this, new marketCoverageRowChangeEvent(((marketCoverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.marketCoverageRowDeleting != null)) {
                    this.marketCoverageRowDeleting(this, new marketCoverageRowChangeEvent(((marketCoverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemarketCoverageRow(marketCoverageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "marketCoverageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dentalPlanOnlyIndDataTable : global::System.Data.TypedTableBase<dentalPlanOnlyIndRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnheader_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dentalPlanOnlyIndDataTable() {
                this.TableName = "dentalPlanOnlyInd";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dentalPlanOnlyIndDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dentalPlanOnlyIndDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn header_IdColumn {
                get {
                    return this.columnheader_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dentalPlanOnlyIndRow this[int index] {
                get {
                    return ((dentalPlanOnlyIndRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dentalPlanOnlyIndRowChangeEventHandler dentalPlanOnlyIndRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dentalPlanOnlyIndRowChangeEventHandler dentalPlanOnlyIndRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dentalPlanOnlyIndRowChangeEventHandler dentalPlanOnlyIndRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dentalPlanOnlyIndRowChangeEventHandler dentalPlanOnlyIndRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddentalPlanOnlyIndRow(dentalPlanOnlyIndRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dentalPlanOnlyIndRow AdddentalPlanOnlyIndRow(string cellValue, string cellLocation, headerRow parentheaderRowByheader_dentalPlanOnlyInd) {
                dentalPlanOnlyIndRow rowdentalPlanOnlyIndRow = ((dentalPlanOnlyIndRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentheaderRowByheader_dentalPlanOnlyInd != null)) {
                    columnValuesArray[2] = parentheaderRowByheader_dentalPlanOnlyInd[1];
                }
                rowdentalPlanOnlyIndRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdentalPlanOnlyIndRow);
                return rowdentalPlanOnlyIndRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dentalPlanOnlyIndDataTable cln = ((dentalPlanOnlyIndDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dentalPlanOnlyIndDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnheader_Id = base.Columns["header_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnheader_Id = new global::System.Data.DataColumn("header_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnheader_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dentalPlanOnlyIndRow NewdentalPlanOnlyIndRow() {
                return ((dentalPlanOnlyIndRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dentalPlanOnlyIndRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dentalPlanOnlyIndRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dentalPlanOnlyIndRowChanged != null)) {
                    this.dentalPlanOnlyIndRowChanged(this, new dentalPlanOnlyIndRowChangeEvent(((dentalPlanOnlyIndRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dentalPlanOnlyIndRowChanging != null)) {
                    this.dentalPlanOnlyIndRowChanging(this, new dentalPlanOnlyIndRowChangeEvent(((dentalPlanOnlyIndRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dentalPlanOnlyIndRowDeleted != null)) {
                    this.dentalPlanOnlyIndRowDeleted(this, new dentalPlanOnlyIndRowChangeEvent(((dentalPlanOnlyIndRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dentalPlanOnlyIndRowDeleting != null)) {
                    this.dentalPlanOnlyIndRowDeleting(this, new dentalPlanOnlyIndRowChangeEvent(((dentalPlanOnlyIndRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedentalPlanOnlyIndRow(dentalPlanOnlyIndRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dentalPlanOnlyIndDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tinDataTable : global::System.Data.TypedTableBase<tinRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnheader_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tinDataTable() {
                this.TableName = "tin";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tinDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tinDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn header_IdColumn {
                get {
                    return this.columnheader_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tinRow this[int index] {
                get {
                    return ((tinRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tinRowChangeEventHandler tinRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tinRowChangeEventHandler tinRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tinRowChangeEventHandler tinRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tinRowChangeEventHandler tinRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtinRow(tinRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tinRow AddtinRow(string cellValue, string cellLocation, headerRow parentheaderRowByheader_tin) {
                tinRow rowtinRow = ((tinRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentheaderRowByheader_tin != null)) {
                    columnValuesArray[2] = parentheaderRowByheader_tin[1];
                }
                rowtinRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtinRow);
                return rowtinRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tinDataTable cln = ((tinDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tinDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnheader_Id = base.Columns["header_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnheader_Id = new global::System.Data.DataColumn("header_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnheader_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tinRow NewtinRow() {
                return ((tinRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tinRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tinRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tinRowChanged != null)) {
                    this.tinRowChanged(this, new tinRowChangeEvent(((tinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tinRowChanging != null)) {
                    this.tinRowChanging(this, new tinRowChangeEvent(((tinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tinRowDeleted != null)) {
                    this.tinRowDeleted(this, new tinRowChangeEvent(((tinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tinRowDeleting != null)) {
                    this.tinRowDeleting(this, new tinRowChangeEvent(((tinRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetinRow(tinRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tinDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class benefitsListDataTable : global::System.Data.TypedTableBase<benefitsListRow> {
            
            private global::System.Data.DataColumn columnbenefitsList_Id;
            
            private global::System.Data.DataColumn columnpackages_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsListDataTable() {
                this.TableName = "benefitsList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal benefitsListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected benefitsListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefitsList_IdColumn {
                get {
                    return this.columnbenefitsList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn packages_IdColumn {
                get {
                    return this.columnpackages_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsListRow this[int index] {
                get {
                    return ((benefitsListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event benefitsListRowChangeEventHandler benefitsListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event benefitsListRowChangeEventHandler benefitsListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event benefitsListRowChangeEventHandler benefitsListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event benefitsListRowChangeEventHandler benefitsListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddbenefitsListRow(benefitsListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsListRow AddbenefitsListRow(packagesRow parentpackagesRowBypackages_benefitsList) {
                benefitsListRow rowbenefitsListRow = ((benefitsListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentpackagesRowBypackages_benefitsList != null)) {
                    columnValuesArray[1] = parentpackagesRowBypackages_benefitsList[0];
                }
                rowbenefitsListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbenefitsListRow);
                return rowbenefitsListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                benefitsListDataTable cln = ((benefitsListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new benefitsListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnbenefitsList_Id = base.Columns["benefitsList_Id"];
                this.columnpackages_Id = base.Columns["packages_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnbenefitsList_Id = new global::System.Data.DataColumn("benefitsList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefitsList_Id);
                this.columnpackages_Id = new global::System.Data.DataColumn("packages_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnpackages_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnbenefitsList_Id}, true));
                this.columnbenefitsList_Id.AutoIncrement = true;
                this.columnbenefitsList_Id.AllowDBNull = false;
                this.columnbenefitsList_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsListRow NewbenefitsListRow() {
                return ((benefitsListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new benefitsListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(benefitsListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.benefitsListRowChanged != null)) {
                    this.benefitsListRowChanged(this, new benefitsListRowChangeEvent(((benefitsListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.benefitsListRowChanging != null)) {
                    this.benefitsListRowChanging(this, new benefitsListRowChangeEvent(((benefitsListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.benefitsListRowDeleted != null)) {
                    this.benefitsListRowDeleted(this, new benefitsListRowChangeEvent(((benefitsListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.benefitsListRowDeleting != null)) {
                    this.benefitsListRowDeleting(this, new benefitsListRowChangeEvent(((benefitsListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovebenefitsListRow(benefitsListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "benefitsListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class benefitsDataTable : global::System.Data.TypedTableBase<benefitsRow> {
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            private global::System.Data.DataColumn columnbenefitsList_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsDataTable() {
                this.TableName = "benefits";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal benefitsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected benefitsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefitsList_IdColumn {
                get {
                    return this.columnbenefitsList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow this[int index] {
                get {
                    return ((benefitsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event benefitsRowChangeEventHandler benefitsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event benefitsRowChangeEventHandler benefitsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event benefitsRowChangeEventHandler benefitsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event benefitsRowChangeEventHandler benefitsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddbenefitsRow(benefitsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow AddbenefitsRow(benefitsListRow parentbenefitsListRowBybenefitsList_benefits) {
                benefitsRow rowbenefitsRow = ((benefitsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentbenefitsListRowBybenefitsList_benefits != null)) {
                    columnValuesArray[1] = parentbenefitsListRowBybenefitsList_benefits[0];
                }
                rowbenefitsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbenefitsRow);
                return rowbenefitsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                benefitsDataTable cln = ((benefitsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new benefitsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnbenefits_Id = base.Columns["benefits_Id"];
                this.columnbenefitsList_Id = base.Columns["benefitsList_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columnbenefitsList_Id = new global::System.Data.DataColumn("benefitsList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefitsList_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnbenefits_Id}, true));
                this.columnbenefits_Id.AutoIncrement = true;
                this.columnbenefits_Id.AllowDBNull = false;
                this.columnbenefits_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow NewbenefitsRow() {
                return ((benefitsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new benefitsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(benefitsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.benefitsRowChanged != null)) {
                    this.benefitsRowChanged(this, new benefitsRowChangeEvent(((benefitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.benefitsRowChanging != null)) {
                    this.benefitsRowChanging(this, new benefitsRowChangeEvent(((benefitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.benefitsRowDeleted != null)) {
                    this.benefitsRowDeleted(this, new benefitsRowChangeEvent(((benefitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.benefitsRowDeleting != null)) {
                    this.benefitsRowDeleting(this, new benefitsRowChangeEvent(((benefitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovebenefitsRow(benefitsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "benefitsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class benefitTypeCodeDataTable : global::System.Data.TypedTableBase<benefitTypeCodeRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitTypeCodeDataTable() {
                this.TableName = "benefitTypeCode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal benefitTypeCodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected benefitTypeCodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitTypeCodeRow this[int index] {
                get {
                    return ((benefitTypeCodeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event benefitTypeCodeRowChangeEventHandler benefitTypeCodeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event benefitTypeCodeRowChangeEventHandler benefitTypeCodeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event benefitTypeCodeRowChangeEventHandler benefitTypeCodeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event benefitTypeCodeRowChangeEventHandler benefitTypeCodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddbenefitTypeCodeRow(benefitTypeCodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitTypeCodeRow AddbenefitTypeCodeRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_benefitTypeCode) {
                benefitTypeCodeRow rowbenefitTypeCodeRow = ((benefitTypeCodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_benefitTypeCode != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_benefitTypeCode[0];
                }
                rowbenefitTypeCodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbenefitTypeCodeRow);
                return rowbenefitTypeCodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                benefitTypeCodeDataTable cln = ((benefitTypeCodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new benefitTypeCodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitTypeCodeRow NewbenefitTypeCodeRow() {
                return ((benefitTypeCodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new benefitTypeCodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(benefitTypeCodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.benefitTypeCodeRowChanged != null)) {
                    this.benefitTypeCodeRowChanged(this, new benefitTypeCodeRowChangeEvent(((benefitTypeCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.benefitTypeCodeRowChanging != null)) {
                    this.benefitTypeCodeRowChanging(this, new benefitTypeCodeRowChangeEvent(((benefitTypeCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.benefitTypeCodeRowDeleted != null)) {
                    this.benefitTypeCodeRowDeleted(this, new benefitTypeCodeRowChangeEvent(((benefitTypeCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.benefitTypeCodeRowDeleting != null)) {
                    this.benefitTypeCodeRowDeleting(this, new benefitTypeCodeRowChangeEvent(((benefitTypeCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovebenefitTypeCodeRow(benefitTypeCodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "benefitTypeCodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isEHBDataTable : global::System.Data.TypedTableBase<isEHBRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isEHBDataTable() {
                this.TableName = "isEHB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isEHBDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected isEHBDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isEHBRow this[int index] {
                get {
                    return ((isEHBRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isEHBRowChangeEventHandler isEHBRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isEHBRowChangeEventHandler isEHBRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isEHBRowChangeEventHandler isEHBRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isEHBRowChangeEventHandler isEHBRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddisEHBRow(isEHBRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isEHBRow AddisEHBRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_isEHB) {
                isEHBRow rowisEHBRow = ((isEHBRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_isEHB != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_isEHB[0];
                }
                rowisEHBRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowisEHBRow);
                return rowisEHBRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                isEHBDataTable cln = ((isEHBDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new isEHBDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isEHBRow NewisEHBRow() {
                return ((isEHBRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new isEHBRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(isEHBRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isEHBRowChanged != null)) {
                    this.isEHBRowChanged(this, new isEHBRowChangeEvent(((isEHBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isEHBRowChanging != null)) {
                    this.isEHBRowChanging(this, new isEHBRowChangeEvent(((isEHBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isEHBRowDeleted != null)) {
                    this.isEHBRowDeleted(this, new isEHBRowChangeEvent(((isEHBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isEHBRowDeleting != null)) {
                    this.isEHBRowDeleting(this, new isEHBRowChangeEvent(((isEHBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveisEHBRow(isEHBRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isEHBDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isStateMandateDataTable : global::System.Data.TypedTableBase<isStateMandateRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isStateMandateDataTable() {
                this.TableName = "isStateMandate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isStateMandateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected isStateMandateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isStateMandateRow this[int index] {
                get {
                    return ((isStateMandateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isStateMandateRowChangeEventHandler isStateMandateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isStateMandateRowChangeEventHandler isStateMandateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isStateMandateRowChangeEventHandler isStateMandateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isStateMandateRowChangeEventHandler isStateMandateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddisStateMandateRow(isStateMandateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isStateMandateRow AddisStateMandateRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_isStateMandate) {
                isStateMandateRow rowisStateMandateRow = ((isStateMandateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_isStateMandate != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_isStateMandate[0];
                }
                rowisStateMandateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowisStateMandateRow);
                return rowisStateMandateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                isStateMandateDataTable cln = ((isStateMandateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new isStateMandateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isStateMandateRow NewisStateMandateRow() {
                return ((isStateMandateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new isStateMandateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(isStateMandateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isStateMandateRowChanged != null)) {
                    this.isStateMandateRowChanged(this, new isStateMandateRowChangeEvent(((isStateMandateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isStateMandateRowChanging != null)) {
                    this.isStateMandateRowChanging(this, new isStateMandateRowChangeEvent(((isStateMandateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isStateMandateRowDeleted != null)) {
                    this.isStateMandateRowDeleted(this, new isStateMandateRowChangeEvent(((isStateMandateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isStateMandateRowDeleting != null)) {
                    this.isStateMandateRowDeleting(this, new isStateMandateRowChangeEvent(((isStateMandateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveisStateMandateRow(isStateMandateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isStateMandateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isBenefitCoveredDataTable : global::System.Data.TypedTableBase<isBenefitCoveredRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isBenefitCoveredDataTable() {
                this.TableName = "isBenefitCovered";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isBenefitCoveredDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected isBenefitCoveredDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isBenefitCoveredRow this[int index] {
                get {
                    return ((isBenefitCoveredRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isBenefitCoveredRowChangeEventHandler isBenefitCoveredRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isBenefitCoveredRowChangeEventHandler isBenefitCoveredRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isBenefitCoveredRowChangeEventHandler isBenefitCoveredRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isBenefitCoveredRowChangeEventHandler isBenefitCoveredRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddisBenefitCoveredRow(isBenefitCoveredRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isBenefitCoveredRow AddisBenefitCoveredRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_isBenefitCovered) {
                isBenefitCoveredRow rowisBenefitCoveredRow = ((isBenefitCoveredRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_isBenefitCovered != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_isBenefitCovered[0];
                }
                rowisBenefitCoveredRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowisBenefitCoveredRow);
                return rowisBenefitCoveredRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                isBenefitCoveredDataTable cln = ((isBenefitCoveredDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new isBenefitCoveredDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isBenefitCoveredRow NewisBenefitCoveredRow() {
                return ((isBenefitCoveredRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new isBenefitCoveredRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(isBenefitCoveredRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isBenefitCoveredRowChanged != null)) {
                    this.isBenefitCoveredRowChanged(this, new isBenefitCoveredRowChangeEvent(((isBenefitCoveredRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isBenefitCoveredRowChanging != null)) {
                    this.isBenefitCoveredRowChanging(this, new isBenefitCoveredRowChangeEvent(((isBenefitCoveredRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isBenefitCoveredRowDeleted != null)) {
                    this.isBenefitCoveredRowDeleted(this, new isBenefitCoveredRowChangeEvent(((isBenefitCoveredRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isBenefitCoveredRowDeleting != null)) {
                    this.isBenefitCoveredRowDeleting(this, new isBenefitCoveredRowChangeEvent(((isBenefitCoveredRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveisBenefitCoveredRow(isBenefitCoveredRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isBenefitCoveredDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class serviceLimitDataTable : global::System.Data.TypedTableBase<serviceLimitRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceLimitDataTable() {
                this.TableName = "serviceLimit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal serviceLimitDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected serviceLimitDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceLimitRow this[int index] {
                get {
                    return ((serviceLimitRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceLimitRowChangeEventHandler serviceLimitRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceLimitRowChangeEventHandler serviceLimitRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceLimitRowChangeEventHandler serviceLimitRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceLimitRowChangeEventHandler serviceLimitRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddserviceLimitRow(serviceLimitRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceLimitRow AddserviceLimitRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_serviceLimit) {
                serviceLimitRow rowserviceLimitRow = ((serviceLimitRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_serviceLimit != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_serviceLimit[0];
                }
                rowserviceLimitRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowserviceLimitRow);
                return rowserviceLimitRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                serviceLimitDataTable cln = ((serviceLimitDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new serviceLimitDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceLimitRow NewserviceLimitRow() {
                return ((serviceLimitRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new serviceLimitRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(serviceLimitRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.serviceLimitRowChanged != null)) {
                    this.serviceLimitRowChanged(this, new serviceLimitRowChangeEvent(((serviceLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.serviceLimitRowChanging != null)) {
                    this.serviceLimitRowChanging(this, new serviceLimitRowChangeEvent(((serviceLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.serviceLimitRowDeleted != null)) {
                    this.serviceLimitRowDeleted(this, new serviceLimitRowChangeEvent(((serviceLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.serviceLimitRowDeleting != null)) {
                    this.serviceLimitRowDeleting(this, new serviceLimitRowChangeEvent(((serviceLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveserviceLimitRow(serviceLimitRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "serviceLimitDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class quantityLimitDataTable : global::System.Data.TypedTableBase<quantityLimitRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public quantityLimitDataTable() {
                this.TableName = "quantityLimit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal quantityLimitDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected quantityLimitDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public quantityLimitRow this[int index] {
                get {
                    return ((quantityLimitRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event quantityLimitRowChangeEventHandler quantityLimitRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event quantityLimitRowChangeEventHandler quantityLimitRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event quantityLimitRowChangeEventHandler quantityLimitRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event quantityLimitRowChangeEventHandler quantityLimitRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddquantityLimitRow(quantityLimitRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public quantityLimitRow AddquantityLimitRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_quantityLimit) {
                quantityLimitRow rowquantityLimitRow = ((quantityLimitRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_quantityLimit != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_quantityLimit[0];
                }
                rowquantityLimitRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowquantityLimitRow);
                return rowquantityLimitRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                quantityLimitDataTable cln = ((quantityLimitDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new quantityLimitDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public quantityLimitRow NewquantityLimitRow() {
                return ((quantityLimitRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new quantityLimitRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(quantityLimitRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.quantityLimitRowChanged != null)) {
                    this.quantityLimitRowChanged(this, new quantityLimitRowChangeEvent(((quantityLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.quantityLimitRowChanging != null)) {
                    this.quantityLimitRowChanging(this, new quantityLimitRowChangeEvent(((quantityLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.quantityLimitRowDeleted != null)) {
                    this.quantityLimitRowDeleted(this, new quantityLimitRowChangeEvent(((quantityLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.quantityLimitRowDeleting != null)) {
                    this.quantityLimitRowDeleting(this, new quantityLimitRowChangeEvent(((quantityLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovequantityLimitRow(quantityLimitRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "quantityLimitDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class unitLimitDataTable : global::System.Data.TypedTableBase<unitLimitRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public unitLimitDataTable() {
                this.TableName = "unitLimit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal unitLimitDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected unitLimitDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public unitLimitRow this[int index] {
                get {
                    return ((unitLimitRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event unitLimitRowChangeEventHandler unitLimitRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event unitLimitRowChangeEventHandler unitLimitRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event unitLimitRowChangeEventHandler unitLimitRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event unitLimitRowChangeEventHandler unitLimitRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddunitLimitRow(unitLimitRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public unitLimitRow AddunitLimitRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_unitLimit) {
                unitLimitRow rowunitLimitRow = ((unitLimitRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_unitLimit != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_unitLimit[0];
                }
                rowunitLimitRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowunitLimitRow);
                return rowunitLimitRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                unitLimitDataTable cln = ((unitLimitDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new unitLimitDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public unitLimitRow NewunitLimitRow() {
                return ((unitLimitRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new unitLimitRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(unitLimitRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.unitLimitRowChanged != null)) {
                    this.unitLimitRowChanged(this, new unitLimitRowChangeEvent(((unitLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.unitLimitRowChanging != null)) {
                    this.unitLimitRowChanging(this, new unitLimitRowChangeEvent(((unitLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.unitLimitRowDeleted != null)) {
                    this.unitLimitRowDeleted(this, new unitLimitRowChangeEvent(((unitLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.unitLimitRowDeleting != null)) {
                    this.unitLimitRowDeleting(this, new unitLimitRowChangeEvent(((unitLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveunitLimitRow(unitLimitRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "unitLimitDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class minimumStayDataTable : global::System.Data.TypedTableBase<minimumStayRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public minimumStayDataTable() {
                this.TableName = "minimumStay";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal minimumStayDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected minimumStayDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public minimumStayRow this[int index] {
                get {
                    return ((minimumStayRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event minimumStayRowChangeEventHandler minimumStayRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event minimumStayRowChangeEventHandler minimumStayRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event minimumStayRowChangeEventHandler minimumStayRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event minimumStayRowChangeEventHandler minimumStayRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddminimumStayRow(minimumStayRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public minimumStayRow AddminimumStayRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_minimumStay) {
                minimumStayRow rowminimumStayRow = ((minimumStayRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_minimumStay != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_minimumStay[0];
                }
                rowminimumStayRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowminimumStayRow);
                return rowminimumStayRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                minimumStayDataTable cln = ((minimumStayDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new minimumStayDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public minimumStayRow NewminimumStayRow() {
                return ((minimumStayRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new minimumStayRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(minimumStayRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.minimumStayRowChanged != null)) {
                    this.minimumStayRowChanged(this, new minimumStayRowChangeEvent(((minimumStayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.minimumStayRowChanging != null)) {
                    this.minimumStayRowChanging(this, new minimumStayRowChangeEvent(((minimumStayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.minimumStayRowDeleted != null)) {
                    this.minimumStayRowDeleted(this, new minimumStayRowChangeEvent(((minimumStayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.minimumStayRowDeleting != null)) {
                    this.minimumStayRowDeleting(this, new minimumStayRowChangeEvent(((minimumStayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveminimumStayRow(minimumStayRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "minimumStayDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class exclusionDataTable : global::System.Data.TypedTableBase<exclusionRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exclusionDataTable() {
                this.TableName = "exclusion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal exclusionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected exclusionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exclusionRow this[int index] {
                get {
                    return ((exclusionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event exclusionRowChangeEventHandler exclusionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event exclusionRowChangeEventHandler exclusionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event exclusionRowChangeEventHandler exclusionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event exclusionRowChangeEventHandler exclusionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddexclusionRow(exclusionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exclusionRow AddexclusionRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_exclusion) {
                exclusionRow rowexclusionRow = ((exclusionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_exclusion != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_exclusion[0];
                }
                rowexclusionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowexclusionRow);
                return rowexclusionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                exclusionDataTable cln = ((exclusionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new exclusionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exclusionRow NewexclusionRow() {
                return ((exclusionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new exclusionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(exclusionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.exclusionRowChanged != null)) {
                    this.exclusionRowChanged(this, new exclusionRowChangeEvent(((exclusionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.exclusionRowChanging != null)) {
                    this.exclusionRowChanging(this, new exclusionRowChangeEvent(((exclusionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.exclusionRowDeleted != null)) {
                    this.exclusionRowDeleted(this, new exclusionRowChangeEvent(((exclusionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.exclusionRowDeleting != null)) {
                    this.exclusionRowDeleting(this, new exclusionRowChangeEvent(((exclusionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveexclusionRow(exclusionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "exclusionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class explanationDataTable : global::System.Data.TypedTableBase<explanationRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public explanationDataTable() {
                this.TableName = "explanation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal explanationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected explanationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public explanationRow this[int index] {
                get {
                    return ((explanationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event explanationRowChangeEventHandler explanationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event explanationRowChangeEventHandler explanationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event explanationRowChangeEventHandler explanationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event explanationRowChangeEventHandler explanationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddexplanationRow(explanationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public explanationRow AddexplanationRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_explanation) {
                explanationRow rowexplanationRow = ((explanationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_explanation != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_explanation[0];
                }
                rowexplanationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowexplanationRow);
                return rowexplanationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                explanationDataTable cln = ((explanationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new explanationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public explanationRow NewexplanationRow() {
                return ((explanationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new explanationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(explanationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.explanationRowChanged != null)) {
                    this.explanationRowChanged(this, new explanationRowChangeEvent(((explanationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.explanationRowChanging != null)) {
                    this.explanationRowChanging(this, new explanationRowChangeEvent(((explanationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.explanationRowDeleted != null)) {
                    this.explanationRowDeleted(this, new explanationRowChangeEvent(((explanationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.explanationRowDeleting != null)) {
                    this.explanationRowDeleting(this, new explanationRowChangeEvent(((explanationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveexplanationRow(explanationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "explanationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ehbVarianceReasonDataTable : global::System.Data.TypedTableBase<ehbVarianceReasonRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbVarianceReasonDataTable() {
                this.TableName = "ehbVarianceReason";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ehbVarianceReasonDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ehbVarianceReasonDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbVarianceReasonRow this[int index] {
                get {
                    return ((ehbVarianceReasonRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ehbVarianceReasonRowChangeEventHandler ehbVarianceReasonRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ehbVarianceReasonRowChangeEventHandler ehbVarianceReasonRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ehbVarianceReasonRowChangeEventHandler ehbVarianceReasonRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ehbVarianceReasonRowChangeEventHandler ehbVarianceReasonRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddehbVarianceReasonRow(ehbVarianceReasonRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbVarianceReasonRow AddehbVarianceReasonRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_ehbVarianceReason) {
                ehbVarianceReasonRow rowehbVarianceReasonRow = ((ehbVarianceReasonRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_ehbVarianceReason != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_ehbVarianceReason[0];
                }
                rowehbVarianceReasonRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowehbVarianceReasonRow);
                return rowehbVarianceReasonRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ehbVarianceReasonDataTable cln = ((ehbVarianceReasonDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ehbVarianceReasonDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbVarianceReasonRow NewehbVarianceReasonRow() {
                return ((ehbVarianceReasonRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ehbVarianceReasonRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ehbVarianceReasonRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ehbVarianceReasonRowChanged != null)) {
                    this.ehbVarianceReasonRowChanged(this, new ehbVarianceReasonRowChangeEvent(((ehbVarianceReasonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ehbVarianceReasonRowChanging != null)) {
                    this.ehbVarianceReasonRowChanging(this, new ehbVarianceReasonRowChangeEvent(((ehbVarianceReasonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ehbVarianceReasonRowDeleted != null)) {
                    this.ehbVarianceReasonRowDeleted(this, new ehbVarianceReasonRowChangeEvent(((ehbVarianceReasonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ehbVarianceReasonRowDeleting != null)) {
                    this.ehbVarianceReasonRowDeleting(this, new ehbVarianceReasonRowChangeEvent(((ehbVarianceReasonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveehbVarianceReasonRow(ehbVarianceReasonRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ehbVarianceReasonDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class subjectToDeductibleTier1DataTable : global::System.Data.TypedTableBase<subjectToDeductibleTier1Row> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier1DataTable() {
                this.TableName = "subjectToDeductibleTier1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal subjectToDeductibleTier1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected subjectToDeductibleTier1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier1Row this[int index] {
                get {
                    return ((subjectToDeductibleTier1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event subjectToDeductibleTier1RowChangeEventHandler subjectToDeductibleTier1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event subjectToDeductibleTier1RowChangeEventHandler subjectToDeductibleTier1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event subjectToDeductibleTier1RowChangeEventHandler subjectToDeductibleTier1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event subjectToDeductibleTier1RowChangeEventHandler subjectToDeductibleTier1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddsubjectToDeductibleTier1Row(subjectToDeductibleTier1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier1Row AddsubjectToDeductibleTier1Row(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_subjectToDeductibleTier1) {
                subjectToDeductibleTier1Row rowsubjectToDeductibleTier1Row = ((subjectToDeductibleTier1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_subjectToDeductibleTier1 != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_subjectToDeductibleTier1[0];
                }
                rowsubjectToDeductibleTier1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowsubjectToDeductibleTier1Row);
                return rowsubjectToDeductibleTier1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                subjectToDeductibleTier1DataTable cln = ((subjectToDeductibleTier1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new subjectToDeductibleTier1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier1Row NewsubjectToDeductibleTier1Row() {
                return ((subjectToDeductibleTier1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new subjectToDeductibleTier1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(subjectToDeductibleTier1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.subjectToDeductibleTier1RowChanged != null)) {
                    this.subjectToDeductibleTier1RowChanged(this, new subjectToDeductibleTier1RowChangeEvent(((subjectToDeductibleTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.subjectToDeductibleTier1RowChanging != null)) {
                    this.subjectToDeductibleTier1RowChanging(this, new subjectToDeductibleTier1RowChangeEvent(((subjectToDeductibleTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.subjectToDeductibleTier1RowDeleted != null)) {
                    this.subjectToDeductibleTier1RowDeleted(this, new subjectToDeductibleTier1RowChangeEvent(((subjectToDeductibleTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.subjectToDeductibleTier1RowDeleting != null)) {
                    this.subjectToDeductibleTier1RowDeleting(this, new subjectToDeductibleTier1RowChangeEvent(((subjectToDeductibleTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovesubjectToDeductibleTier1Row(subjectToDeductibleTier1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "subjectToDeductibleTier1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class subjectToDeductibleTier2DataTable : global::System.Data.TypedTableBase<subjectToDeductibleTier2Row> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier2DataTable() {
                this.TableName = "subjectToDeductibleTier2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal subjectToDeductibleTier2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected subjectToDeductibleTier2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier2Row this[int index] {
                get {
                    return ((subjectToDeductibleTier2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event subjectToDeductibleTier2RowChangeEventHandler subjectToDeductibleTier2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event subjectToDeductibleTier2RowChangeEventHandler subjectToDeductibleTier2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event subjectToDeductibleTier2RowChangeEventHandler subjectToDeductibleTier2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event subjectToDeductibleTier2RowChangeEventHandler subjectToDeductibleTier2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddsubjectToDeductibleTier2Row(subjectToDeductibleTier2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier2Row AddsubjectToDeductibleTier2Row(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_subjectToDeductibleTier2) {
                subjectToDeductibleTier2Row rowsubjectToDeductibleTier2Row = ((subjectToDeductibleTier2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_subjectToDeductibleTier2 != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_subjectToDeductibleTier2[0];
                }
                rowsubjectToDeductibleTier2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowsubjectToDeductibleTier2Row);
                return rowsubjectToDeductibleTier2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                subjectToDeductibleTier2DataTable cln = ((subjectToDeductibleTier2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new subjectToDeductibleTier2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier2Row NewsubjectToDeductibleTier2Row() {
                return ((subjectToDeductibleTier2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new subjectToDeductibleTier2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(subjectToDeductibleTier2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.subjectToDeductibleTier2RowChanged != null)) {
                    this.subjectToDeductibleTier2RowChanged(this, new subjectToDeductibleTier2RowChangeEvent(((subjectToDeductibleTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.subjectToDeductibleTier2RowChanging != null)) {
                    this.subjectToDeductibleTier2RowChanging(this, new subjectToDeductibleTier2RowChangeEvent(((subjectToDeductibleTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.subjectToDeductibleTier2RowDeleted != null)) {
                    this.subjectToDeductibleTier2RowDeleted(this, new subjectToDeductibleTier2RowChangeEvent(((subjectToDeductibleTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.subjectToDeductibleTier2RowDeleting != null)) {
                    this.subjectToDeductibleTier2RowDeleting(this, new subjectToDeductibleTier2RowChangeEvent(((subjectToDeductibleTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovesubjectToDeductibleTier2Row(subjectToDeductibleTier2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "subjectToDeductibleTier2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class excludedInNetworkMOOPDataTable : global::System.Data.TypedTableBase<excludedInNetworkMOOPRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedInNetworkMOOPDataTable() {
                this.TableName = "excludedInNetworkMOOP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal excludedInNetworkMOOPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected excludedInNetworkMOOPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedInNetworkMOOPRow this[int index] {
                get {
                    return ((excludedInNetworkMOOPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event excludedInNetworkMOOPRowChangeEventHandler excludedInNetworkMOOPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event excludedInNetworkMOOPRowChangeEventHandler excludedInNetworkMOOPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event excludedInNetworkMOOPRowChangeEventHandler excludedInNetworkMOOPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event excludedInNetworkMOOPRowChangeEventHandler excludedInNetworkMOOPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddexcludedInNetworkMOOPRow(excludedInNetworkMOOPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedInNetworkMOOPRow AddexcludedInNetworkMOOPRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_excludedInNetworkMOOP) {
                excludedInNetworkMOOPRow rowexcludedInNetworkMOOPRow = ((excludedInNetworkMOOPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_excludedInNetworkMOOP != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_excludedInNetworkMOOP[0];
                }
                rowexcludedInNetworkMOOPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowexcludedInNetworkMOOPRow);
                return rowexcludedInNetworkMOOPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                excludedInNetworkMOOPDataTable cln = ((excludedInNetworkMOOPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new excludedInNetworkMOOPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedInNetworkMOOPRow NewexcludedInNetworkMOOPRow() {
                return ((excludedInNetworkMOOPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new excludedInNetworkMOOPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(excludedInNetworkMOOPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.excludedInNetworkMOOPRowChanged != null)) {
                    this.excludedInNetworkMOOPRowChanged(this, new excludedInNetworkMOOPRowChangeEvent(((excludedInNetworkMOOPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.excludedInNetworkMOOPRowChanging != null)) {
                    this.excludedInNetworkMOOPRowChanging(this, new excludedInNetworkMOOPRowChangeEvent(((excludedInNetworkMOOPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.excludedInNetworkMOOPRowDeleted != null)) {
                    this.excludedInNetworkMOOPRowDeleted(this, new excludedInNetworkMOOPRowChangeEvent(((excludedInNetworkMOOPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.excludedInNetworkMOOPRowDeleting != null)) {
                    this.excludedInNetworkMOOPRowDeleting(this, new excludedInNetworkMOOPRowChangeEvent(((excludedInNetworkMOOPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveexcludedInNetworkMOOPRow(excludedInNetworkMOOPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "excludedInNetworkMOOPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class excludedOutOfNetworkMOOPDataTable : global::System.Data.TypedTableBase<excludedOutOfNetworkMOOPRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnbenefits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedOutOfNetworkMOOPDataTable() {
                this.TableName = "excludedOutOfNetworkMOOP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal excludedOutOfNetworkMOOPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected excludedOutOfNetworkMOOPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn benefits_IdColumn {
                get {
                    return this.columnbenefits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedOutOfNetworkMOOPRow this[int index] {
                get {
                    return ((excludedOutOfNetworkMOOPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event excludedOutOfNetworkMOOPRowChangeEventHandler excludedOutOfNetworkMOOPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event excludedOutOfNetworkMOOPRowChangeEventHandler excludedOutOfNetworkMOOPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event excludedOutOfNetworkMOOPRowChangeEventHandler excludedOutOfNetworkMOOPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event excludedOutOfNetworkMOOPRowChangeEventHandler excludedOutOfNetworkMOOPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddexcludedOutOfNetworkMOOPRow(excludedOutOfNetworkMOOPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedOutOfNetworkMOOPRow AddexcludedOutOfNetworkMOOPRow(string cellValue, string cellLocation, benefitsRow parentbenefitsRowBybenefits_excludedOutOfNetworkMOOP) {
                excludedOutOfNetworkMOOPRow rowexcludedOutOfNetworkMOOPRow = ((excludedOutOfNetworkMOOPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentbenefitsRowBybenefits_excludedOutOfNetworkMOOP != null)) {
                    columnValuesArray[2] = parentbenefitsRowBybenefits_excludedOutOfNetworkMOOP[0];
                }
                rowexcludedOutOfNetworkMOOPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowexcludedOutOfNetworkMOOPRow);
                return rowexcludedOutOfNetworkMOOPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                excludedOutOfNetworkMOOPDataTable cln = ((excludedOutOfNetworkMOOPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new excludedOutOfNetworkMOOPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnbenefits_Id = base.Columns["benefits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnbenefits_Id = new global::System.Data.DataColumn("benefits_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnbenefits_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedOutOfNetworkMOOPRow NewexcludedOutOfNetworkMOOPRow() {
                return ((excludedOutOfNetworkMOOPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new excludedOutOfNetworkMOOPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(excludedOutOfNetworkMOOPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.excludedOutOfNetworkMOOPRowChanged != null)) {
                    this.excludedOutOfNetworkMOOPRowChanged(this, new excludedOutOfNetworkMOOPRowChangeEvent(((excludedOutOfNetworkMOOPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.excludedOutOfNetworkMOOPRowChanging != null)) {
                    this.excludedOutOfNetworkMOOPRowChanging(this, new excludedOutOfNetworkMOOPRowChangeEvent(((excludedOutOfNetworkMOOPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.excludedOutOfNetworkMOOPRowDeleted != null)) {
                    this.excludedOutOfNetworkMOOPRowDeleted(this, new excludedOutOfNetworkMOOPRowChangeEvent(((excludedOutOfNetworkMOOPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.excludedOutOfNetworkMOOPRowDeleting != null)) {
                    this.excludedOutOfNetworkMOOPRowDeleting(this, new excludedOutOfNetworkMOOPRowChangeEvent(((excludedOutOfNetworkMOOPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveexcludedOutOfNetworkMOOPRow(excludedOutOfNetworkMOOPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "excludedOutOfNetworkMOOPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class plansListDataTable : global::System.Data.TypedTableBase<plansListRow> {
            
            private global::System.Data.DataColumn columnplansList_Id;
            
            private global::System.Data.DataColumn columnpackages_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansListDataTable() {
                this.TableName = "plansList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal plansListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected plansListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn plansList_IdColumn {
                get {
                    return this.columnplansList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn packages_IdColumn {
                get {
                    return this.columnpackages_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansListRow this[int index] {
                get {
                    return ((plansListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event plansListRowChangeEventHandler plansListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event plansListRowChangeEventHandler plansListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event plansListRowChangeEventHandler plansListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event plansListRowChangeEventHandler plansListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddplansListRow(plansListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansListRow AddplansListRow(packagesRow parentpackagesRowBypackages_plansList) {
                plansListRow rowplansListRow = ((plansListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentpackagesRowBypackages_plansList != null)) {
                    columnValuesArray[1] = parentpackagesRowBypackages_plansList[0];
                }
                rowplansListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowplansListRow);
                return rowplansListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                plansListDataTable cln = ((plansListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new plansListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnplansList_Id = base.Columns["plansList_Id"];
                this.columnpackages_Id = base.Columns["packages_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnplansList_Id = new global::System.Data.DataColumn("plansList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplansList_Id);
                this.columnpackages_Id = new global::System.Data.DataColumn("packages_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnpackages_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnplansList_Id}, true));
                this.columnplansList_Id.AutoIncrement = true;
                this.columnplansList_Id.AllowDBNull = false;
                this.columnplansList_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansListRow NewplansListRow() {
                return ((plansListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new plansListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(plansListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.plansListRowChanged != null)) {
                    this.plansListRowChanged(this, new plansListRowChangeEvent(((plansListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.plansListRowChanging != null)) {
                    this.plansListRowChanging(this, new plansListRowChangeEvent(((plansListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.plansListRowDeleted != null)) {
                    this.plansListRowDeleted(this, new plansListRowChangeEvent(((plansListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.plansListRowDeleting != null)) {
                    this.plansListRowDeleting(this, new plansListRowChangeEvent(((plansListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveplansListRow(plansListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "plansListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class plansDataTable : global::System.Data.TypedTableBase<plansRow> {
            
            private global::System.Data.DataColumn columnplans_Id;
            
            private global::System.Data.DataColumn columnplansList_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansDataTable() {
                this.TableName = "plans";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal plansDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected plansDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn plans_IdColumn {
                get {
                    return this.columnplans_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn plansList_IdColumn {
                get {
                    return this.columnplansList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansRow this[int index] {
                get {
                    return ((plansRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event plansRowChangeEventHandler plansRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event plansRowChangeEventHandler plansRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event plansRowChangeEventHandler plansRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event plansRowChangeEventHandler plansRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddplansRow(plansRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansRow AddplansRow(plansListRow parentplansListRowByplansList_plans) {
                plansRow rowplansRow = ((plansRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentplansListRowByplansList_plans != null)) {
                    columnValuesArray[1] = parentplansListRowByplansList_plans[0];
                }
                rowplansRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowplansRow);
                return rowplansRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                plansDataTable cln = ((plansDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new plansDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnplans_Id = base.Columns["plans_Id"];
                this.columnplansList_Id = base.Columns["plansList_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnplans_Id = new global::System.Data.DataColumn("plans_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplans_Id);
                this.columnplansList_Id = new global::System.Data.DataColumn("plansList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplansList_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnplans_Id}, true));
                this.columnplans_Id.AutoIncrement = true;
                this.columnplans_Id.AllowDBNull = false;
                this.columnplans_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansRow NewplansRow() {
                return ((plansRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new plansRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(plansRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.plansRowChanged != null)) {
                    this.plansRowChanged(this, new plansRowChangeEvent(((plansRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.plansRowChanging != null)) {
                    this.plansRowChanging(this, new plansRowChangeEvent(((plansRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.plansRowDeleted != null)) {
                    this.plansRowDeleted(this, new plansRowChangeEvent(((plansRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.plansRowDeleting != null)) {
                    this.plansRowDeleting(this, new plansRowChangeEvent(((plansRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveplansRow(plansRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "plansDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class planAttributesDataTable : global::System.Data.TypedTableBase<planAttributesRow> {
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            private global::System.Data.DataColumn columnplans_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesDataTable() {
                this.TableName = "planAttributes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planAttributesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected planAttributesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn plans_IdColumn {
                get {
                    return this.columnplans_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow this[int index] {
                get {
                    return ((planAttributesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planAttributesRowChangeEventHandler planAttributesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planAttributesRowChangeEventHandler planAttributesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planAttributesRowChangeEventHandler planAttributesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planAttributesRowChangeEventHandler planAttributesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddplanAttributesRow(planAttributesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow AddplanAttributesRow(plansRow parentplansRowByplans_planAttributes) {
                planAttributesRow rowplanAttributesRow = ((planAttributesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentplansRowByplans_planAttributes != null)) {
                    columnValuesArray[1] = parentplansRowByplans_planAttributes[0];
                }
                rowplanAttributesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowplanAttributesRow);
                return rowplanAttributesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                planAttributesDataTable cln = ((planAttributesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new planAttributesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
                this.columnplans_Id = base.Columns["plans_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columnplans_Id = new global::System.Data.DataColumn("plans_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplans_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnplanAttributes_Id}, true));
                this.columnplanAttributes_Id.AutoIncrement = true;
                this.columnplanAttributes_Id.AllowDBNull = false;
                this.columnplanAttributes_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow NewplanAttributesRow() {
                return ((planAttributesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new planAttributesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(planAttributesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.planAttributesRowChanged != null)) {
                    this.planAttributesRowChanged(this, new planAttributesRowChangeEvent(((planAttributesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.planAttributesRowChanging != null)) {
                    this.planAttributesRowChanging(this, new planAttributesRowChangeEvent(((planAttributesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.planAttributesRowDeleted != null)) {
                    this.planAttributesRowDeleted(this, new planAttributesRowChangeEvent(((planAttributesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.planAttributesRowDeleting != null)) {
                    this.planAttributesRowDeleting(this, new planAttributesRowChangeEvent(((planAttributesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveplanAttributesRow(planAttributesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "planAttributesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class standardComponentIDDataTable : global::System.Data.TypedTableBase<standardComponentIDRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public standardComponentIDDataTable() {
                this.TableName = "standardComponentID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal standardComponentIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected standardComponentIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public standardComponentIDRow this[int index] {
                get {
                    return ((standardComponentIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event standardComponentIDRowChangeEventHandler standardComponentIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event standardComponentIDRowChangeEventHandler standardComponentIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event standardComponentIDRowChangeEventHandler standardComponentIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event standardComponentIDRowChangeEventHandler standardComponentIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddstandardComponentIDRow(standardComponentIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public standardComponentIDRow AddstandardComponentIDRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_standardComponentID) {
                standardComponentIDRow rowstandardComponentIDRow = ((standardComponentIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_standardComponentID != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_standardComponentID[0];
                }
                rowstandardComponentIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstandardComponentIDRow);
                return rowstandardComponentIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                standardComponentIDDataTable cln = ((standardComponentIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new standardComponentIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public standardComponentIDRow NewstandardComponentIDRow() {
                return ((standardComponentIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new standardComponentIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(standardComponentIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.standardComponentIDRowChanged != null)) {
                    this.standardComponentIDRowChanged(this, new standardComponentIDRowChangeEvent(((standardComponentIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.standardComponentIDRowChanging != null)) {
                    this.standardComponentIDRowChanging(this, new standardComponentIDRowChangeEvent(((standardComponentIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.standardComponentIDRowDeleted != null)) {
                    this.standardComponentIDRowDeleted(this, new standardComponentIDRowChangeEvent(((standardComponentIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.standardComponentIDRowDeleting != null)) {
                    this.standardComponentIDRowDeleting(this, new standardComponentIDRowChangeEvent(((standardComponentIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovestandardComponentIDRow(standardComponentIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "standardComponentIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class hiosProductIDDataTable : global::System.Data.TypedTableBase<hiosProductIDRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hiosProductIDDataTable() {
                this.TableName = "hiosProductID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal hiosProductIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected hiosProductIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hiosProductIDRow this[int index] {
                get {
                    return ((hiosProductIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hiosProductIDRowChangeEventHandler hiosProductIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hiosProductIDRowChangeEventHandler hiosProductIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hiosProductIDRowChangeEventHandler hiosProductIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hiosProductIDRowChangeEventHandler hiosProductIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddhiosProductIDRow(hiosProductIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hiosProductIDRow AddhiosProductIDRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_hiosProductID) {
                hiosProductIDRow rowhiosProductIDRow = ((hiosProductIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_hiosProductID != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_hiosProductID[0];
                }
                rowhiosProductIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhiosProductIDRow);
                return rowhiosProductIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                hiosProductIDDataTable cln = ((hiosProductIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new hiosProductIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hiosProductIDRow NewhiosProductIDRow() {
                return ((hiosProductIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new hiosProductIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(hiosProductIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.hiosProductIDRowChanged != null)) {
                    this.hiosProductIDRowChanged(this, new hiosProductIDRowChangeEvent(((hiosProductIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.hiosProductIDRowChanging != null)) {
                    this.hiosProductIDRowChanging(this, new hiosProductIDRowChangeEvent(((hiosProductIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.hiosProductIDRowDeleted != null)) {
                    this.hiosProductIDRowDeleted(this, new hiosProductIDRowChangeEvent(((hiosProductIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.hiosProductIDRowDeleting != null)) {
                    this.hiosProductIDRowDeleting(this, new hiosProductIDRowChangeEvent(((hiosProductIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovehiosProductIDRow(hiosProductIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "hiosProductIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class hpidDataTable : global::System.Data.TypedTableBase<hpidRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hpidDataTable() {
                this.TableName = "hpid";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal hpidDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected hpidDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hpidRow this[int index] {
                get {
                    return ((hpidRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hpidRowChangeEventHandler hpidRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hpidRowChangeEventHandler hpidRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hpidRowChangeEventHandler hpidRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hpidRowChangeEventHandler hpidRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddhpidRow(hpidRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hpidRow AddhpidRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_hpid) {
                hpidRow rowhpidRow = ((hpidRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_hpid != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_hpid[0];
                }
                rowhpidRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhpidRow);
                return rowhpidRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                hpidDataTable cln = ((hpidDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new hpidDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hpidRow NewhpidRow() {
                return ((hpidRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new hpidRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(hpidRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.hpidRowChanged != null)) {
                    this.hpidRowChanged(this, new hpidRowChangeEvent(((hpidRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.hpidRowChanging != null)) {
                    this.hpidRowChanging(this, new hpidRowChangeEvent(((hpidRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.hpidRowDeleted != null)) {
                    this.hpidRowDeleted(this, new hpidRowChangeEvent(((hpidRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.hpidRowDeleting != null)) {
                    this.hpidRowDeleting(this, new hpidRowChangeEvent(((hpidRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovehpidRow(hpidRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "hpidDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class networkIDDataTable : global::System.Data.TypedTableBase<networkIDRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public networkIDDataTable() {
                this.TableName = "networkID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal networkIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected networkIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public networkIDRow this[int index] {
                get {
                    return ((networkIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event networkIDRowChangeEventHandler networkIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event networkIDRowChangeEventHandler networkIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event networkIDRowChangeEventHandler networkIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event networkIDRowChangeEventHandler networkIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddnetworkIDRow(networkIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public networkIDRow AddnetworkIDRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_networkID) {
                networkIDRow rownetworkIDRow = ((networkIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_networkID != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_networkID[0];
                }
                rownetworkIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rownetworkIDRow);
                return rownetworkIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                networkIDDataTable cln = ((networkIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new networkIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public networkIDRow NewnetworkIDRow() {
                return ((networkIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new networkIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(networkIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.networkIDRowChanged != null)) {
                    this.networkIDRowChanged(this, new networkIDRowChangeEvent(((networkIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.networkIDRowChanging != null)) {
                    this.networkIDRowChanging(this, new networkIDRowChangeEvent(((networkIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.networkIDRowDeleted != null)) {
                    this.networkIDRowDeleted(this, new networkIDRowChangeEvent(((networkIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.networkIDRowDeleting != null)) {
                    this.networkIDRowDeleting(this, new networkIDRowChangeEvent(((networkIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovenetworkIDRow(networkIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "networkIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class serviceAreaIDDataTable : global::System.Data.TypedTableBase<serviceAreaIDRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceAreaIDDataTable() {
                this.TableName = "serviceAreaID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal serviceAreaIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected serviceAreaIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceAreaIDRow this[int index] {
                get {
                    return ((serviceAreaIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceAreaIDRowChangeEventHandler serviceAreaIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceAreaIDRowChangeEventHandler serviceAreaIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceAreaIDRowChangeEventHandler serviceAreaIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceAreaIDRowChangeEventHandler serviceAreaIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddserviceAreaIDRow(serviceAreaIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceAreaIDRow AddserviceAreaIDRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_serviceAreaID) {
                serviceAreaIDRow rowserviceAreaIDRow = ((serviceAreaIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_serviceAreaID != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_serviceAreaID[0];
                }
                rowserviceAreaIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowserviceAreaIDRow);
                return rowserviceAreaIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                serviceAreaIDDataTable cln = ((serviceAreaIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new serviceAreaIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceAreaIDRow NewserviceAreaIDRow() {
                return ((serviceAreaIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new serviceAreaIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(serviceAreaIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.serviceAreaIDRowChanged != null)) {
                    this.serviceAreaIDRowChanged(this, new serviceAreaIDRowChangeEvent(((serviceAreaIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.serviceAreaIDRowChanging != null)) {
                    this.serviceAreaIDRowChanging(this, new serviceAreaIDRowChangeEvent(((serviceAreaIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.serviceAreaIDRowDeleted != null)) {
                    this.serviceAreaIDRowDeleted(this, new serviceAreaIDRowChangeEvent(((serviceAreaIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.serviceAreaIDRowDeleting != null)) {
                    this.serviceAreaIDRowDeleting(this, new serviceAreaIDRowChangeEvent(((serviceAreaIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveserviceAreaIDRow(serviceAreaIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "serviceAreaIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class formularyIDDataTable : global::System.Data.TypedTableBase<formularyIDRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public formularyIDDataTable() {
                this.TableName = "formularyID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal formularyIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected formularyIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public formularyIDRow this[int index] {
                get {
                    return ((formularyIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event formularyIDRowChangeEventHandler formularyIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event formularyIDRowChangeEventHandler formularyIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event formularyIDRowChangeEventHandler formularyIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event formularyIDRowChangeEventHandler formularyIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddformularyIDRow(formularyIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public formularyIDRow AddformularyIDRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_formularyID) {
                formularyIDRow rowformularyIDRow = ((formularyIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_formularyID != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_formularyID[0];
                }
                rowformularyIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowformularyIDRow);
                return rowformularyIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                formularyIDDataTable cln = ((formularyIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new formularyIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public formularyIDRow NewformularyIDRow() {
                return ((formularyIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new formularyIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(formularyIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.formularyIDRowChanged != null)) {
                    this.formularyIDRowChanged(this, new formularyIDRowChangeEvent(((formularyIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.formularyIDRowChanging != null)) {
                    this.formularyIDRowChanging(this, new formularyIDRowChangeEvent(((formularyIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.formularyIDRowDeleted != null)) {
                    this.formularyIDRowDeleted(this, new formularyIDRowChangeEvent(((formularyIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.formularyIDRowDeleting != null)) {
                    this.formularyIDRowDeleting(this, new formularyIDRowChangeEvent(((formularyIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveformularyIDRow(formularyIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "formularyIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isNewPlanDataTable : global::System.Data.TypedTableBase<isNewPlanRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isNewPlanDataTable() {
                this.TableName = "isNewPlan";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isNewPlanDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected isNewPlanDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isNewPlanRow this[int index] {
                get {
                    return ((isNewPlanRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isNewPlanRowChangeEventHandler isNewPlanRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isNewPlanRowChangeEventHandler isNewPlanRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isNewPlanRowChangeEventHandler isNewPlanRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isNewPlanRowChangeEventHandler isNewPlanRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddisNewPlanRow(isNewPlanRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isNewPlanRow AddisNewPlanRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_isNewPlan) {
                isNewPlanRow rowisNewPlanRow = ((isNewPlanRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_isNewPlan != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_isNewPlan[0];
                }
                rowisNewPlanRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowisNewPlanRow);
                return rowisNewPlanRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                isNewPlanDataTable cln = ((isNewPlanDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new isNewPlanDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isNewPlanRow NewisNewPlanRow() {
                return ((isNewPlanRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new isNewPlanRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(isNewPlanRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isNewPlanRowChanged != null)) {
                    this.isNewPlanRowChanged(this, new isNewPlanRowChangeEvent(((isNewPlanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isNewPlanRowChanging != null)) {
                    this.isNewPlanRowChanging(this, new isNewPlanRowChangeEvent(((isNewPlanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isNewPlanRowDeleted != null)) {
                    this.isNewPlanRowDeleted(this, new isNewPlanRowChangeEvent(((isNewPlanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isNewPlanRowDeleting != null)) {
                    this.isNewPlanRowDeleting(this, new isNewPlanRowChangeEvent(((isNewPlanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveisNewPlanRow(isNewPlanRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isNewPlanDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class planTypeDataTable : global::System.Data.TypedTableBase<planTypeRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planTypeDataTable() {
                this.TableName = "planType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected planTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planTypeRow this[int index] {
                get {
                    return ((planTypeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planTypeRowChangeEventHandler planTypeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planTypeRowChangeEventHandler planTypeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planTypeRowChangeEventHandler planTypeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planTypeRowChangeEventHandler planTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddplanTypeRow(planTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planTypeRow AddplanTypeRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_planType) {
                planTypeRow rowplanTypeRow = ((planTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_planType != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_planType[0];
                }
                rowplanTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowplanTypeRow);
                return rowplanTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                planTypeDataTable cln = ((planTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new planTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planTypeRow NewplanTypeRow() {
                return ((planTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new planTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(planTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.planTypeRowChanged != null)) {
                    this.planTypeRowChanged(this, new planTypeRowChangeEvent(((planTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.planTypeRowChanging != null)) {
                    this.planTypeRowChanging(this, new planTypeRowChangeEvent(((planTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.planTypeRowDeleted != null)) {
                    this.planTypeRowDeleted(this, new planTypeRowChangeEvent(((planTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.planTypeRowDeleting != null)) {
                    this.planTypeRowDeleting(this, new planTypeRowChangeEvent(((planTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveplanTypeRow(planTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "planTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class uniquePlanDesignDataTable : global::System.Data.TypedTableBase<uniquePlanDesignRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uniquePlanDesignDataTable() {
                this.TableName = "uniquePlanDesign";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal uniquePlanDesignDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected uniquePlanDesignDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uniquePlanDesignRow this[int index] {
                get {
                    return ((uniquePlanDesignRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event uniquePlanDesignRowChangeEventHandler uniquePlanDesignRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event uniquePlanDesignRowChangeEventHandler uniquePlanDesignRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event uniquePlanDesignRowChangeEventHandler uniquePlanDesignRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event uniquePlanDesignRowChangeEventHandler uniquePlanDesignRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdduniquePlanDesignRow(uniquePlanDesignRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uniquePlanDesignRow AdduniquePlanDesignRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_uniquePlanDesign) {
                uniquePlanDesignRow rowuniquePlanDesignRow = ((uniquePlanDesignRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_uniquePlanDesign != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_uniquePlanDesign[0];
                }
                rowuniquePlanDesignRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowuniquePlanDesignRow);
                return rowuniquePlanDesignRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                uniquePlanDesignDataTable cln = ((uniquePlanDesignDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new uniquePlanDesignDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uniquePlanDesignRow NewuniquePlanDesignRow() {
                return ((uniquePlanDesignRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new uniquePlanDesignRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(uniquePlanDesignRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.uniquePlanDesignRowChanged != null)) {
                    this.uniquePlanDesignRowChanged(this, new uniquePlanDesignRowChangeEvent(((uniquePlanDesignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.uniquePlanDesignRowChanging != null)) {
                    this.uniquePlanDesignRowChanging(this, new uniquePlanDesignRowChangeEvent(((uniquePlanDesignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.uniquePlanDesignRowDeleted != null)) {
                    this.uniquePlanDesignRowDeleted(this, new uniquePlanDesignRowChangeEvent(((uniquePlanDesignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.uniquePlanDesignRowDeleting != null)) {
                    this.uniquePlanDesignRowDeleting(this, new uniquePlanDesignRowChangeEvent(((uniquePlanDesignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveuniquePlanDesignRow(uniquePlanDesignRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "uniquePlanDesignDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class qhpOrNonQhpDataTable : global::System.Data.TypedTableBase<qhpOrNonQhpRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public qhpOrNonQhpDataTable() {
                this.TableName = "qhpOrNonQhp";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal qhpOrNonQhpDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected qhpOrNonQhpDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public qhpOrNonQhpRow this[int index] {
                get {
                    return ((qhpOrNonQhpRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event qhpOrNonQhpRowChangeEventHandler qhpOrNonQhpRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event qhpOrNonQhpRowChangeEventHandler qhpOrNonQhpRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event qhpOrNonQhpRowChangeEventHandler qhpOrNonQhpRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event qhpOrNonQhpRowChangeEventHandler qhpOrNonQhpRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddqhpOrNonQhpRow(qhpOrNonQhpRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public qhpOrNonQhpRow AddqhpOrNonQhpRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_qhpOrNonQhp) {
                qhpOrNonQhpRow rowqhpOrNonQhpRow = ((qhpOrNonQhpRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_qhpOrNonQhp != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_qhpOrNonQhp[0];
                }
                rowqhpOrNonQhpRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowqhpOrNonQhpRow);
                return rowqhpOrNonQhpRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                qhpOrNonQhpDataTable cln = ((qhpOrNonQhpDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new qhpOrNonQhpDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public qhpOrNonQhpRow NewqhpOrNonQhpRow() {
                return ((qhpOrNonQhpRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new qhpOrNonQhpRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(qhpOrNonQhpRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.qhpOrNonQhpRowChanged != null)) {
                    this.qhpOrNonQhpRowChanged(this, new qhpOrNonQhpRowChangeEvent(((qhpOrNonQhpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.qhpOrNonQhpRowChanging != null)) {
                    this.qhpOrNonQhpRowChanging(this, new qhpOrNonQhpRowChangeEvent(((qhpOrNonQhpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.qhpOrNonQhpRowDeleted != null)) {
                    this.qhpOrNonQhpRowDeleted(this, new qhpOrNonQhpRowChangeEvent(((qhpOrNonQhpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.qhpOrNonQhpRowDeleting != null)) {
                    this.qhpOrNonQhpRowDeleting(this, new qhpOrNonQhpRowChangeEvent(((qhpOrNonQhpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveqhpOrNonQhpRow(qhpOrNonQhpRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "qhpOrNonQhpDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class insurancePlanPregnancyNoticeReqIndDataTable : global::System.Data.TypedTableBase<insurancePlanPregnancyNoticeReqIndRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanPregnancyNoticeReqIndDataTable() {
                this.TableName = "insurancePlanPregnancyNoticeReqInd";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal insurancePlanPregnancyNoticeReqIndDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected insurancePlanPregnancyNoticeReqIndDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanPregnancyNoticeReqIndRow this[int index] {
                get {
                    return ((insurancePlanPregnancyNoticeReqIndRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event insurancePlanPregnancyNoticeReqIndRowChangeEventHandler insurancePlanPregnancyNoticeReqIndRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event insurancePlanPregnancyNoticeReqIndRowChangeEventHandler insurancePlanPregnancyNoticeReqIndRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event insurancePlanPregnancyNoticeReqIndRowChangeEventHandler insurancePlanPregnancyNoticeReqIndRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event insurancePlanPregnancyNoticeReqIndRowChangeEventHandler insurancePlanPregnancyNoticeReqIndRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddinsurancePlanPregnancyNoticeReqIndRow(insurancePlanPregnancyNoticeReqIndRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanPregnancyNoticeReqIndRow AddinsurancePlanPregnancyNoticeReqIndRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_insurancePlanPregnancyNoticeReqInd) {
                insurancePlanPregnancyNoticeReqIndRow rowinsurancePlanPregnancyNoticeReqIndRow = ((insurancePlanPregnancyNoticeReqIndRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_insurancePlanPregnancyNoticeReqInd != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_insurancePlanPregnancyNoticeReqInd[0];
                }
                rowinsurancePlanPregnancyNoticeReqIndRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinsurancePlanPregnancyNoticeReqIndRow);
                return rowinsurancePlanPregnancyNoticeReqIndRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                insurancePlanPregnancyNoticeReqIndDataTable cln = ((insurancePlanPregnancyNoticeReqIndDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new insurancePlanPregnancyNoticeReqIndDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanPregnancyNoticeReqIndRow NewinsurancePlanPregnancyNoticeReqIndRow() {
                return ((insurancePlanPregnancyNoticeReqIndRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new insurancePlanPregnancyNoticeReqIndRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(insurancePlanPregnancyNoticeReqIndRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.insurancePlanPregnancyNoticeReqIndRowChanged != null)) {
                    this.insurancePlanPregnancyNoticeReqIndRowChanged(this, new insurancePlanPregnancyNoticeReqIndRowChangeEvent(((insurancePlanPregnancyNoticeReqIndRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.insurancePlanPregnancyNoticeReqIndRowChanging != null)) {
                    this.insurancePlanPregnancyNoticeReqIndRowChanging(this, new insurancePlanPregnancyNoticeReqIndRowChangeEvent(((insurancePlanPregnancyNoticeReqIndRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.insurancePlanPregnancyNoticeReqIndRowDeleted != null)) {
                    this.insurancePlanPregnancyNoticeReqIndRowDeleted(this, new insurancePlanPregnancyNoticeReqIndRowChangeEvent(((insurancePlanPregnancyNoticeReqIndRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.insurancePlanPregnancyNoticeReqIndRowDeleting != null)) {
                    this.insurancePlanPregnancyNoticeReqIndRowDeleting(this, new insurancePlanPregnancyNoticeReqIndRowChangeEvent(((insurancePlanPregnancyNoticeReqIndRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveinsurancePlanPregnancyNoticeReqIndRow(insurancePlanPregnancyNoticeReqIndRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "insurancePlanPregnancyNoticeReqIndDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isSpecialistReferralRequiredDataTable : global::System.Data.TypedTableBase<isSpecialistReferralRequiredRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isSpecialistReferralRequiredDataTable() {
                this.TableName = "isSpecialistReferralRequired";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isSpecialistReferralRequiredDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected isSpecialistReferralRequiredDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isSpecialistReferralRequiredRow this[int index] {
                get {
                    return ((isSpecialistReferralRequiredRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isSpecialistReferralRequiredRowChangeEventHandler isSpecialistReferralRequiredRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isSpecialistReferralRequiredRowChangeEventHandler isSpecialistReferralRequiredRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isSpecialistReferralRequiredRowChangeEventHandler isSpecialistReferralRequiredRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isSpecialistReferralRequiredRowChangeEventHandler isSpecialistReferralRequiredRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddisSpecialistReferralRequiredRow(isSpecialistReferralRequiredRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isSpecialistReferralRequiredRow AddisSpecialistReferralRequiredRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_isSpecialistReferralRequired) {
                isSpecialistReferralRequiredRow rowisSpecialistReferralRequiredRow = ((isSpecialistReferralRequiredRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_isSpecialistReferralRequired != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_isSpecialistReferralRequired[0];
                }
                rowisSpecialistReferralRequiredRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowisSpecialistReferralRequiredRow);
                return rowisSpecialistReferralRequiredRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                isSpecialistReferralRequiredDataTable cln = ((isSpecialistReferralRequiredDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new isSpecialistReferralRequiredDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isSpecialistReferralRequiredRow NewisSpecialistReferralRequiredRow() {
                return ((isSpecialistReferralRequiredRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new isSpecialistReferralRequiredRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(isSpecialistReferralRequiredRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isSpecialistReferralRequiredRowChanged != null)) {
                    this.isSpecialistReferralRequiredRowChanged(this, new isSpecialistReferralRequiredRowChangeEvent(((isSpecialistReferralRequiredRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isSpecialistReferralRequiredRowChanging != null)) {
                    this.isSpecialistReferralRequiredRowChanging(this, new isSpecialistReferralRequiredRowChangeEvent(((isSpecialistReferralRequiredRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isSpecialistReferralRequiredRowDeleted != null)) {
                    this.isSpecialistReferralRequiredRowDeleted(this, new isSpecialistReferralRequiredRowChangeEvent(((isSpecialistReferralRequiredRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isSpecialistReferralRequiredRowDeleting != null)) {
                    this.isSpecialistReferralRequiredRowDeleting(this, new isSpecialistReferralRequiredRowChangeEvent(((isSpecialistReferralRequiredRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveisSpecialistReferralRequiredRow(isSpecialistReferralRequiredRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isSpecialistReferralRequiredDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class healthCareSpecialistReferralTypeDataTable : global::System.Data.TypedTableBase<healthCareSpecialistReferralTypeRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public healthCareSpecialistReferralTypeDataTable() {
                this.TableName = "healthCareSpecialistReferralType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal healthCareSpecialistReferralTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected healthCareSpecialistReferralTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public healthCareSpecialistReferralTypeRow this[int index] {
                get {
                    return ((healthCareSpecialistReferralTypeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event healthCareSpecialistReferralTypeRowChangeEventHandler healthCareSpecialistReferralTypeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event healthCareSpecialistReferralTypeRowChangeEventHandler healthCareSpecialistReferralTypeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event healthCareSpecialistReferralTypeRowChangeEventHandler healthCareSpecialistReferralTypeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event healthCareSpecialistReferralTypeRowChangeEventHandler healthCareSpecialistReferralTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddhealthCareSpecialistReferralTypeRow(healthCareSpecialistReferralTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public healthCareSpecialistReferralTypeRow AddhealthCareSpecialistReferralTypeRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_healthCareSpecialistReferralType) {
                healthCareSpecialistReferralTypeRow rowhealthCareSpecialistReferralTypeRow = ((healthCareSpecialistReferralTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_healthCareSpecialistReferralType != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_healthCareSpecialistReferralType[0];
                }
                rowhealthCareSpecialistReferralTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhealthCareSpecialistReferralTypeRow);
                return rowhealthCareSpecialistReferralTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                healthCareSpecialistReferralTypeDataTable cln = ((healthCareSpecialistReferralTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new healthCareSpecialistReferralTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public healthCareSpecialistReferralTypeRow NewhealthCareSpecialistReferralTypeRow() {
                return ((healthCareSpecialistReferralTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new healthCareSpecialistReferralTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(healthCareSpecialistReferralTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.healthCareSpecialistReferralTypeRowChanged != null)) {
                    this.healthCareSpecialistReferralTypeRowChanged(this, new healthCareSpecialistReferralTypeRowChangeEvent(((healthCareSpecialistReferralTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.healthCareSpecialistReferralTypeRowChanging != null)) {
                    this.healthCareSpecialistReferralTypeRowChanging(this, new healthCareSpecialistReferralTypeRowChangeEvent(((healthCareSpecialistReferralTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.healthCareSpecialistReferralTypeRowDeleted != null)) {
                    this.healthCareSpecialistReferralTypeRowDeleted(this, new healthCareSpecialistReferralTypeRowChangeEvent(((healthCareSpecialistReferralTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.healthCareSpecialistReferralTypeRowDeleting != null)) {
                    this.healthCareSpecialistReferralTypeRowDeleting(this, new healthCareSpecialistReferralTypeRowChangeEvent(((healthCareSpecialistReferralTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovehealthCareSpecialistReferralTypeRow(healthCareSpecialistReferralTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "healthCareSpecialistReferralTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class insurancePlanBenefitExclusionTextDataTable : global::System.Data.TypedTableBase<insurancePlanBenefitExclusionTextRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanBenefitExclusionTextDataTable() {
                this.TableName = "insurancePlanBenefitExclusionText";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal insurancePlanBenefitExclusionTextDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected insurancePlanBenefitExclusionTextDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanBenefitExclusionTextRow this[int index] {
                get {
                    return ((insurancePlanBenefitExclusionTextRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event insurancePlanBenefitExclusionTextRowChangeEventHandler insurancePlanBenefitExclusionTextRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event insurancePlanBenefitExclusionTextRowChangeEventHandler insurancePlanBenefitExclusionTextRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event insurancePlanBenefitExclusionTextRowChangeEventHandler insurancePlanBenefitExclusionTextRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event insurancePlanBenefitExclusionTextRowChangeEventHandler insurancePlanBenefitExclusionTextRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddinsurancePlanBenefitExclusionTextRow(insurancePlanBenefitExclusionTextRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanBenefitExclusionTextRow AddinsurancePlanBenefitExclusionTextRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_insurancePlanBenefitExclusionText) {
                insurancePlanBenefitExclusionTextRow rowinsurancePlanBenefitExclusionTextRow = ((insurancePlanBenefitExclusionTextRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_insurancePlanBenefitExclusionText != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_insurancePlanBenefitExclusionText[0];
                }
                rowinsurancePlanBenefitExclusionTextRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinsurancePlanBenefitExclusionTextRow);
                return rowinsurancePlanBenefitExclusionTextRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                insurancePlanBenefitExclusionTextDataTable cln = ((insurancePlanBenefitExclusionTextDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new insurancePlanBenefitExclusionTextDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanBenefitExclusionTextRow NewinsurancePlanBenefitExclusionTextRow() {
                return ((insurancePlanBenefitExclusionTextRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new insurancePlanBenefitExclusionTextRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(insurancePlanBenefitExclusionTextRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.insurancePlanBenefitExclusionTextRowChanged != null)) {
                    this.insurancePlanBenefitExclusionTextRowChanged(this, new insurancePlanBenefitExclusionTextRowChangeEvent(((insurancePlanBenefitExclusionTextRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.insurancePlanBenefitExclusionTextRowChanging != null)) {
                    this.insurancePlanBenefitExclusionTextRowChanging(this, new insurancePlanBenefitExclusionTextRowChangeEvent(((insurancePlanBenefitExclusionTextRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.insurancePlanBenefitExclusionTextRowDeleted != null)) {
                    this.insurancePlanBenefitExclusionTextRowDeleted(this, new insurancePlanBenefitExclusionTextRowChangeEvent(((insurancePlanBenefitExclusionTextRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.insurancePlanBenefitExclusionTextRowDeleting != null)) {
                    this.insurancePlanBenefitExclusionTextRowDeleting(this, new insurancePlanBenefitExclusionTextRowChangeEvent(((insurancePlanBenefitExclusionTextRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveinsurancePlanBenefitExclusionTextRow(insurancePlanBenefitExclusionTextRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "insurancePlanBenefitExclusionTextDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class indianPlanVariationDataTable : global::System.Data.TypedTableBase<indianPlanVariationRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public indianPlanVariationDataTable() {
                this.TableName = "indianPlanVariation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal indianPlanVariationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected indianPlanVariationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public indianPlanVariationRow this[int index] {
                get {
                    return ((indianPlanVariationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event indianPlanVariationRowChangeEventHandler indianPlanVariationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event indianPlanVariationRowChangeEventHandler indianPlanVariationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event indianPlanVariationRowChangeEventHandler indianPlanVariationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event indianPlanVariationRowChangeEventHandler indianPlanVariationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddindianPlanVariationRow(indianPlanVariationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public indianPlanVariationRow AddindianPlanVariationRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_indianPlanVariation) {
                indianPlanVariationRow rowindianPlanVariationRow = ((indianPlanVariationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_indianPlanVariation != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_indianPlanVariation[0];
                }
                rowindianPlanVariationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowindianPlanVariationRow);
                return rowindianPlanVariationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                indianPlanVariationDataTable cln = ((indianPlanVariationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new indianPlanVariationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public indianPlanVariationRow NewindianPlanVariationRow() {
                return ((indianPlanVariationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new indianPlanVariationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(indianPlanVariationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.indianPlanVariationRowChanged != null)) {
                    this.indianPlanVariationRowChanged(this, new indianPlanVariationRowChangeEvent(((indianPlanVariationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.indianPlanVariationRowChanging != null)) {
                    this.indianPlanVariationRowChanging(this, new indianPlanVariationRowChangeEvent(((indianPlanVariationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.indianPlanVariationRowDeleted != null)) {
                    this.indianPlanVariationRowDeleted(this, new indianPlanVariationRowChangeEvent(((indianPlanVariationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.indianPlanVariationRowDeleting != null)) {
                    this.indianPlanVariationRowDeleting(this, new indianPlanVariationRowChangeEvent(((indianPlanVariationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveindianPlanVariationRow(indianPlanVariationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "indianPlanVariationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class hsaEligibilityDataTable : global::System.Data.TypedTableBase<hsaEligibilityRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hsaEligibilityDataTable() {
                this.TableName = "hsaEligibility";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal hsaEligibilityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected hsaEligibilityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hsaEligibilityRow this[int index] {
                get {
                    return ((hsaEligibilityRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hsaEligibilityRowChangeEventHandler hsaEligibilityRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hsaEligibilityRowChangeEventHandler hsaEligibilityRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hsaEligibilityRowChangeEventHandler hsaEligibilityRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event hsaEligibilityRowChangeEventHandler hsaEligibilityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddhsaEligibilityRow(hsaEligibilityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hsaEligibilityRow AddhsaEligibilityRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_hsaEligibility) {
                hsaEligibilityRow rowhsaEligibilityRow = ((hsaEligibilityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_hsaEligibility != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_hsaEligibility[0];
                }
                rowhsaEligibilityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhsaEligibilityRow);
                return rowhsaEligibilityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                hsaEligibilityDataTable cln = ((hsaEligibilityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new hsaEligibilityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hsaEligibilityRow NewhsaEligibilityRow() {
                return ((hsaEligibilityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new hsaEligibilityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(hsaEligibilityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.hsaEligibilityRowChanged != null)) {
                    this.hsaEligibilityRowChanged(this, new hsaEligibilityRowChangeEvent(((hsaEligibilityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.hsaEligibilityRowChanging != null)) {
                    this.hsaEligibilityRowChanging(this, new hsaEligibilityRowChangeEvent(((hsaEligibilityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.hsaEligibilityRowDeleted != null)) {
                    this.hsaEligibilityRowDeleted(this, new hsaEligibilityRowChangeEvent(((hsaEligibilityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.hsaEligibilityRowDeleting != null)) {
                    this.hsaEligibilityRowDeleting(this, new hsaEligibilityRowChangeEvent(((hsaEligibilityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovehsaEligibilityRow(hsaEligibilityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "hsaEligibilityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class employerHSAHRAContributionIndicatorDataTable : global::System.Data.TypedTableBase<employerHSAHRAContributionIndicatorRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public employerHSAHRAContributionIndicatorDataTable() {
                this.TableName = "employerHSAHRAContributionIndicator";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal employerHSAHRAContributionIndicatorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected employerHSAHRAContributionIndicatorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public employerHSAHRAContributionIndicatorRow this[int index] {
                get {
                    return ((employerHSAHRAContributionIndicatorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event employerHSAHRAContributionIndicatorRowChangeEventHandler employerHSAHRAContributionIndicatorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event employerHSAHRAContributionIndicatorRowChangeEventHandler employerHSAHRAContributionIndicatorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event employerHSAHRAContributionIndicatorRowChangeEventHandler employerHSAHRAContributionIndicatorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event employerHSAHRAContributionIndicatorRowChangeEventHandler employerHSAHRAContributionIndicatorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddemployerHSAHRAContributionIndicatorRow(employerHSAHRAContributionIndicatorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public employerHSAHRAContributionIndicatorRow AddemployerHSAHRAContributionIndicatorRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_employerHSAHRAContributionIndicator) {
                employerHSAHRAContributionIndicatorRow rowemployerHSAHRAContributionIndicatorRow = ((employerHSAHRAContributionIndicatorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_employerHSAHRAContributionIndicator != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_employerHSAHRAContributionIndicator[0];
                }
                rowemployerHSAHRAContributionIndicatorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowemployerHSAHRAContributionIndicatorRow);
                return rowemployerHSAHRAContributionIndicatorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                employerHSAHRAContributionIndicatorDataTable cln = ((employerHSAHRAContributionIndicatorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new employerHSAHRAContributionIndicatorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public employerHSAHRAContributionIndicatorRow NewemployerHSAHRAContributionIndicatorRow() {
                return ((employerHSAHRAContributionIndicatorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new employerHSAHRAContributionIndicatorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(employerHSAHRAContributionIndicatorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.employerHSAHRAContributionIndicatorRowChanged != null)) {
                    this.employerHSAHRAContributionIndicatorRowChanged(this, new employerHSAHRAContributionIndicatorRowChangeEvent(((employerHSAHRAContributionIndicatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.employerHSAHRAContributionIndicatorRowChanging != null)) {
                    this.employerHSAHRAContributionIndicatorRowChanging(this, new employerHSAHRAContributionIndicatorRowChangeEvent(((employerHSAHRAContributionIndicatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.employerHSAHRAContributionIndicatorRowDeleted != null)) {
                    this.employerHSAHRAContributionIndicatorRowDeleted(this, new employerHSAHRAContributionIndicatorRowChangeEvent(((employerHSAHRAContributionIndicatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.employerHSAHRAContributionIndicatorRowDeleting != null)) {
                    this.employerHSAHRAContributionIndicatorRowDeleting(this, new employerHSAHRAContributionIndicatorRowChangeEvent(((employerHSAHRAContributionIndicatorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveemployerHSAHRAContributionIndicatorRow(employerHSAHRAContributionIndicatorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "employerHSAHRAContributionIndicatorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class empContributionAmountForHSAOrHRADataTable : global::System.Data.TypedTableBase<empContributionAmountForHSAOrHRARow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public empContributionAmountForHSAOrHRADataTable() {
                this.TableName = "empContributionAmountForHSAOrHRA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal empContributionAmountForHSAOrHRADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected empContributionAmountForHSAOrHRADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public empContributionAmountForHSAOrHRARow this[int index] {
                get {
                    return ((empContributionAmountForHSAOrHRARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event empContributionAmountForHSAOrHRARowChangeEventHandler empContributionAmountForHSAOrHRARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event empContributionAmountForHSAOrHRARowChangeEventHandler empContributionAmountForHSAOrHRARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event empContributionAmountForHSAOrHRARowChangeEventHandler empContributionAmountForHSAOrHRARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event empContributionAmountForHSAOrHRARowChangeEventHandler empContributionAmountForHSAOrHRARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddempContributionAmountForHSAOrHRARow(empContributionAmountForHSAOrHRARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public empContributionAmountForHSAOrHRARow AddempContributionAmountForHSAOrHRARow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_empContributionAmountForHSAOrHRA) {
                empContributionAmountForHSAOrHRARow rowempContributionAmountForHSAOrHRARow = ((empContributionAmountForHSAOrHRARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_empContributionAmountForHSAOrHRA != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_empContributionAmountForHSAOrHRA[0];
                }
                rowempContributionAmountForHSAOrHRARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowempContributionAmountForHSAOrHRARow);
                return rowempContributionAmountForHSAOrHRARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                empContributionAmountForHSAOrHRADataTable cln = ((empContributionAmountForHSAOrHRADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new empContributionAmountForHSAOrHRADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public empContributionAmountForHSAOrHRARow NewempContributionAmountForHSAOrHRARow() {
                return ((empContributionAmountForHSAOrHRARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new empContributionAmountForHSAOrHRARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(empContributionAmountForHSAOrHRARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.empContributionAmountForHSAOrHRARowChanged != null)) {
                    this.empContributionAmountForHSAOrHRARowChanged(this, new empContributionAmountForHSAOrHRARowChangeEvent(((empContributionAmountForHSAOrHRARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.empContributionAmountForHSAOrHRARowChanging != null)) {
                    this.empContributionAmountForHSAOrHRARowChanging(this, new empContributionAmountForHSAOrHRARowChangeEvent(((empContributionAmountForHSAOrHRARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.empContributionAmountForHSAOrHRARowDeleted != null)) {
                    this.empContributionAmountForHSAOrHRARowDeleted(this, new empContributionAmountForHSAOrHRARowChangeEvent(((empContributionAmountForHSAOrHRARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.empContributionAmountForHSAOrHRARowDeleting != null)) {
                    this.empContributionAmountForHSAOrHRARowDeleting(this, new empContributionAmountForHSAOrHRARowChangeEvent(((empContributionAmountForHSAOrHRARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveempContributionAmountForHSAOrHRARow(empContributionAmountForHSAOrHRARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "empContributionAmountForHSAOrHRADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class childOnlyOfferingDataTable : global::System.Data.TypedTableBase<childOnlyOfferingRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyOfferingDataTable() {
                this.TableName = "childOnlyOffering";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal childOnlyOfferingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected childOnlyOfferingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyOfferingRow this[int index] {
                get {
                    return ((childOnlyOfferingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event childOnlyOfferingRowChangeEventHandler childOnlyOfferingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event childOnlyOfferingRowChangeEventHandler childOnlyOfferingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event childOnlyOfferingRowChangeEventHandler childOnlyOfferingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event childOnlyOfferingRowChangeEventHandler childOnlyOfferingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddchildOnlyOfferingRow(childOnlyOfferingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyOfferingRow AddchildOnlyOfferingRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_childOnlyOffering) {
                childOnlyOfferingRow rowchildOnlyOfferingRow = ((childOnlyOfferingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_childOnlyOffering != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_childOnlyOffering[0];
                }
                rowchildOnlyOfferingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowchildOnlyOfferingRow);
                return rowchildOnlyOfferingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                childOnlyOfferingDataTable cln = ((childOnlyOfferingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new childOnlyOfferingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyOfferingRow NewchildOnlyOfferingRow() {
                return ((childOnlyOfferingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new childOnlyOfferingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(childOnlyOfferingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.childOnlyOfferingRowChanged != null)) {
                    this.childOnlyOfferingRowChanged(this, new childOnlyOfferingRowChangeEvent(((childOnlyOfferingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.childOnlyOfferingRowChanging != null)) {
                    this.childOnlyOfferingRowChanging(this, new childOnlyOfferingRowChangeEvent(((childOnlyOfferingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.childOnlyOfferingRowDeleted != null)) {
                    this.childOnlyOfferingRowDeleted(this, new childOnlyOfferingRowChangeEvent(((childOnlyOfferingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.childOnlyOfferingRowDeleting != null)) {
                    this.childOnlyOfferingRowDeleting(this, new childOnlyOfferingRowChangeEvent(((childOnlyOfferingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovechildOnlyOfferingRow(childOnlyOfferingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "childOnlyOfferingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class childOnlyPlanIDDataTable : global::System.Data.TypedTableBase<childOnlyPlanIDRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyPlanIDDataTable() {
                this.TableName = "childOnlyPlanID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal childOnlyPlanIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected childOnlyPlanIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyPlanIDRow this[int index] {
                get {
                    return ((childOnlyPlanIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event childOnlyPlanIDRowChangeEventHandler childOnlyPlanIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event childOnlyPlanIDRowChangeEventHandler childOnlyPlanIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event childOnlyPlanIDRowChangeEventHandler childOnlyPlanIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event childOnlyPlanIDRowChangeEventHandler childOnlyPlanIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddchildOnlyPlanIDRow(childOnlyPlanIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyPlanIDRow AddchildOnlyPlanIDRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_childOnlyPlanID) {
                childOnlyPlanIDRow rowchildOnlyPlanIDRow = ((childOnlyPlanIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_childOnlyPlanID != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_childOnlyPlanID[0];
                }
                rowchildOnlyPlanIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowchildOnlyPlanIDRow);
                return rowchildOnlyPlanIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                childOnlyPlanIDDataTable cln = ((childOnlyPlanIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new childOnlyPlanIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyPlanIDRow NewchildOnlyPlanIDRow() {
                return ((childOnlyPlanIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new childOnlyPlanIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(childOnlyPlanIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.childOnlyPlanIDRowChanged != null)) {
                    this.childOnlyPlanIDRowChanged(this, new childOnlyPlanIDRowChangeEvent(((childOnlyPlanIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.childOnlyPlanIDRowChanging != null)) {
                    this.childOnlyPlanIDRowChanging(this, new childOnlyPlanIDRowChangeEvent(((childOnlyPlanIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.childOnlyPlanIDRowDeleted != null)) {
                    this.childOnlyPlanIDRowDeleted(this, new childOnlyPlanIDRowChangeEvent(((childOnlyPlanIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.childOnlyPlanIDRowDeleting != null)) {
                    this.childOnlyPlanIDRowDeleting(this, new childOnlyPlanIDRowChangeEvent(((childOnlyPlanIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovechildOnlyPlanIDRow(childOnlyPlanIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "childOnlyPlanIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isWellnessProgramOfferedDataTable : global::System.Data.TypedTableBase<isWellnessProgramOfferedRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isWellnessProgramOfferedDataTable() {
                this.TableName = "isWellnessProgramOffered";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isWellnessProgramOfferedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected isWellnessProgramOfferedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isWellnessProgramOfferedRow this[int index] {
                get {
                    return ((isWellnessProgramOfferedRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isWellnessProgramOfferedRowChangeEventHandler isWellnessProgramOfferedRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isWellnessProgramOfferedRowChangeEventHandler isWellnessProgramOfferedRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isWellnessProgramOfferedRowChangeEventHandler isWellnessProgramOfferedRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isWellnessProgramOfferedRowChangeEventHandler isWellnessProgramOfferedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddisWellnessProgramOfferedRow(isWellnessProgramOfferedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isWellnessProgramOfferedRow AddisWellnessProgramOfferedRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_isWellnessProgramOffered) {
                isWellnessProgramOfferedRow rowisWellnessProgramOfferedRow = ((isWellnessProgramOfferedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_isWellnessProgramOffered != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_isWellnessProgramOffered[0];
                }
                rowisWellnessProgramOfferedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowisWellnessProgramOfferedRow);
                return rowisWellnessProgramOfferedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                isWellnessProgramOfferedDataTable cln = ((isWellnessProgramOfferedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new isWellnessProgramOfferedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isWellnessProgramOfferedRow NewisWellnessProgramOfferedRow() {
                return ((isWellnessProgramOfferedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new isWellnessProgramOfferedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(isWellnessProgramOfferedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isWellnessProgramOfferedRowChanged != null)) {
                    this.isWellnessProgramOfferedRowChanged(this, new isWellnessProgramOfferedRowChangeEvent(((isWellnessProgramOfferedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isWellnessProgramOfferedRowChanging != null)) {
                    this.isWellnessProgramOfferedRowChanging(this, new isWellnessProgramOfferedRowChangeEvent(((isWellnessProgramOfferedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isWellnessProgramOfferedRowDeleted != null)) {
                    this.isWellnessProgramOfferedRowDeleted(this, new isWellnessProgramOfferedRowChangeEvent(((isWellnessProgramOfferedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isWellnessProgramOfferedRowDeleting != null)) {
                    this.isWellnessProgramOfferedRowDeleting(this, new isWellnessProgramOfferedRowChangeEvent(((isWellnessProgramOfferedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveisWellnessProgramOfferedRow(isWellnessProgramOfferedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isWellnessProgramOfferedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isDiseaseMgmtProgramsOfferedDataTable : global::System.Data.TypedTableBase<isDiseaseMgmtProgramsOfferedRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isDiseaseMgmtProgramsOfferedDataTable() {
                this.TableName = "isDiseaseMgmtProgramsOffered";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isDiseaseMgmtProgramsOfferedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected isDiseaseMgmtProgramsOfferedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isDiseaseMgmtProgramsOfferedRow this[int index] {
                get {
                    return ((isDiseaseMgmtProgramsOfferedRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isDiseaseMgmtProgramsOfferedRowChangeEventHandler isDiseaseMgmtProgramsOfferedRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isDiseaseMgmtProgramsOfferedRowChangeEventHandler isDiseaseMgmtProgramsOfferedRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isDiseaseMgmtProgramsOfferedRowChangeEventHandler isDiseaseMgmtProgramsOfferedRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event isDiseaseMgmtProgramsOfferedRowChangeEventHandler isDiseaseMgmtProgramsOfferedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddisDiseaseMgmtProgramsOfferedRow(isDiseaseMgmtProgramsOfferedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isDiseaseMgmtProgramsOfferedRow AddisDiseaseMgmtProgramsOfferedRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_isDiseaseMgmtProgramsOffered) {
                isDiseaseMgmtProgramsOfferedRow rowisDiseaseMgmtProgramsOfferedRow = ((isDiseaseMgmtProgramsOfferedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_isDiseaseMgmtProgramsOffered != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_isDiseaseMgmtProgramsOffered[0];
                }
                rowisDiseaseMgmtProgramsOfferedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowisDiseaseMgmtProgramsOfferedRow);
                return rowisDiseaseMgmtProgramsOfferedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                isDiseaseMgmtProgramsOfferedDataTable cln = ((isDiseaseMgmtProgramsOfferedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new isDiseaseMgmtProgramsOfferedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isDiseaseMgmtProgramsOfferedRow NewisDiseaseMgmtProgramsOfferedRow() {
                return ((isDiseaseMgmtProgramsOfferedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new isDiseaseMgmtProgramsOfferedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(isDiseaseMgmtProgramsOfferedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isDiseaseMgmtProgramsOfferedRowChanged != null)) {
                    this.isDiseaseMgmtProgramsOfferedRowChanged(this, new isDiseaseMgmtProgramsOfferedRowChangeEvent(((isDiseaseMgmtProgramsOfferedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isDiseaseMgmtProgramsOfferedRowChanging != null)) {
                    this.isDiseaseMgmtProgramsOfferedRowChanging(this, new isDiseaseMgmtProgramsOfferedRowChangeEvent(((isDiseaseMgmtProgramsOfferedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isDiseaseMgmtProgramsOfferedRowDeleted != null)) {
                    this.isDiseaseMgmtProgramsOfferedRowDeleted(this, new isDiseaseMgmtProgramsOfferedRowChangeEvent(((isDiseaseMgmtProgramsOfferedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isDiseaseMgmtProgramsOfferedRowDeleting != null)) {
                    this.isDiseaseMgmtProgramsOfferedRowDeleting(this, new isDiseaseMgmtProgramsOfferedRowChangeEvent(((isDiseaseMgmtProgramsOfferedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveisDiseaseMgmtProgramsOfferedRow(isDiseaseMgmtProgramsOfferedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isDiseaseMgmtProgramsOfferedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ehbApportionmentForPediatricDentalDataTable : global::System.Data.TypedTableBase<ehbApportionmentForPediatricDentalRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbApportionmentForPediatricDentalDataTable() {
                this.TableName = "ehbApportionmentForPediatricDental";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ehbApportionmentForPediatricDentalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ehbApportionmentForPediatricDentalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbApportionmentForPediatricDentalRow this[int index] {
                get {
                    return ((ehbApportionmentForPediatricDentalRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ehbApportionmentForPediatricDentalRowChangeEventHandler ehbApportionmentForPediatricDentalRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ehbApportionmentForPediatricDentalRowChangeEventHandler ehbApportionmentForPediatricDentalRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ehbApportionmentForPediatricDentalRowChangeEventHandler ehbApportionmentForPediatricDentalRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ehbApportionmentForPediatricDentalRowChangeEventHandler ehbApportionmentForPediatricDentalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddehbApportionmentForPediatricDentalRow(ehbApportionmentForPediatricDentalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbApportionmentForPediatricDentalRow AddehbApportionmentForPediatricDentalRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_ehbApportionmentForPediatricDental) {
                ehbApportionmentForPediatricDentalRow rowehbApportionmentForPediatricDentalRow = ((ehbApportionmentForPediatricDentalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_ehbApportionmentForPediatricDental != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_ehbApportionmentForPediatricDental[0];
                }
                rowehbApportionmentForPediatricDentalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowehbApportionmentForPediatricDentalRow);
                return rowehbApportionmentForPediatricDentalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ehbApportionmentForPediatricDentalDataTable cln = ((ehbApportionmentForPediatricDentalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ehbApportionmentForPediatricDentalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbApportionmentForPediatricDentalRow NewehbApportionmentForPediatricDentalRow() {
                return ((ehbApportionmentForPediatricDentalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ehbApportionmentForPediatricDentalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ehbApportionmentForPediatricDentalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ehbApportionmentForPediatricDentalRowChanged != null)) {
                    this.ehbApportionmentForPediatricDentalRowChanged(this, new ehbApportionmentForPediatricDentalRowChangeEvent(((ehbApportionmentForPediatricDentalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ehbApportionmentForPediatricDentalRowChanging != null)) {
                    this.ehbApportionmentForPediatricDentalRowChanging(this, new ehbApportionmentForPediatricDentalRowChangeEvent(((ehbApportionmentForPediatricDentalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ehbApportionmentForPediatricDentalRowDeleted != null)) {
                    this.ehbApportionmentForPediatricDentalRowDeleted(this, new ehbApportionmentForPediatricDentalRowChangeEvent(((ehbApportionmentForPediatricDentalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ehbApportionmentForPediatricDentalRowDeleting != null)) {
                    this.ehbApportionmentForPediatricDentalRowDeleting(this, new ehbApportionmentForPediatricDentalRowChangeEvent(((ehbApportionmentForPediatricDentalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveehbApportionmentForPediatricDentalRow(ehbApportionmentForPediatricDentalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ehbApportionmentForPediatricDentalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class guaranteedVsEstimatedRateDataTable : global::System.Data.TypedTableBase<guaranteedVsEstimatedRateRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public guaranteedVsEstimatedRateDataTable() {
                this.TableName = "guaranteedVsEstimatedRate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal guaranteedVsEstimatedRateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected guaranteedVsEstimatedRateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public guaranteedVsEstimatedRateRow this[int index] {
                get {
                    return ((guaranteedVsEstimatedRateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event guaranteedVsEstimatedRateRowChangeEventHandler guaranteedVsEstimatedRateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event guaranteedVsEstimatedRateRowChangeEventHandler guaranteedVsEstimatedRateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event guaranteedVsEstimatedRateRowChangeEventHandler guaranteedVsEstimatedRateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event guaranteedVsEstimatedRateRowChangeEventHandler guaranteedVsEstimatedRateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddguaranteedVsEstimatedRateRow(guaranteedVsEstimatedRateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public guaranteedVsEstimatedRateRow AddguaranteedVsEstimatedRateRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_guaranteedVsEstimatedRate) {
                guaranteedVsEstimatedRateRow rowguaranteedVsEstimatedRateRow = ((guaranteedVsEstimatedRateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_guaranteedVsEstimatedRate != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_guaranteedVsEstimatedRate[0];
                }
                rowguaranteedVsEstimatedRateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowguaranteedVsEstimatedRateRow);
                return rowguaranteedVsEstimatedRateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                guaranteedVsEstimatedRateDataTable cln = ((guaranteedVsEstimatedRateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new guaranteedVsEstimatedRateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public guaranteedVsEstimatedRateRow NewguaranteedVsEstimatedRateRow() {
                return ((guaranteedVsEstimatedRateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new guaranteedVsEstimatedRateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(guaranteedVsEstimatedRateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.guaranteedVsEstimatedRateRowChanged != null)) {
                    this.guaranteedVsEstimatedRateRowChanged(this, new guaranteedVsEstimatedRateRowChangeEvent(((guaranteedVsEstimatedRateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.guaranteedVsEstimatedRateRowChanging != null)) {
                    this.guaranteedVsEstimatedRateRowChanging(this, new guaranteedVsEstimatedRateRowChangeEvent(((guaranteedVsEstimatedRateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.guaranteedVsEstimatedRateRowDeleted != null)) {
                    this.guaranteedVsEstimatedRateRowDeleted(this, new guaranteedVsEstimatedRateRowChangeEvent(((guaranteedVsEstimatedRateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.guaranteedVsEstimatedRateRowDeleting != null)) {
                    this.guaranteedVsEstimatedRateRowDeleting(this, new guaranteedVsEstimatedRateRowChangeEvent(((guaranteedVsEstimatedRateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveguaranteedVsEstimatedRateRow(guaranteedVsEstimatedRateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "guaranteedVsEstimatedRateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class maximumCoinsuranceForSpecialtyDrugsDataTable : global::System.Data.TypedTableBase<maximumCoinsuranceForSpecialtyDrugsRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maximumCoinsuranceForSpecialtyDrugsDataTable() {
                this.TableName = "maximumCoinsuranceForSpecialtyDrugs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal maximumCoinsuranceForSpecialtyDrugsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected maximumCoinsuranceForSpecialtyDrugsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maximumCoinsuranceForSpecialtyDrugsRow this[int index] {
                get {
                    return ((maximumCoinsuranceForSpecialtyDrugsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event maximumCoinsuranceForSpecialtyDrugsRowChangeEventHandler maximumCoinsuranceForSpecialtyDrugsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event maximumCoinsuranceForSpecialtyDrugsRowChangeEventHandler maximumCoinsuranceForSpecialtyDrugsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event maximumCoinsuranceForSpecialtyDrugsRowChangeEventHandler maximumCoinsuranceForSpecialtyDrugsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event maximumCoinsuranceForSpecialtyDrugsRowChangeEventHandler maximumCoinsuranceForSpecialtyDrugsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmaximumCoinsuranceForSpecialtyDrugsRow(maximumCoinsuranceForSpecialtyDrugsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maximumCoinsuranceForSpecialtyDrugsRow AddmaximumCoinsuranceForSpecialtyDrugsRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_maximumCoinsuranceForSpecialtyDrugs) {
                maximumCoinsuranceForSpecialtyDrugsRow rowmaximumCoinsuranceForSpecialtyDrugsRow = ((maximumCoinsuranceForSpecialtyDrugsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_maximumCoinsuranceForSpecialtyDrugs != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_maximumCoinsuranceForSpecialtyDrugs[0];
                }
                rowmaximumCoinsuranceForSpecialtyDrugsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmaximumCoinsuranceForSpecialtyDrugsRow);
                return rowmaximumCoinsuranceForSpecialtyDrugsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                maximumCoinsuranceForSpecialtyDrugsDataTable cln = ((maximumCoinsuranceForSpecialtyDrugsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new maximumCoinsuranceForSpecialtyDrugsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maximumCoinsuranceForSpecialtyDrugsRow NewmaximumCoinsuranceForSpecialtyDrugsRow() {
                return ((maximumCoinsuranceForSpecialtyDrugsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new maximumCoinsuranceForSpecialtyDrugsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(maximumCoinsuranceForSpecialtyDrugsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.maximumCoinsuranceForSpecialtyDrugsRowChanged != null)) {
                    this.maximumCoinsuranceForSpecialtyDrugsRowChanged(this, new maximumCoinsuranceForSpecialtyDrugsRowChangeEvent(((maximumCoinsuranceForSpecialtyDrugsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.maximumCoinsuranceForSpecialtyDrugsRowChanging != null)) {
                    this.maximumCoinsuranceForSpecialtyDrugsRowChanging(this, new maximumCoinsuranceForSpecialtyDrugsRowChangeEvent(((maximumCoinsuranceForSpecialtyDrugsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.maximumCoinsuranceForSpecialtyDrugsRowDeleted != null)) {
                    this.maximumCoinsuranceForSpecialtyDrugsRowDeleted(this, new maximumCoinsuranceForSpecialtyDrugsRowChangeEvent(((maximumCoinsuranceForSpecialtyDrugsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.maximumCoinsuranceForSpecialtyDrugsRowDeleting != null)) {
                    this.maximumCoinsuranceForSpecialtyDrugsRowDeleting(this, new maximumCoinsuranceForSpecialtyDrugsRowChangeEvent(((maximumCoinsuranceForSpecialtyDrugsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemaximumCoinsuranceForSpecialtyDrugsRow(maximumCoinsuranceForSpecialtyDrugsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "maximumCoinsuranceForSpecialtyDrugsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class maxNumDaysForChargingInpatientCopayDataTable : global::System.Data.TypedTableBase<maxNumDaysForChargingInpatientCopayRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maxNumDaysForChargingInpatientCopayDataTable() {
                this.TableName = "maxNumDaysForChargingInpatientCopay";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal maxNumDaysForChargingInpatientCopayDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected maxNumDaysForChargingInpatientCopayDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maxNumDaysForChargingInpatientCopayRow this[int index] {
                get {
                    return ((maxNumDaysForChargingInpatientCopayRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event maxNumDaysForChargingInpatientCopayRowChangeEventHandler maxNumDaysForChargingInpatientCopayRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event maxNumDaysForChargingInpatientCopayRowChangeEventHandler maxNumDaysForChargingInpatientCopayRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event maxNumDaysForChargingInpatientCopayRowChangeEventHandler maxNumDaysForChargingInpatientCopayRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event maxNumDaysForChargingInpatientCopayRowChangeEventHandler maxNumDaysForChargingInpatientCopayRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmaxNumDaysForChargingInpatientCopayRow(maxNumDaysForChargingInpatientCopayRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maxNumDaysForChargingInpatientCopayRow AddmaxNumDaysForChargingInpatientCopayRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_maxNumDaysForChargingInpatientCopay) {
                maxNumDaysForChargingInpatientCopayRow rowmaxNumDaysForChargingInpatientCopayRow = ((maxNumDaysForChargingInpatientCopayRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_maxNumDaysForChargingInpatientCopay != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_maxNumDaysForChargingInpatientCopay[0];
                }
                rowmaxNumDaysForChargingInpatientCopayRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmaxNumDaysForChargingInpatientCopayRow);
                return rowmaxNumDaysForChargingInpatientCopayRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                maxNumDaysForChargingInpatientCopayDataTable cln = ((maxNumDaysForChargingInpatientCopayDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new maxNumDaysForChargingInpatientCopayDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maxNumDaysForChargingInpatientCopayRow NewmaxNumDaysForChargingInpatientCopayRow() {
                return ((maxNumDaysForChargingInpatientCopayRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new maxNumDaysForChargingInpatientCopayRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(maxNumDaysForChargingInpatientCopayRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.maxNumDaysForChargingInpatientCopayRowChanged != null)) {
                    this.maxNumDaysForChargingInpatientCopayRowChanged(this, new maxNumDaysForChargingInpatientCopayRowChangeEvent(((maxNumDaysForChargingInpatientCopayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.maxNumDaysForChargingInpatientCopayRowChanging != null)) {
                    this.maxNumDaysForChargingInpatientCopayRowChanging(this, new maxNumDaysForChargingInpatientCopayRowChangeEvent(((maxNumDaysForChargingInpatientCopayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.maxNumDaysForChargingInpatientCopayRowDeleted != null)) {
                    this.maxNumDaysForChargingInpatientCopayRowDeleted(this, new maxNumDaysForChargingInpatientCopayRowChangeEvent(((maxNumDaysForChargingInpatientCopayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.maxNumDaysForChargingInpatientCopayRowDeleting != null)) {
                    this.maxNumDaysForChargingInpatientCopayRowDeleting(this, new maxNumDaysForChargingInpatientCopayRowChangeEvent(((maxNumDaysForChargingInpatientCopayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemaxNumDaysForChargingInpatientCopayRow(maxNumDaysForChargingInpatientCopayRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "maxNumDaysForChargingInpatientCopayDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable : global::System.Data.TypedTableBase<beginPrimaryCareCostSharingAfterSetNumberVisitsRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable() {
                this.TableName = "beginPrimaryCareCostSharingAfterSetNumberVisits";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareCostSharingAfterSetNumberVisitsRow this[int index] {
                get {
                    return ((beginPrimaryCareCostSharingAfterSetNumberVisitsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event beginPrimaryCareCostSharingAfterSetNumberVisitsRowChangeEventHandler beginPrimaryCareCostSharingAfterSetNumberVisitsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event beginPrimaryCareCostSharingAfterSetNumberVisitsRowChangeEventHandler beginPrimaryCareCostSharingAfterSetNumberVisitsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event beginPrimaryCareCostSharingAfterSetNumberVisitsRowChangeEventHandler beginPrimaryCareCostSharingAfterSetNumberVisitsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event beginPrimaryCareCostSharingAfterSetNumberVisitsRowChangeEventHandler beginPrimaryCareCostSharingAfterSetNumberVisitsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddbeginPrimaryCareCostSharingAfterSetNumberVisitsRow(beginPrimaryCareCostSharingAfterSetNumberVisitsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareCostSharingAfterSetNumberVisitsRow AddbeginPrimaryCareCostSharingAfterSetNumberVisitsRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits) {
                beginPrimaryCareCostSharingAfterSetNumberVisitsRow rowbeginPrimaryCareCostSharingAfterSetNumberVisitsRow = ((beginPrimaryCareCostSharingAfterSetNumberVisitsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits[0];
                }
                rowbeginPrimaryCareCostSharingAfterSetNumberVisitsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbeginPrimaryCareCostSharingAfterSetNumberVisitsRow);
                return rowbeginPrimaryCareCostSharingAfterSetNumberVisitsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable cln = ((beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareCostSharingAfterSetNumberVisitsRow NewbeginPrimaryCareCostSharingAfterSetNumberVisitsRow() {
                return ((beginPrimaryCareCostSharingAfterSetNumberVisitsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new beginPrimaryCareCostSharingAfterSetNumberVisitsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(beginPrimaryCareCostSharingAfterSetNumberVisitsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.beginPrimaryCareCostSharingAfterSetNumberVisitsRowChanged != null)) {
                    this.beginPrimaryCareCostSharingAfterSetNumberVisitsRowChanged(this, new beginPrimaryCareCostSharingAfterSetNumberVisitsRowChangeEvent(((beginPrimaryCareCostSharingAfterSetNumberVisitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.beginPrimaryCareCostSharingAfterSetNumberVisitsRowChanging != null)) {
                    this.beginPrimaryCareCostSharingAfterSetNumberVisitsRowChanging(this, new beginPrimaryCareCostSharingAfterSetNumberVisitsRowChangeEvent(((beginPrimaryCareCostSharingAfterSetNumberVisitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.beginPrimaryCareCostSharingAfterSetNumberVisitsRowDeleted != null)) {
                    this.beginPrimaryCareCostSharingAfterSetNumberVisitsRowDeleted(this, new beginPrimaryCareCostSharingAfterSetNumberVisitsRowChangeEvent(((beginPrimaryCareCostSharingAfterSetNumberVisitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.beginPrimaryCareCostSharingAfterSetNumberVisitsRowDeleting != null)) {
                    this.beginPrimaryCareCostSharingAfterSetNumberVisitsRowDeleting(this, new beginPrimaryCareCostSharingAfterSetNumberVisitsRowChangeEvent(((beginPrimaryCareCostSharingAfterSetNumberVisitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovebeginPrimaryCareCostSharingAfterSetNumberVisitsRow(beginPrimaryCareCostSharingAfterSetNumberVisitsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable : global::System.Data.TypedTableBase<beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable() {
                this.TableName = "beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow this[int index] {
                get {
                    return ((beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChangeEventHandler beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChangeEventHandler beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChangeEventHandler beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChangeEventHandler beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddbeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow(beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow AddbeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays) {
                beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow rowbeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow = ((beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays[0];
                }
                rowbeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow);
                return rowbeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable cln = ((beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow NewbeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow() {
                return ((beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChanged != null)) {
                    this.beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChanged(this, new beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChangeEvent(((beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChanging != null)) {
                    this.beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChanging(this, new beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChangeEvent(((beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowDeleted != null)) {
                    this.beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowDeleted(this, new beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChangeEvent(((beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowDeleting != null)) {
                    this.beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowDeleting(this, new beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChangeEvent(((beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow(beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class planEffectiveDateDataTable : global::System.Data.TypedTableBase<planEffectiveDateRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planEffectiveDateDataTable() {
                this.TableName = "planEffectiveDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planEffectiveDateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected planEffectiveDateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planEffectiveDateRow this[int index] {
                get {
                    return ((planEffectiveDateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planEffectiveDateRowChangeEventHandler planEffectiveDateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planEffectiveDateRowChangeEventHandler planEffectiveDateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planEffectiveDateRowChangeEventHandler planEffectiveDateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planEffectiveDateRowChangeEventHandler planEffectiveDateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddplanEffectiveDateRow(planEffectiveDateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planEffectiveDateRow AddplanEffectiveDateRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_planEffectiveDate) {
                planEffectiveDateRow rowplanEffectiveDateRow = ((planEffectiveDateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_planEffectiveDate != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_planEffectiveDate[0];
                }
                rowplanEffectiveDateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowplanEffectiveDateRow);
                return rowplanEffectiveDateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                planEffectiveDateDataTable cln = ((planEffectiveDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new planEffectiveDateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planEffectiveDateRow NewplanEffectiveDateRow() {
                return ((planEffectiveDateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new planEffectiveDateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(planEffectiveDateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.planEffectiveDateRowChanged != null)) {
                    this.planEffectiveDateRowChanged(this, new planEffectiveDateRowChangeEvent(((planEffectiveDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.planEffectiveDateRowChanging != null)) {
                    this.planEffectiveDateRowChanging(this, new planEffectiveDateRowChangeEvent(((planEffectiveDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.planEffectiveDateRowDeleted != null)) {
                    this.planEffectiveDateRowDeleted(this, new planEffectiveDateRowChangeEvent(((planEffectiveDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.planEffectiveDateRowDeleting != null)) {
                    this.planEffectiveDateRowDeleting(this, new planEffectiveDateRowChangeEvent(((planEffectiveDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveplanEffectiveDateRow(planEffectiveDateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "planEffectiveDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class planExpirationDateDataTable : global::System.Data.TypedTableBase<planExpirationDateRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planExpirationDateDataTable() {
                this.TableName = "planExpirationDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planExpirationDateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected planExpirationDateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planExpirationDateRow this[int index] {
                get {
                    return ((planExpirationDateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planExpirationDateRowChangeEventHandler planExpirationDateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planExpirationDateRowChangeEventHandler planExpirationDateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planExpirationDateRowChangeEventHandler planExpirationDateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planExpirationDateRowChangeEventHandler planExpirationDateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddplanExpirationDateRow(planExpirationDateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planExpirationDateRow AddplanExpirationDateRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_planExpirationDate) {
                planExpirationDateRow rowplanExpirationDateRow = ((planExpirationDateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_planExpirationDate != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_planExpirationDate[0];
                }
                rowplanExpirationDateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowplanExpirationDateRow);
                return rowplanExpirationDateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                planExpirationDateDataTable cln = ((planExpirationDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new planExpirationDateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planExpirationDateRow NewplanExpirationDateRow() {
                return ((planExpirationDateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new planExpirationDateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(planExpirationDateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.planExpirationDateRowChanged != null)) {
                    this.planExpirationDateRowChanged(this, new planExpirationDateRowChangeEvent(((planExpirationDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.planExpirationDateRowChanging != null)) {
                    this.planExpirationDateRowChanging(this, new planExpirationDateRowChangeEvent(((planExpirationDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.planExpirationDateRowDeleted != null)) {
                    this.planExpirationDateRowDeleted(this, new planExpirationDateRowChangeEvent(((planExpirationDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.planExpirationDateRowDeleting != null)) {
                    this.planExpirationDateRowDeleting(this, new planExpirationDateRowChangeEvent(((planExpirationDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveplanExpirationDateRow(planExpirationDateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "planExpirationDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class outOfCountryCoverageDataTable : global::System.Data.TypedTableBase<outOfCountryCoverageRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageDataTable() {
                this.TableName = "outOfCountryCoverage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfCountryCoverageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected outOfCountryCoverageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageRow this[int index] {
                get {
                    return ((outOfCountryCoverageRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfCountryCoverageRowChangeEventHandler outOfCountryCoverageRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfCountryCoverageRowChangeEventHandler outOfCountryCoverageRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfCountryCoverageRowChangeEventHandler outOfCountryCoverageRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfCountryCoverageRowChangeEventHandler outOfCountryCoverageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddoutOfCountryCoverageRow(outOfCountryCoverageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageRow AddoutOfCountryCoverageRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_outOfCountryCoverage) {
                outOfCountryCoverageRow rowoutOfCountryCoverageRow = ((outOfCountryCoverageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_outOfCountryCoverage != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_outOfCountryCoverage[0];
                }
                rowoutOfCountryCoverageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowoutOfCountryCoverageRow);
                return rowoutOfCountryCoverageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                outOfCountryCoverageDataTable cln = ((outOfCountryCoverageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new outOfCountryCoverageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageRow NewoutOfCountryCoverageRow() {
                return ((outOfCountryCoverageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new outOfCountryCoverageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(outOfCountryCoverageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.outOfCountryCoverageRowChanged != null)) {
                    this.outOfCountryCoverageRowChanged(this, new outOfCountryCoverageRowChangeEvent(((outOfCountryCoverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.outOfCountryCoverageRowChanging != null)) {
                    this.outOfCountryCoverageRowChanging(this, new outOfCountryCoverageRowChangeEvent(((outOfCountryCoverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.outOfCountryCoverageRowDeleted != null)) {
                    this.outOfCountryCoverageRowDeleted(this, new outOfCountryCoverageRowChangeEvent(((outOfCountryCoverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.outOfCountryCoverageRowDeleting != null)) {
                    this.outOfCountryCoverageRowDeleting(this, new outOfCountryCoverageRowChangeEvent(((outOfCountryCoverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveoutOfCountryCoverageRow(outOfCountryCoverageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "outOfCountryCoverageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class outOfCountryCoverageDescriptionDataTable : global::System.Data.TypedTableBase<outOfCountryCoverageDescriptionRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageDescriptionDataTable() {
                this.TableName = "outOfCountryCoverageDescription";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfCountryCoverageDescriptionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected outOfCountryCoverageDescriptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageDescriptionRow this[int index] {
                get {
                    return ((outOfCountryCoverageDescriptionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfCountryCoverageDescriptionRowChangeEventHandler outOfCountryCoverageDescriptionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfCountryCoverageDescriptionRowChangeEventHandler outOfCountryCoverageDescriptionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfCountryCoverageDescriptionRowChangeEventHandler outOfCountryCoverageDescriptionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfCountryCoverageDescriptionRowChangeEventHandler outOfCountryCoverageDescriptionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddoutOfCountryCoverageDescriptionRow(outOfCountryCoverageDescriptionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageDescriptionRow AddoutOfCountryCoverageDescriptionRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_outOfCountryCoverageDescription) {
                outOfCountryCoverageDescriptionRow rowoutOfCountryCoverageDescriptionRow = ((outOfCountryCoverageDescriptionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_outOfCountryCoverageDescription != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_outOfCountryCoverageDescription[0];
                }
                rowoutOfCountryCoverageDescriptionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowoutOfCountryCoverageDescriptionRow);
                return rowoutOfCountryCoverageDescriptionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                outOfCountryCoverageDescriptionDataTable cln = ((outOfCountryCoverageDescriptionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new outOfCountryCoverageDescriptionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageDescriptionRow NewoutOfCountryCoverageDescriptionRow() {
                return ((outOfCountryCoverageDescriptionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new outOfCountryCoverageDescriptionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(outOfCountryCoverageDescriptionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.outOfCountryCoverageDescriptionRowChanged != null)) {
                    this.outOfCountryCoverageDescriptionRowChanged(this, new outOfCountryCoverageDescriptionRowChangeEvent(((outOfCountryCoverageDescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.outOfCountryCoverageDescriptionRowChanging != null)) {
                    this.outOfCountryCoverageDescriptionRowChanging(this, new outOfCountryCoverageDescriptionRowChangeEvent(((outOfCountryCoverageDescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.outOfCountryCoverageDescriptionRowDeleted != null)) {
                    this.outOfCountryCoverageDescriptionRowDeleted(this, new outOfCountryCoverageDescriptionRowChangeEvent(((outOfCountryCoverageDescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.outOfCountryCoverageDescriptionRowDeleting != null)) {
                    this.outOfCountryCoverageDescriptionRowDeleting(this, new outOfCountryCoverageDescriptionRowChangeEvent(((outOfCountryCoverageDescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveoutOfCountryCoverageDescriptionRow(outOfCountryCoverageDescriptionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "outOfCountryCoverageDescriptionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class outOfServiceAreaCoverageDataTable : global::System.Data.TypedTableBase<outOfServiceAreaCoverageRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageDataTable() {
                this.TableName = "outOfServiceAreaCoverage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfServiceAreaCoverageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected outOfServiceAreaCoverageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageRow this[int index] {
                get {
                    return ((outOfServiceAreaCoverageRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfServiceAreaCoverageRowChangeEventHandler outOfServiceAreaCoverageRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfServiceAreaCoverageRowChangeEventHandler outOfServiceAreaCoverageRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfServiceAreaCoverageRowChangeEventHandler outOfServiceAreaCoverageRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfServiceAreaCoverageRowChangeEventHandler outOfServiceAreaCoverageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddoutOfServiceAreaCoverageRow(outOfServiceAreaCoverageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageRow AddoutOfServiceAreaCoverageRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_outOfServiceAreaCoverage) {
                outOfServiceAreaCoverageRow rowoutOfServiceAreaCoverageRow = ((outOfServiceAreaCoverageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_outOfServiceAreaCoverage != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_outOfServiceAreaCoverage[0];
                }
                rowoutOfServiceAreaCoverageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowoutOfServiceAreaCoverageRow);
                return rowoutOfServiceAreaCoverageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                outOfServiceAreaCoverageDataTable cln = ((outOfServiceAreaCoverageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new outOfServiceAreaCoverageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageRow NewoutOfServiceAreaCoverageRow() {
                return ((outOfServiceAreaCoverageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new outOfServiceAreaCoverageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(outOfServiceAreaCoverageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.outOfServiceAreaCoverageRowChanged != null)) {
                    this.outOfServiceAreaCoverageRowChanged(this, new outOfServiceAreaCoverageRowChangeEvent(((outOfServiceAreaCoverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.outOfServiceAreaCoverageRowChanging != null)) {
                    this.outOfServiceAreaCoverageRowChanging(this, new outOfServiceAreaCoverageRowChangeEvent(((outOfServiceAreaCoverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.outOfServiceAreaCoverageRowDeleted != null)) {
                    this.outOfServiceAreaCoverageRowDeleted(this, new outOfServiceAreaCoverageRowChangeEvent(((outOfServiceAreaCoverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.outOfServiceAreaCoverageRowDeleting != null)) {
                    this.outOfServiceAreaCoverageRowDeleting(this, new outOfServiceAreaCoverageRowChangeEvent(((outOfServiceAreaCoverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveoutOfServiceAreaCoverageRow(outOfServiceAreaCoverageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "outOfServiceAreaCoverageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class outOfServiceAreaCoverageDescriptionDataTable : global::System.Data.TypedTableBase<outOfServiceAreaCoverageDescriptionRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageDescriptionDataTable() {
                this.TableName = "outOfServiceAreaCoverageDescription";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfServiceAreaCoverageDescriptionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected outOfServiceAreaCoverageDescriptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageDescriptionRow this[int index] {
                get {
                    return ((outOfServiceAreaCoverageDescriptionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfServiceAreaCoverageDescriptionRowChangeEventHandler outOfServiceAreaCoverageDescriptionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfServiceAreaCoverageDescriptionRowChangeEventHandler outOfServiceAreaCoverageDescriptionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfServiceAreaCoverageDescriptionRowChangeEventHandler outOfServiceAreaCoverageDescriptionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfServiceAreaCoverageDescriptionRowChangeEventHandler outOfServiceAreaCoverageDescriptionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddoutOfServiceAreaCoverageDescriptionRow(outOfServiceAreaCoverageDescriptionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageDescriptionRow AddoutOfServiceAreaCoverageDescriptionRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_outOfServiceAreaCoverageDescription) {
                outOfServiceAreaCoverageDescriptionRow rowoutOfServiceAreaCoverageDescriptionRow = ((outOfServiceAreaCoverageDescriptionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_outOfServiceAreaCoverageDescription != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_outOfServiceAreaCoverageDescription[0];
                }
                rowoutOfServiceAreaCoverageDescriptionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowoutOfServiceAreaCoverageDescriptionRow);
                return rowoutOfServiceAreaCoverageDescriptionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                outOfServiceAreaCoverageDescriptionDataTable cln = ((outOfServiceAreaCoverageDescriptionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new outOfServiceAreaCoverageDescriptionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageDescriptionRow NewoutOfServiceAreaCoverageDescriptionRow() {
                return ((outOfServiceAreaCoverageDescriptionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new outOfServiceAreaCoverageDescriptionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(outOfServiceAreaCoverageDescriptionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.outOfServiceAreaCoverageDescriptionRowChanged != null)) {
                    this.outOfServiceAreaCoverageDescriptionRowChanged(this, new outOfServiceAreaCoverageDescriptionRowChangeEvent(((outOfServiceAreaCoverageDescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.outOfServiceAreaCoverageDescriptionRowChanging != null)) {
                    this.outOfServiceAreaCoverageDescriptionRowChanging(this, new outOfServiceAreaCoverageDescriptionRowChangeEvent(((outOfServiceAreaCoverageDescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.outOfServiceAreaCoverageDescriptionRowDeleted != null)) {
                    this.outOfServiceAreaCoverageDescriptionRowDeleted(this, new outOfServiceAreaCoverageDescriptionRowChangeEvent(((outOfServiceAreaCoverageDescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.outOfServiceAreaCoverageDescriptionRowDeleting != null)) {
                    this.outOfServiceAreaCoverageDescriptionRowDeleting(this, new outOfServiceAreaCoverageDescriptionRowChangeEvent(((outOfServiceAreaCoverageDescriptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveoutOfServiceAreaCoverageDescriptionRow(outOfServiceAreaCoverageDescriptionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "outOfServiceAreaCoverageDescriptionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class nationalNetworkDataTable : global::System.Data.TypedTableBase<nationalNetworkRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nationalNetworkDataTable() {
                this.TableName = "nationalNetwork";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal nationalNetworkDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected nationalNetworkDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nationalNetworkRow this[int index] {
                get {
                    return ((nationalNetworkRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event nationalNetworkRowChangeEventHandler nationalNetworkRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event nationalNetworkRowChangeEventHandler nationalNetworkRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event nationalNetworkRowChangeEventHandler nationalNetworkRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event nationalNetworkRowChangeEventHandler nationalNetworkRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddnationalNetworkRow(nationalNetworkRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nationalNetworkRow AddnationalNetworkRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_nationalNetwork) {
                nationalNetworkRow rownationalNetworkRow = ((nationalNetworkRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_nationalNetwork != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_nationalNetwork[0];
                }
                rownationalNetworkRow.ItemArray = columnValuesArray;
                this.Rows.Add(rownationalNetworkRow);
                return rownationalNetworkRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                nationalNetworkDataTable cln = ((nationalNetworkDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new nationalNetworkDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nationalNetworkRow NewnationalNetworkRow() {
                return ((nationalNetworkRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new nationalNetworkRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(nationalNetworkRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.nationalNetworkRowChanged != null)) {
                    this.nationalNetworkRowChanged(this, new nationalNetworkRowChangeEvent(((nationalNetworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.nationalNetworkRowChanging != null)) {
                    this.nationalNetworkRowChanging(this, new nationalNetworkRowChangeEvent(((nationalNetworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.nationalNetworkRowDeleted != null)) {
                    this.nationalNetworkRowDeleted(this, new nationalNetworkRowChangeEvent(((nationalNetworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.nationalNetworkRowDeleting != null)) {
                    this.nationalNetworkRowDeleting(this, new nationalNetworkRowChangeEvent(((nationalNetworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovenationalNetworkRow(nationalNetworkRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "nationalNetworkDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class summaryBenefitAndCoverageURLDataTable : global::System.Data.TypedTableBase<summaryBenefitAndCoverageURLRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public summaryBenefitAndCoverageURLDataTable() {
                this.TableName = "summaryBenefitAndCoverageURL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal summaryBenefitAndCoverageURLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected summaryBenefitAndCoverageURLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public summaryBenefitAndCoverageURLRow this[int index] {
                get {
                    return ((summaryBenefitAndCoverageURLRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event summaryBenefitAndCoverageURLRowChangeEventHandler summaryBenefitAndCoverageURLRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event summaryBenefitAndCoverageURLRowChangeEventHandler summaryBenefitAndCoverageURLRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event summaryBenefitAndCoverageURLRowChangeEventHandler summaryBenefitAndCoverageURLRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event summaryBenefitAndCoverageURLRowChangeEventHandler summaryBenefitAndCoverageURLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddsummaryBenefitAndCoverageURLRow(summaryBenefitAndCoverageURLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public summaryBenefitAndCoverageURLRow AddsummaryBenefitAndCoverageURLRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_summaryBenefitAndCoverageURL) {
                summaryBenefitAndCoverageURLRow rowsummaryBenefitAndCoverageURLRow = ((summaryBenefitAndCoverageURLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_summaryBenefitAndCoverageURL != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_summaryBenefitAndCoverageURL[0];
                }
                rowsummaryBenefitAndCoverageURLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsummaryBenefitAndCoverageURLRow);
                return rowsummaryBenefitAndCoverageURLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                summaryBenefitAndCoverageURLDataTable cln = ((summaryBenefitAndCoverageURLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new summaryBenefitAndCoverageURLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public summaryBenefitAndCoverageURLRow NewsummaryBenefitAndCoverageURLRow() {
                return ((summaryBenefitAndCoverageURLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new summaryBenefitAndCoverageURLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(summaryBenefitAndCoverageURLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.summaryBenefitAndCoverageURLRowChanged != null)) {
                    this.summaryBenefitAndCoverageURLRowChanged(this, new summaryBenefitAndCoverageURLRowChangeEvent(((summaryBenefitAndCoverageURLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.summaryBenefitAndCoverageURLRowChanging != null)) {
                    this.summaryBenefitAndCoverageURLRowChanging(this, new summaryBenefitAndCoverageURLRowChangeEvent(((summaryBenefitAndCoverageURLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.summaryBenefitAndCoverageURLRowDeleted != null)) {
                    this.summaryBenefitAndCoverageURLRowDeleted(this, new summaryBenefitAndCoverageURLRowChangeEvent(((summaryBenefitAndCoverageURLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.summaryBenefitAndCoverageURLRowDeleting != null)) {
                    this.summaryBenefitAndCoverageURLRowDeleting(this, new summaryBenefitAndCoverageURLRowChangeEvent(((summaryBenefitAndCoverageURLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovesummaryBenefitAndCoverageURLRow(summaryBenefitAndCoverageURLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "summaryBenefitAndCoverageURLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class enrollmentPaymentURLDataTable : global::System.Data.TypedTableBase<enrollmentPaymentURLRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public enrollmentPaymentURLDataTable() {
                this.TableName = "enrollmentPaymentURL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal enrollmentPaymentURLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected enrollmentPaymentURLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public enrollmentPaymentURLRow this[int index] {
                get {
                    return ((enrollmentPaymentURLRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event enrollmentPaymentURLRowChangeEventHandler enrollmentPaymentURLRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event enrollmentPaymentURLRowChangeEventHandler enrollmentPaymentURLRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event enrollmentPaymentURLRowChangeEventHandler enrollmentPaymentURLRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event enrollmentPaymentURLRowChangeEventHandler enrollmentPaymentURLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddenrollmentPaymentURLRow(enrollmentPaymentURLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public enrollmentPaymentURLRow AddenrollmentPaymentURLRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_enrollmentPaymentURL) {
                enrollmentPaymentURLRow rowenrollmentPaymentURLRow = ((enrollmentPaymentURLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_enrollmentPaymentURL != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_enrollmentPaymentURL[0];
                }
                rowenrollmentPaymentURLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowenrollmentPaymentURLRow);
                return rowenrollmentPaymentURLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                enrollmentPaymentURLDataTable cln = ((enrollmentPaymentURLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new enrollmentPaymentURLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public enrollmentPaymentURLRow NewenrollmentPaymentURLRow() {
                return ((enrollmentPaymentURLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new enrollmentPaymentURLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(enrollmentPaymentURLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.enrollmentPaymentURLRowChanged != null)) {
                    this.enrollmentPaymentURLRowChanged(this, new enrollmentPaymentURLRowChangeEvent(((enrollmentPaymentURLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.enrollmentPaymentURLRowChanging != null)) {
                    this.enrollmentPaymentURLRowChanging(this, new enrollmentPaymentURLRowChangeEvent(((enrollmentPaymentURLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.enrollmentPaymentURLRowDeleted != null)) {
                    this.enrollmentPaymentURLRowDeleted(this, new enrollmentPaymentURLRowChangeEvent(((enrollmentPaymentURLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.enrollmentPaymentURLRowDeleting != null)) {
                    this.enrollmentPaymentURLRowDeleting(this, new enrollmentPaymentURLRowChangeEvent(((enrollmentPaymentURLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveenrollmentPaymentURLRow(enrollmentPaymentURLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "enrollmentPaymentURLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class planBrochureDataTable : global::System.Data.TypedTableBase<planBrochureRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanAttributes_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planBrochureDataTable() {
                this.TableName = "planBrochure";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planBrochureDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected planBrochureDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planAttributes_IdColumn {
                get {
                    return this.columnplanAttributes_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planBrochureRow this[int index] {
                get {
                    return ((planBrochureRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planBrochureRowChangeEventHandler planBrochureRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planBrochureRowChangeEventHandler planBrochureRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planBrochureRowChangeEventHandler planBrochureRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planBrochureRowChangeEventHandler planBrochureRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddplanBrochureRow(planBrochureRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planBrochureRow AddplanBrochureRow(string cellValue, string cellLocation, planAttributesRow parentplanAttributesRowByplanAttributes_planBrochure) {
                planBrochureRow rowplanBrochureRow = ((planBrochureRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanAttributesRowByplanAttributes_planBrochure != null)) {
                    columnValuesArray[2] = parentplanAttributesRowByplanAttributes_planBrochure[0];
                }
                rowplanBrochureRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowplanBrochureRow);
                return rowplanBrochureRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                planBrochureDataTable cln = ((planBrochureDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new planBrochureDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanAttributes_Id = base.Columns["planAttributes_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanAttributes_Id = new global::System.Data.DataColumn("planAttributes_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanAttributes_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planBrochureRow NewplanBrochureRow() {
                return ((planBrochureRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new planBrochureRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(planBrochureRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.planBrochureRowChanged != null)) {
                    this.planBrochureRowChanged(this, new planBrochureRowChangeEvent(((planBrochureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.planBrochureRowChanging != null)) {
                    this.planBrochureRowChanging(this, new planBrochureRowChangeEvent(((planBrochureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.planBrochureRowDeleted != null)) {
                    this.planBrochureRowDeleted(this, new planBrochureRowChangeEvent(((planBrochureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.planBrochureRowDeleting != null)) {
                    this.planBrochureRowDeleting(this, new planBrochureRowChangeEvent(((planBrochureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveplanBrochureRow(planBrochureRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "planBrochureDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class costShareVariancesListDataTable : global::System.Data.TypedTableBase<costShareVariancesListRow> {
            
            private global::System.Data.DataColumn columncostShareVariancesList_Id;
            
            private global::System.Data.DataColumn columnplans_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVariancesListDataTable() {
                this.TableName = "costShareVariancesList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal costShareVariancesListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected costShareVariancesListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariancesList_IdColumn {
                get {
                    return this.columncostShareVariancesList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn plans_IdColumn {
                get {
                    return this.columnplans_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVariancesListRow this[int index] {
                get {
                    return ((costShareVariancesListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event costShareVariancesListRowChangeEventHandler costShareVariancesListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event costShareVariancesListRowChangeEventHandler costShareVariancesListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event costShareVariancesListRowChangeEventHandler costShareVariancesListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event costShareVariancesListRowChangeEventHandler costShareVariancesListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcostShareVariancesListRow(costShareVariancesListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVariancesListRow AddcostShareVariancesListRow(plansRow parentplansRowByplans_costShareVariancesList) {
                costShareVariancesListRow rowcostShareVariancesListRow = ((costShareVariancesListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentplansRowByplans_costShareVariancesList != null)) {
                    columnValuesArray[1] = parentplansRowByplans_costShareVariancesList[0];
                }
                rowcostShareVariancesListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcostShareVariancesListRow);
                return rowcostShareVariancesListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                costShareVariancesListDataTable cln = ((costShareVariancesListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new costShareVariancesListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncostShareVariancesList_Id = base.Columns["costShareVariancesList_Id"];
                this.columnplans_Id = base.Columns["plans_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncostShareVariancesList_Id = new global::System.Data.DataColumn("costShareVariancesList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariancesList_Id);
                this.columnplans_Id = new global::System.Data.DataColumn("plans_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplans_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncostShareVariancesList_Id}, true));
                this.columncostShareVariancesList_Id.AutoIncrement = true;
                this.columncostShareVariancesList_Id.AllowDBNull = false;
                this.columncostShareVariancesList_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVariancesListRow NewcostShareVariancesListRow() {
                return ((costShareVariancesListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new costShareVariancesListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(costShareVariancesListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.costShareVariancesListRowChanged != null)) {
                    this.costShareVariancesListRowChanged(this, new costShareVariancesListRowChangeEvent(((costShareVariancesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.costShareVariancesListRowChanging != null)) {
                    this.costShareVariancesListRowChanging(this, new costShareVariancesListRowChangeEvent(((costShareVariancesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.costShareVariancesListRowDeleted != null)) {
                    this.costShareVariancesListRowDeleted(this, new costShareVariancesListRowChangeEvent(((costShareVariancesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.costShareVariancesListRowDeleting != null)) {
                    this.costShareVariancesListRowDeleting(this, new costShareVariancesListRowChangeEvent(((costShareVariancesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecostShareVariancesListRow(costShareVariancesListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "costShareVariancesListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class costShareVarianceDataTable : global::System.Data.TypedTableBase<costShareVarianceRow> {
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            private global::System.Data.DataColumn columncostShareVariancesList_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceDataTable() {
                this.TableName = "costShareVariance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal costShareVarianceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected costShareVarianceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariancesList_IdColumn {
                get {
                    return this.columncostShareVariancesList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow this[int index] {
                get {
                    return ((costShareVarianceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event costShareVarianceRowChangeEventHandler costShareVarianceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event costShareVarianceRowChangeEventHandler costShareVarianceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event costShareVarianceRowChangeEventHandler costShareVarianceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event costShareVarianceRowChangeEventHandler costShareVarianceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcostShareVarianceRow(costShareVarianceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow AddcostShareVarianceRow(costShareVariancesListRow parentcostShareVariancesListRowBycostShareVariancesList_costShareVariance) {
                costShareVarianceRow rowcostShareVarianceRow = ((costShareVarianceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentcostShareVariancesListRowBycostShareVariancesList_costShareVariance != null)) {
                    columnValuesArray[1] = parentcostShareVariancesListRowBycostShareVariancesList_costShareVariance[0];
                }
                rowcostShareVarianceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcostShareVarianceRow);
                return rowcostShareVarianceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                costShareVarianceDataTable cln = ((costShareVarianceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new costShareVarianceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
                this.columncostShareVariancesList_Id = base.Columns["costShareVariancesList_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.columncostShareVariancesList_Id = new global::System.Data.DataColumn("costShareVariancesList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariancesList_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncostShareVariance_Id}, true));
                this.columncostShareVariance_Id.AutoIncrement = true;
                this.columncostShareVariance_Id.AllowDBNull = false;
                this.columncostShareVariance_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow NewcostShareVarianceRow() {
                return ((costShareVarianceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new costShareVarianceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(costShareVarianceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.costShareVarianceRowChanged != null)) {
                    this.costShareVarianceRowChanged(this, new costShareVarianceRowChangeEvent(((costShareVarianceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.costShareVarianceRowChanging != null)) {
                    this.costShareVarianceRowChanging(this, new costShareVarianceRowChangeEvent(((costShareVarianceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.costShareVarianceRowDeleted != null)) {
                    this.costShareVarianceRowDeleted(this, new costShareVarianceRowChangeEvent(((costShareVarianceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.costShareVarianceRowDeleting != null)) {
                    this.costShareVarianceRowDeleting(this, new costShareVarianceRowChangeEvent(((costShareVarianceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecostShareVarianceRow(costShareVarianceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "costShareVarianceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class planIdDataTable : global::System.Data.TypedTableBase<planIdRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planIdDataTable() {
                this.TableName = "planId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected planIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planIdRow this[int index] {
                get {
                    return ((planIdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planIdRowChangeEventHandler planIdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planIdRowChangeEventHandler planIdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planIdRowChangeEventHandler planIdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planIdRowChangeEventHandler planIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddplanIdRow(planIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planIdRow AddplanIdRow(string cellValue, string cellLocation, costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_planId) {
                planIdRow rowplanIdRow = ((planIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_planId != null)) {
                    columnValuesArray[2] = parentcostShareVarianceRowBycostShareVariance_planId[0];
                }
                rowplanIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowplanIdRow);
                return rowplanIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                planIdDataTable cln = ((planIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new planIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planIdRow NewplanIdRow() {
                return ((planIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new planIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(planIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.planIdRowChanged != null)) {
                    this.planIdRowChanged(this, new planIdRowChangeEvent(((planIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.planIdRowChanging != null)) {
                    this.planIdRowChanging(this, new planIdRowChangeEvent(((planIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.planIdRowDeleted != null)) {
                    this.planIdRowDeleted(this, new planIdRowChangeEvent(((planIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.planIdRowDeleting != null)) {
                    this.planIdRowDeleting(this, new planIdRowChangeEvent(((planIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveplanIdRow(planIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "planIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class csrVariationTypeDataTable : global::System.Data.TypedTableBase<csrVariationTypeRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public csrVariationTypeDataTable() {
                this.TableName = "csrVariationType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal csrVariationTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected csrVariationTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public csrVariationTypeRow this[int index] {
                get {
                    return ((csrVariationTypeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event csrVariationTypeRowChangeEventHandler csrVariationTypeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event csrVariationTypeRowChangeEventHandler csrVariationTypeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event csrVariationTypeRowChangeEventHandler csrVariationTypeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event csrVariationTypeRowChangeEventHandler csrVariationTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcsrVariationTypeRow(csrVariationTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public csrVariationTypeRow AddcsrVariationTypeRow(string cellValue, string cellLocation, costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_csrVariationType) {
                csrVariationTypeRow rowcsrVariationTypeRow = ((csrVariationTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_csrVariationType != null)) {
                    columnValuesArray[2] = parentcostShareVarianceRowBycostShareVariance_csrVariationType[0];
                }
                rowcsrVariationTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcsrVariationTypeRow);
                return rowcsrVariationTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                csrVariationTypeDataTable cln = ((csrVariationTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new csrVariationTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public csrVariationTypeRow NewcsrVariationTypeRow() {
                return ((csrVariationTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new csrVariationTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(csrVariationTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.csrVariationTypeRowChanged != null)) {
                    this.csrVariationTypeRowChanged(this, new csrVariationTypeRowChangeEvent(((csrVariationTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.csrVariationTypeRowChanging != null)) {
                    this.csrVariationTypeRowChanging(this, new csrVariationTypeRowChangeEvent(((csrVariationTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.csrVariationTypeRowDeleted != null)) {
                    this.csrVariationTypeRowDeleted(this, new csrVariationTypeRowChangeEvent(((csrVariationTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.csrVariationTypeRowDeleting != null)) {
                    this.csrVariationTypeRowDeleting(this, new csrVariationTypeRowChangeEvent(((csrVariationTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecsrVariationTypeRow(csrVariationTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "csrVariationTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class issuerActuarialValueDataTable : global::System.Data.TypedTableBase<issuerActuarialValueRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerActuarialValueDataTable() {
                this.TableName = "issuerActuarialValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal issuerActuarialValueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected issuerActuarialValueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerActuarialValueRow this[int index] {
                get {
                    return ((issuerActuarialValueRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event issuerActuarialValueRowChangeEventHandler issuerActuarialValueRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event issuerActuarialValueRowChangeEventHandler issuerActuarialValueRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event issuerActuarialValueRowChangeEventHandler issuerActuarialValueRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event issuerActuarialValueRowChangeEventHandler issuerActuarialValueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddissuerActuarialValueRow(issuerActuarialValueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerActuarialValueRow AddissuerActuarialValueRow(string cellValue, string cellLocation, costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_issuerActuarialValue) {
                issuerActuarialValueRow rowissuerActuarialValueRow = ((issuerActuarialValueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_issuerActuarialValue != null)) {
                    columnValuesArray[2] = parentcostShareVarianceRowBycostShareVariance_issuerActuarialValue[0];
                }
                rowissuerActuarialValueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowissuerActuarialValueRow);
                return rowissuerActuarialValueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                issuerActuarialValueDataTable cln = ((issuerActuarialValueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new issuerActuarialValueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerActuarialValueRow NewissuerActuarialValueRow() {
                return ((issuerActuarialValueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new issuerActuarialValueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(issuerActuarialValueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.issuerActuarialValueRowChanged != null)) {
                    this.issuerActuarialValueRowChanged(this, new issuerActuarialValueRowChangeEvent(((issuerActuarialValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.issuerActuarialValueRowChanging != null)) {
                    this.issuerActuarialValueRowChanging(this, new issuerActuarialValueRowChangeEvent(((issuerActuarialValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.issuerActuarialValueRowDeleted != null)) {
                    this.issuerActuarialValueRowDeleted(this, new issuerActuarialValueRowChangeEvent(((issuerActuarialValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.issuerActuarialValueRowDeleting != null)) {
                    this.issuerActuarialValueRowDeleting(this, new issuerActuarialValueRowChangeEvent(((issuerActuarialValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveissuerActuarialValueRow(issuerActuarialValueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "issuerActuarialValueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class avCalculatorOutputNumberDataTable : global::System.Data.TypedTableBase<avCalculatorOutputNumberRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public avCalculatorOutputNumberDataTable() {
                this.TableName = "avCalculatorOutputNumber";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal avCalculatorOutputNumberDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected avCalculatorOutputNumberDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public avCalculatorOutputNumberRow this[int index] {
                get {
                    return ((avCalculatorOutputNumberRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event avCalculatorOutputNumberRowChangeEventHandler avCalculatorOutputNumberRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event avCalculatorOutputNumberRowChangeEventHandler avCalculatorOutputNumberRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event avCalculatorOutputNumberRowChangeEventHandler avCalculatorOutputNumberRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event avCalculatorOutputNumberRowChangeEventHandler avCalculatorOutputNumberRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddavCalculatorOutputNumberRow(avCalculatorOutputNumberRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public avCalculatorOutputNumberRow AddavCalculatorOutputNumberRow(string cellValue, string cellLocation, costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_avCalculatorOutputNumber) {
                avCalculatorOutputNumberRow rowavCalculatorOutputNumberRow = ((avCalculatorOutputNumberRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_avCalculatorOutputNumber != null)) {
                    columnValuesArray[2] = parentcostShareVarianceRowBycostShareVariance_avCalculatorOutputNumber[0];
                }
                rowavCalculatorOutputNumberRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowavCalculatorOutputNumberRow);
                return rowavCalculatorOutputNumberRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                avCalculatorOutputNumberDataTable cln = ((avCalculatorOutputNumberDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new avCalculatorOutputNumberDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public avCalculatorOutputNumberRow NewavCalculatorOutputNumberRow() {
                return ((avCalculatorOutputNumberRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new avCalculatorOutputNumberRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(avCalculatorOutputNumberRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.avCalculatorOutputNumberRowChanged != null)) {
                    this.avCalculatorOutputNumberRowChanged(this, new avCalculatorOutputNumberRowChangeEvent(((avCalculatorOutputNumberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.avCalculatorOutputNumberRowChanging != null)) {
                    this.avCalculatorOutputNumberRowChanging(this, new avCalculatorOutputNumberRowChangeEvent(((avCalculatorOutputNumberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.avCalculatorOutputNumberRowDeleted != null)) {
                    this.avCalculatorOutputNumberRowDeleted(this, new avCalculatorOutputNumberRowChangeEvent(((avCalculatorOutputNumberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.avCalculatorOutputNumberRowDeleting != null)) {
                    this.avCalculatorOutputNumberRowDeleting(this, new avCalculatorOutputNumberRowChangeEvent(((avCalculatorOutputNumberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveavCalculatorOutputNumberRow(avCalculatorOutputNumberRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "avCalculatorOutputNumberDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class medicalAndDrugDeductiblesIntegratedDataTable : global::System.Data.TypedTableBase<medicalAndDrugDeductiblesIntegratedRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugDeductiblesIntegratedDataTable() {
                this.TableName = "medicalAndDrugDeductiblesIntegrated";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal medicalAndDrugDeductiblesIntegratedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected medicalAndDrugDeductiblesIntegratedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugDeductiblesIntegratedRow this[int index] {
                get {
                    return ((medicalAndDrugDeductiblesIntegratedRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event medicalAndDrugDeductiblesIntegratedRowChangeEventHandler medicalAndDrugDeductiblesIntegratedRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event medicalAndDrugDeductiblesIntegratedRowChangeEventHandler medicalAndDrugDeductiblesIntegratedRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event medicalAndDrugDeductiblesIntegratedRowChangeEventHandler medicalAndDrugDeductiblesIntegratedRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event medicalAndDrugDeductiblesIntegratedRowChangeEventHandler medicalAndDrugDeductiblesIntegratedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmedicalAndDrugDeductiblesIntegratedRow(medicalAndDrugDeductiblesIntegratedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugDeductiblesIntegratedRow AddmedicalAndDrugDeductiblesIntegratedRow(string cellValue, string cellLocation, costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_medicalAndDrugDeductiblesIntegrated) {
                medicalAndDrugDeductiblesIntegratedRow rowmedicalAndDrugDeductiblesIntegratedRow = ((medicalAndDrugDeductiblesIntegratedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_medicalAndDrugDeductiblesIntegrated != null)) {
                    columnValuesArray[2] = parentcostShareVarianceRowBycostShareVariance_medicalAndDrugDeductiblesIntegrated[0];
                }
                rowmedicalAndDrugDeductiblesIntegratedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmedicalAndDrugDeductiblesIntegratedRow);
                return rowmedicalAndDrugDeductiblesIntegratedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                medicalAndDrugDeductiblesIntegratedDataTable cln = ((medicalAndDrugDeductiblesIntegratedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new medicalAndDrugDeductiblesIntegratedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugDeductiblesIntegratedRow NewmedicalAndDrugDeductiblesIntegratedRow() {
                return ((medicalAndDrugDeductiblesIntegratedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new medicalAndDrugDeductiblesIntegratedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(medicalAndDrugDeductiblesIntegratedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.medicalAndDrugDeductiblesIntegratedRowChanged != null)) {
                    this.medicalAndDrugDeductiblesIntegratedRowChanged(this, new medicalAndDrugDeductiblesIntegratedRowChangeEvent(((medicalAndDrugDeductiblesIntegratedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.medicalAndDrugDeductiblesIntegratedRowChanging != null)) {
                    this.medicalAndDrugDeductiblesIntegratedRowChanging(this, new medicalAndDrugDeductiblesIntegratedRowChangeEvent(((medicalAndDrugDeductiblesIntegratedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.medicalAndDrugDeductiblesIntegratedRowDeleted != null)) {
                    this.medicalAndDrugDeductiblesIntegratedRowDeleted(this, new medicalAndDrugDeductiblesIntegratedRowChangeEvent(((medicalAndDrugDeductiblesIntegratedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.medicalAndDrugDeductiblesIntegratedRowDeleting != null)) {
                    this.medicalAndDrugDeductiblesIntegratedRowDeleting(this, new medicalAndDrugDeductiblesIntegratedRowChangeEvent(((medicalAndDrugDeductiblesIntegratedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemedicalAndDrugDeductiblesIntegratedRow(medicalAndDrugDeductiblesIntegratedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "medicalAndDrugDeductiblesIntegratedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class medicalAndDrugMaxOutOfPocketIntegratedDataTable : global::System.Data.TypedTableBase<medicalAndDrugMaxOutOfPocketIntegratedRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugMaxOutOfPocketIntegratedDataTable() {
                this.TableName = "medicalAndDrugMaxOutOfPocketIntegrated";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal medicalAndDrugMaxOutOfPocketIntegratedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected medicalAndDrugMaxOutOfPocketIntegratedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugMaxOutOfPocketIntegratedRow this[int index] {
                get {
                    return ((medicalAndDrugMaxOutOfPocketIntegratedRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event medicalAndDrugMaxOutOfPocketIntegratedRowChangeEventHandler medicalAndDrugMaxOutOfPocketIntegratedRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event medicalAndDrugMaxOutOfPocketIntegratedRowChangeEventHandler medicalAndDrugMaxOutOfPocketIntegratedRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event medicalAndDrugMaxOutOfPocketIntegratedRowChangeEventHandler medicalAndDrugMaxOutOfPocketIntegratedRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event medicalAndDrugMaxOutOfPocketIntegratedRowChangeEventHandler medicalAndDrugMaxOutOfPocketIntegratedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmedicalAndDrugMaxOutOfPocketIntegratedRow(medicalAndDrugMaxOutOfPocketIntegratedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugMaxOutOfPocketIntegratedRow AddmedicalAndDrugMaxOutOfPocketIntegratedRow(string cellValue, string cellLocation, costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_medicalAndDrugMaxOutOfPocketIntegrated) {
                medicalAndDrugMaxOutOfPocketIntegratedRow rowmedicalAndDrugMaxOutOfPocketIntegratedRow = ((medicalAndDrugMaxOutOfPocketIntegratedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_medicalAndDrugMaxOutOfPocketIntegrated != null)) {
                    columnValuesArray[2] = parentcostShareVarianceRowBycostShareVariance_medicalAndDrugMaxOutOfPocketIntegrated[0];
                }
                rowmedicalAndDrugMaxOutOfPocketIntegratedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmedicalAndDrugMaxOutOfPocketIntegratedRow);
                return rowmedicalAndDrugMaxOutOfPocketIntegratedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                medicalAndDrugMaxOutOfPocketIntegratedDataTable cln = ((medicalAndDrugMaxOutOfPocketIntegratedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new medicalAndDrugMaxOutOfPocketIntegratedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugMaxOutOfPocketIntegratedRow NewmedicalAndDrugMaxOutOfPocketIntegratedRow() {
                return ((medicalAndDrugMaxOutOfPocketIntegratedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new medicalAndDrugMaxOutOfPocketIntegratedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(medicalAndDrugMaxOutOfPocketIntegratedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.medicalAndDrugMaxOutOfPocketIntegratedRowChanged != null)) {
                    this.medicalAndDrugMaxOutOfPocketIntegratedRowChanged(this, new medicalAndDrugMaxOutOfPocketIntegratedRowChangeEvent(((medicalAndDrugMaxOutOfPocketIntegratedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.medicalAndDrugMaxOutOfPocketIntegratedRowChanging != null)) {
                    this.medicalAndDrugMaxOutOfPocketIntegratedRowChanging(this, new medicalAndDrugMaxOutOfPocketIntegratedRowChangeEvent(((medicalAndDrugMaxOutOfPocketIntegratedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.medicalAndDrugMaxOutOfPocketIntegratedRowDeleted != null)) {
                    this.medicalAndDrugMaxOutOfPocketIntegratedRowDeleted(this, new medicalAndDrugMaxOutOfPocketIntegratedRowChangeEvent(((medicalAndDrugMaxOutOfPocketIntegratedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.medicalAndDrugMaxOutOfPocketIntegratedRowDeleting != null)) {
                    this.medicalAndDrugMaxOutOfPocketIntegratedRowDeleting(this, new medicalAndDrugMaxOutOfPocketIntegratedRowChangeEvent(((medicalAndDrugMaxOutOfPocketIntegratedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemedicalAndDrugMaxOutOfPocketIntegratedRow(medicalAndDrugMaxOutOfPocketIntegratedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "medicalAndDrugMaxOutOfPocketIntegratedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class multipleProviderTiersDataTable : global::System.Data.TypedTableBase<multipleProviderTiersRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public multipleProviderTiersDataTable() {
                this.TableName = "multipleProviderTiers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal multipleProviderTiersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected multipleProviderTiersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public multipleProviderTiersRow this[int index] {
                get {
                    return ((multipleProviderTiersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event multipleProviderTiersRowChangeEventHandler multipleProviderTiersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event multipleProviderTiersRowChangeEventHandler multipleProviderTiersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event multipleProviderTiersRowChangeEventHandler multipleProviderTiersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event multipleProviderTiersRowChangeEventHandler multipleProviderTiersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmultipleProviderTiersRow(multipleProviderTiersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public multipleProviderTiersRow AddmultipleProviderTiersRow(string cellValue, string cellLocation, costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_multipleProviderTiers) {
                multipleProviderTiersRow rowmultipleProviderTiersRow = ((multipleProviderTiersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_multipleProviderTiers != null)) {
                    columnValuesArray[2] = parentcostShareVarianceRowBycostShareVariance_multipleProviderTiers[0];
                }
                rowmultipleProviderTiersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmultipleProviderTiersRow);
                return rowmultipleProviderTiersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                multipleProviderTiersDataTable cln = ((multipleProviderTiersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new multipleProviderTiersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public multipleProviderTiersRow NewmultipleProviderTiersRow() {
                return ((multipleProviderTiersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new multipleProviderTiersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(multipleProviderTiersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.multipleProviderTiersRowChanged != null)) {
                    this.multipleProviderTiersRowChanged(this, new multipleProviderTiersRowChangeEvent(((multipleProviderTiersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.multipleProviderTiersRowChanging != null)) {
                    this.multipleProviderTiersRowChanging(this, new multipleProviderTiersRowChangeEvent(((multipleProviderTiersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.multipleProviderTiersRowDeleted != null)) {
                    this.multipleProviderTiersRowDeleted(this, new multipleProviderTiersRowChangeEvent(((multipleProviderTiersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.multipleProviderTiersRowDeleting != null)) {
                    this.multipleProviderTiersRowDeleting(this, new multipleProviderTiersRowChangeEvent(((multipleProviderTiersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemultipleProviderTiersRow(multipleProviderTiersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "multipleProviderTiersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class firstTierUtilizationDataTable : global::System.Data.TypedTableBase<firstTierUtilizationRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public firstTierUtilizationDataTable() {
                this.TableName = "firstTierUtilization";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal firstTierUtilizationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected firstTierUtilizationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public firstTierUtilizationRow this[int index] {
                get {
                    return ((firstTierUtilizationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event firstTierUtilizationRowChangeEventHandler firstTierUtilizationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event firstTierUtilizationRowChangeEventHandler firstTierUtilizationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event firstTierUtilizationRowChangeEventHandler firstTierUtilizationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event firstTierUtilizationRowChangeEventHandler firstTierUtilizationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddfirstTierUtilizationRow(firstTierUtilizationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public firstTierUtilizationRow AddfirstTierUtilizationRow(string cellValue, string cellLocation, costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_firstTierUtilization) {
                firstTierUtilizationRow rowfirstTierUtilizationRow = ((firstTierUtilizationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_firstTierUtilization != null)) {
                    columnValuesArray[2] = parentcostShareVarianceRowBycostShareVariance_firstTierUtilization[0];
                }
                rowfirstTierUtilizationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfirstTierUtilizationRow);
                return rowfirstTierUtilizationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                firstTierUtilizationDataTable cln = ((firstTierUtilizationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new firstTierUtilizationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public firstTierUtilizationRow NewfirstTierUtilizationRow() {
                return ((firstTierUtilizationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new firstTierUtilizationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(firstTierUtilizationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.firstTierUtilizationRowChanged != null)) {
                    this.firstTierUtilizationRowChanged(this, new firstTierUtilizationRowChangeEvent(((firstTierUtilizationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.firstTierUtilizationRowChanging != null)) {
                    this.firstTierUtilizationRowChanging(this, new firstTierUtilizationRowChangeEvent(((firstTierUtilizationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.firstTierUtilizationRowDeleted != null)) {
                    this.firstTierUtilizationRowDeleted(this, new firstTierUtilizationRowChangeEvent(((firstTierUtilizationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.firstTierUtilizationRowDeleting != null)) {
                    this.firstTierUtilizationRowDeleting(this, new firstTierUtilizationRowChangeEvent(((firstTierUtilizationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovefirstTierUtilizationRow(firstTierUtilizationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "firstTierUtilizationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class secondTierUtilizationDataTable : global::System.Data.TypedTableBase<secondTierUtilizationRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public secondTierUtilizationDataTable() {
                this.TableName = "secondTierUtilization";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal secondTierUtilizationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected secondTierUtilizationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public secondTierUtilizationRow this[int index] {
                get {
                    return ((secondTierUtilizationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event secondTierUtilizationRowChangeEventHandler secondTierUtilizationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event secondTierUtilizationRowChangeEventHandler secondTierUtilizationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event secondTierUtilizationRowChangeEventHandler secondTierUtilizationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event secondTierUtilizationRowChangeEventHandler secondTierUtilizationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddsecondTierUtilizationRow(secondTierUtilizationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public secondTierUtilizationRow AddsecondTierUtilizationRow(string cellValue, string cellLocation, costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_secondTierUtilization) {
                secondTierUtilizationRow rowsecondTierUtilizationRow = ((secondTierUtilizationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_secondTierUtilization != null)) {
                    columnValuesArray[2] = parentcostShareVarianceRowBycostShareVariance_secondTierUtilization[0];
                }
                rowsecondTierUtilizationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsecondTierUtilizationRow);
                return rowsecondTierUtilizationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                secondTierUtilizationDataTable cln = ((secondTierUtilizationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new secondTierUtilizationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public secondTierUtilizationRow NewsecondTierUtilizationRow() {
                return ((secondTierUtilizationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new secondTierUtilizationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(secondTierUtilizationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.secondTierUtilizationRowChanged != null)) {
                    this.secondTierUtilizationRowChanged(this, new secondTierUtilizationRowChangeEvent(((secondTierUtilizationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.secondTierUtilizationRowChanging != null)) {
                    this.secondTierUtilizationRowChanging(this, new secondTierUtilizationRowChangeEvent(((secondTierUtilizationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.secondTierUtilizationRowDeleted != null)) {
                    this.secondTierUtilizationRowDeleted(this, new secondTierUtilizationRowChangeEvent(((secondTierUtilizationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.secondTierUtilizationRowDeleting != null)) {
                    this.secondTierUtilizationRowDeleting(this, new secondTierUtilizationRowChangeEvent(((secondTierUtilizationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovesecondTierUtilizationRow(secondTierUtilizationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "secondTierUtilizationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sbcDataTable : global::System.Data.TypedTableBase<sbcRow> {
            
            private global::System.Data.DataColumn columnsbc_Id;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcDataTable() {
                this.TableName = "sbc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal sbcDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected sbcDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sbc_IdColumn {
                get {
                    return this.columnsbc_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow this[int index] {
                get {
                    return ((sbcRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sbcRowChangeEventHandler sbcRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sbcRowChangeEventHandler sbcRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sbcRowChangeEventHandler sbcRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event sbcRowChangeEventHandler sbcRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddsbcRow(sbcRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow AddsbcRow(costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_sbc) {
                sbcRow rowsbcRow = ((sbcRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_sbc != null)) {
                    columnValuesArray[1] = parentcostShareVarianceRowBycostShareVariance_sbc[0];
                }
                rowsbcRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsbcRow);
                return rowsbcRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                sbcDataTable cln = ((sbcDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sbcDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnsbc_Id = base.Columns["sbc_Id"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnsbc_Id = new global::System.Data.DataColumn("sbc_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnsbc_Id);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnsbc_Id}, true));
                this.columnsbc_Id.AutoIncrement = true;
                this.columnsbc_Id.AllowDBNull = false;
                this.columnsbc_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow NewsbcRow() {
                return ((sbcRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sbcRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(sbcRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sbcRowChanged != null)) {
                    this.sbcRowChanged(this, new sbcRowChangeEvent(((sbcRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sbcRowChanging != null)) {
                    this.sbcRowChanging(this, new sbcRowChangeEvent(((sbcRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sbcRowDeleted != null)) {
                    this.sbcRowDeleted(this, new sbcRowChangeEvent(((sbcRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sbcRowDeleting != null)) {
                    this.sbcRowDeleting(this, new sbcRowChangeEvent(((sbcRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovesbcRow(sbcRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sbcDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class havingBabyDeductibleDataTable : global::System.Data.TypedTableBase<havingBabyDeductibleRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnsbc_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyDeductibleDataTable() {
                this.TableName = "havingBabyDeductible";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingBabyDeductibleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected havingBabyDeductibleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sbc_IdColumn {
                get {
                    return this.columnsbc_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyDeductibleRow this[int index] {
                get {
                    return ((havingBabyDeductibleRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyDeductibleRowChangeEventHandler havingBabyDeductibleRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyDeductibleRowChangeEventHandler havingBabyDeductibleRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyDeductibleRowChangeEventHandler havingBabyDeductibleRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyDeductibleRowChangeEventHandler havingBabyDeductibleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddhavingBabyDeductibleRow(havingBabyDeductibleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyDeductibleRow AddhavingBabyDeductibleRow(string cellValue, string cellLocation, sbcRow parentsbcRowBysbc_havingBabyDeductible) {
                havingBabyDeductibleRow rowhavingBabyDeductibleRow = ((havingBabyDeductibleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentsbcRowBysbc_havingBabyDeductible != null)) {
                    columnValuesArray[2] = parentsbcRowBysbc_havingBabyDeductible[0];
                }
                rowhavingBabyDeductibleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhavingBabyDeductibleRow);
                return rowhavingBabyDeductibleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                havingBabyDeductibleDataTable cln = ((havingBabyDeductibleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new havingBabyDeductibleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnsbc_Id = base.Columns["sbc_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnsbc_Id = new global::System.Data.DataColumn("sbc_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnsbc_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyDeductibleRow NewhavingBabyDeductibleRow() {
                return ((havingBabyDeductibleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new havingBabyDeductibleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(havingBabyDeductibleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.havingBabyDeductibleRowChanged != null)) {
                    this.havingBabyDeductibleRowChanged(this, new havingBabyDeductibleRowChangeEvent(((havingBabyDeductibleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.havingBabyDeductibleRowChanging != null)) {
                    this.havingBabyDeductibleRowChanging(this, new havingBabyDeductibleRowChangeEvent(((havingBabyDeductibleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.havingBabyDeductibleRowDeleted != null)) {
                    this.havingBabyDeductibleRowDeleted(this, new havingBabyDeductibleRowChangeEvent(((havingBabyDeductibleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.havingBabyDeductibleRowDeleting != null)) {
                    this.havingBabyDeductibleRowDeleting(this, new havingBabyDeductibleRowChangeEvent(((havingBabyDeductibleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovehavingBabyDeductibleRow(havingBabyDeductibleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "havingBabyDeductibleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class havingBabyCoPaymentDataTable : global::System.Data.TypedTableBase<havingBabyCoPaymentRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnsbc_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoPaymentDataTable() {
                this.TableName = "havingBabyCoPayment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingBabyCoPaymentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected havingBabyCoPaymentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sbc_IdColumn {
                get {
                    return this.columnsbc_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoPaymentRow this[int index] {
                get {
                    return ((havingBabyCoPaymentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyCoPaymentRowChangeEventHandler havingBabyCoPaymentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyCoPaymentRowChangeEventHandler havingBabyCoPaymentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyCoPaymentRowChangeEventHandler havingBabyCoPaymentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyCoPaymentRowChangeEventHandler havingBabyCoPaymentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddhavingBabyCoPaymentRow(havingBabyCoPaymentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoPaymentRow AddhavingBabyCoPaymentRow(string cellValue, string cellLocation, sbcRow parentsbcRowBysbc_havingBabyCoPayment) {
                havingBabyCoPaymentRow rowhavingBabyCoPaymentRow = ((havingBabyCoPaymentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentsbcRowBysbc_havingBabyCoPayment != null)) {
                    columnValuesArray[2] = parentsbcRowBysbc_havingBabyCoPayment[0];
                }
                rowhavingBabyCoPaymentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhavingBabyCoPaymentRow);
                return rowhavingBabyCoPaymentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                havingBabyCoPaymentDataTable cln = ((havingBabyCoPaymentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new havingBabyCoPaymentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnsbc_Id = base.Columns["sbc_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnsbc_Id = new global::System.Data.DataColumn("sbc_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnsbc_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoPaymentRow NewhavingBabyCoPaymentRow() {
                return ((havingBabyCoPaymentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new havingBabyCoPaymentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(havingBabyCoPaymentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.havingBabyCoPaymentRowChanged != null)) {
                    this.havingBabyCoPaymentRowChanged(this, new havingBabyCoPaymentRowChangeEvent(((havingBabyCoPaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.havingBabyCoPaymentRowChanging != null)) {
                    this.havingBabyCoPaymentRowChanging(this, new havingBabyCoPaymentRowChangeEvent(((havingBabyCoPaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.havingBabyCoPaymentRowDeleted != null)) {
                    this.havingBabyCoPaymentRowDeleted(this, new havingBabyCoPaymentRowChangeEvent(((havingBabyCoPaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.havingBabyCoPaymentRowDeleting != null)) {
                    this.havingBabyCoPaymentRowDeleting(this, new havingBabyCoPaymentRowChangeEvent(((havingBabyCoPaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovehavingBabyCoPaymentRow(havingBabyCoPaymentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "havingBabyCoPaymentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class havingBabyCoInsuranceDataTable : global::System.Data.TypedTableBase<havingBabyCoInsuranceRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnsbc_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoInsuranceDataTable() {
                this.TableName = "havingBabyCoInsurance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingBabyCoInsuranceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected havingBabyCoInsuranceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sbc_IdColumn {
                get {
                    return this.columnsbc_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoInsuranceRow this[int index] {
                get {
                    return ((havingBabyCoInsuranceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyCoInsuranceRowChangeEventHandler havingBabyCoInsuranceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyCoInsuranceRowChangeEventHandler havingBabyCoInsuranceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyCoInsuranceRowChangeEventHandler havingBabyCoInsuranceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyCoInsuranceRowChangeEventHandler havingBabyCoInsuranceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddhavingBabyCoInsuranceRow(havingBabyCoInsuranceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoInsuranceRow AddhavingBabyCoInsuranceRow(string cellValue, string cellLocation, sbcRow parentsbcRowBysbc_havingBabyCoInsurance) {
                havingBabyCoInsuranceRow rowhavingBabyCoInsuranceRow = ((havingBabyCoInsuranceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentsbcRowBysbc_havingBabyCoInsurance != null)) {
                    columnValuesArray[2] = parentsbcRowBysbc_havingBabyCoInsurance[0];
                }
                rowhavingBabyCoInsuranceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhavingBabyCoInsuranceRow);
                return rowhavingBabyCoInsuranceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                havingBabyCoInsuranceDataTable cln = ((havingBabyCoInsuranceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new havingBabyCoInsuranceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnsbc_Id = base.Columns["sbc_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnsbc_Id = new global::System.Data.DataColumn("sbc_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnsbc_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoInsuranceRow NewhavingBabyCoInsuranceRow() {
                return ((havingBabyCoInsuranceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new havingBabyCoInsuranceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(havingBabyCoInsuranceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.havingBabyCoInsuranceRowChanged != null)) {
                    this.havingBabyCoInsuranceRowChanged(this, new havingBabyCoInsuranceRowChangeEvent(((havingBabyCoInsuranceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.havingBabyCoInsuranceRowChanging != null)) {
                    this.havingBabyCoInsuranceRowChanging(this, new havingBabyCoInsuranceRowChangeEvent(((havingBabyCoInsuranceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.havingBabyCoInsuranceRowDeleted != null)) {
                    this.havingBabyCoInsuranceRowDeleted(this, new havingBabyCoInsuranceRowChangeEvent(((havingBabyCoInsuranceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.havingBabyCoInsuranceRowDeleting != null)) {
                    this.havingBabyCoInsuranceRowDeleting(this, new havingBabyCoInsuranceRowChangeEvent(((havingBabyCoInsuranceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovehavingBabyCoInsuranceRow(havingBabyCoInsuranceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "havingBabyCoInsuranceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class havingBabyLimitDataTable : global::System.Data.TypedTableBase<havingBabyLimitRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnsbc_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyLimitDataTable() {
                this.TableName = "havingBabyLimit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingBabyLimitDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected havingBabyLimitDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sbc_IdColumn {
                get {
                    return this.columnsbc_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyLimitRow this[int index] {
                get {
                    return ((havingBabyLimitRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyLimitRowChangeEventHandler havingBabyLimitRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyLimitRowChangeEventHandler havingBabyLimitRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyLimitRowChangeEventHandler havingBabyLimitRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingBabyLimitRowChangeEventHandler havingBabyLimitRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddhavingBabyLimitRow(havingBabyLimitRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyLimitRow AddhavingBabyLimitRow(string cellValue, string cellLocation, sbcRow parentsbcRowBysbc_havingBabyLimit) {
                havingBabyLimitRow rowhavingBabyLimitRow = ((havingBabyLimitRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentsbcRowBysbc_havingBabyLimit != null)) {
                    columnValuesArray[2] = parentsbcRowBysbc_havingBabyLimit[0];
                }
                rowhavingBabyLimitRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhavingBabyLimitRow);
                return rowhavingBabyLimitRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                havingBabyLimitDataTable cln = ((havingBabyLimitDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new havingBabyLimitDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnsbc_Id = base.Columns["sbc_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnsbc_Id = new global::System.Data.DataColumn("sbc_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnsbc_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyLimitRow NewhavingBabyLimitRow() {
                return ((havingBabyLimitRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new havingBabyLimitRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(havingBabyLimitRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.havingBabyLimitRowChanged != null)) {
                    this.havingBabyLimitRowChanged(this, new havingBabyLimitRowChangeEvent(((havingBabyLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.havingBabyLimitRowChanging != null)) {
                    this.havingBabyLimitRowChanging(this, new havingBabyLimitRowChangeEvent(((havingBabyLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.havingBabyLimitRowDeleted != null)) {
                    this.havingBabyLimitRowDeleted(this, new havingBabyLimitRowChangeEvent(((havingBabyLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.havingBabyLimitRowDeleting != null)) {
                    this.havingBabyLimitRowDeleting(this, new havingBabyLimitRowChangeEvent(((havingBabyLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovehavingBabyLimitRow(havingBabyLimitRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "havingBabyLimitDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class havingDiabetesDeductibleDataTable : global::System.Data.TypedTableBase<havingDiabetesDeductibleRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnsbc_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesDeductibleDataTable() {
                this.TableName = "havingDiabetesDeductible";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingDiabetesDeductibleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected havingDiabetesDeductibleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sbc_IdColumn {
                get {
                    return this.columnsbc_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesDeductibleRow this[int index] {
                get {
                    return ((havingDiabetesDeductibleRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesDeductibleRowChangeEventHandler havingDiabetesDeductibleRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesDeductibleRowChangeEventHandler havingDiabetesDeductibleRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesDeductibleRowChangeEventHandler havingDiabetesDeductibleRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesDeductibleRowChangeEventHandler havingDiabetesDeductibleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddhavingDiabetesDeductibleRow(havingDiabetesDeductibleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesDeductibleRow AddhavingDiabetesDeductibleRow(string cellValue, string cellLocation, sbcRow parentsbcRowBysbc_havingDiabetesDeductible) {
                havingDiabetesDeductibleRow rowhavingDiabetesDeductibleRow = ((havingDiabetesDeductibleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentsbcRowBysbc_havingDiabetesDeductible != null)) {
                    columnValuesArray[2] = parentsbcRowBysbc_havingDiabetesDeductible[0];
                }
                rowhavingDiabetesDeductibleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhavingDiabetesDeductibleRow);
                return rowhavingDiabetesDeductibleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                havingDiabetesDeductibleDataTable cln = ((havingDiabetesDeductibleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new havingDiabetesDeductibleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnsbc_Id = base.Columns["sbc_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnsbc_Id = new global::System.Data.DataColumn("sbc_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnsbc_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesDeductibleRow NewhavingDiabetesDeductibleRow() {
                return ((havingDiabetesDeductibleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new havingDiabetesDeductibleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(havingDiabetesDeductibleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.havingDiabetesDeductibleRowChanged != null)) {
                    this.havingDiabetesDeductibleRowChanged(this, new havingDiabetesDeductibleRowChangeEvent(((havingDiabetesDeductibleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.havingDiabetesDeductibleRowChanging != null)) {
                    this.havingDiabetesDeductibleRowChanging(this, new havingDiabetesDeductibleRowChangeEvent(((havingDiabetesDeductibleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.havingDiabetesDeductibleRowDeleted != null)) {
                    this.havingDiabetesDeductibleRowDeleted(this, new havingDiabetesDeductibleRowChangeEvent(((havingDiabetesDeductibleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.havingDiabetesDeductibleRowDeleting != null)) {
                    this.havingDiabetesDeductibleRowDeleting(this, new havingDiabetesDeductibleRowChangeEvent(((havingDiabetesDeductibleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovehavingDiabetesDeductibleRow(havingDiabetesDeductibleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "havingDiabetesDeductibleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class havingDiabetesCopayDataTable : global::System.Data.TypedTableBase<havingDiabetesCopayRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnsbc_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCopayDataTable() {
                this.TableName = "havingDiabetesCopay";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingDiabetesCopayDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected havingDiabetesCopayDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sbc_IdColumn {
                get {
                    return this.columnsbc_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCopayRow this[int index] {
                get {
                    return ((havingDiabetesCopayRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesCopayRowChangeEventHandler havingDiabetesCopayRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesCopayRowChangeEventHandler havingDiabetesCopayRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesCopayRowChangeEventHandler havingDiabetesCopayRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesCopayRowChangeEventHandler havingDiabetesCopayRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddhavingDiabetesCopayRow(havingDiabetesCopayRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCopayRow AddhavingDiabetesCopayRow(string cellValue, string cellLocation, sbcRow parentsbcRowBysbc_havingDiabetesCopay) {
                havingDiabetesCopayRow rowhavingDiabetesCopayRow = ((havingDiabetesCopayRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentsbcRowBysbc_havingDiabetesCopay != null)) {
                    columnValuesArray[2] = parentsbcRowBysbc_havingDiabetesCopay[0];
                }
                rowhavingDiabetesCopayRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhavingDiabetesCopayRow);
                return rowhavingDiabetesCopayRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                havingDiabetesCopayDataTable cln = ((havingDiabetesCopayDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new havingDiabetesCopayDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnsbc_Id = base.Columns["sbc_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnsbc_Id = new global::System.Data.DataColumn("sbc_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnsbc_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCopayRow NewhavingDiabetesCopayRow() {
                return ((havingDiabetesCopayRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new havingDiabetesCopayRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(havingDiabetesCopayRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.havingDiabetesCopayRowChanged != null)) {
                    this.havingDiabetesCopayRowChanged(this, new havingDiabetesCopayRowChangeEvent(((havingDiabetesCopayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.havingDiabetesCopayRowChanging != null)) {
                    this.havingDiabetesCopayRowChanging(this, new havingDiabetesCopayRowChangeEvent(((havingDiabetesCopayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.havingDiabetesCopayRowDeleted != null)) {
                    this.havingDiabetesCopayRowDeleted(this, new havingDiabetesCopayRowChangeEvent(((havingDiabetesCopayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.havingDiabetesCopayRowDeleting != null)) {
                    this.havingDiabetesCopayRowDeleting(this, new havingDiabetesCopayRowChangeEvent(((havingDiabetesCopayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovehavingDiabetesCopayRow(havingDiabetesCopayRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "havingDiabetesCopayDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class havingDiabetesCoInsuranceDataTable : global::System.Data.TypedTableBase<havingDiabetesCoInsuranceRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnsbc_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCoInsuranceDataTable() {
                this.TableName = "havingDiabetesCoInsurance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingDiabetesCoInsuranceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected havingDiabetesCoInsuranceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sbc_IdColumn {
                get {
                    return this.columnsbc_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCoInsuranceRow this[int index] {
                get {
                    return ((havingDiabetesCoInsuranceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesCoInsuranceRowChangeEventHandler havingDiabetesCoInsuranceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesCoInsuranceRowChangeEventHandler havingDiabetesCoInsuranceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesCoInsuranceRowChangeEventHandler havingDiabetesCoInsuranceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesCoInsuranceRowChangeEventHandler havingDiabetesCoInsuranceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddhavingDiabetesCoInsuranceRow(havingDiabetesCoInsuranceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCoInsuranceRow AddhavingDiabetesCoInsuranceRow(string cellValue, string cellLocation, sbcRow parentsbcRowBysbc_havingDiabetesCoInsurance) {
                havingDiabetesCoInsuranceRow rowhavingDiabetesCoInsuranceRow = ((havingDiabetesCoInsuranceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentsbcRowBysbc_havingDiabetesCoInsurance != null)) {
                    columnValuesArray[2] = parentsbcRowBysbc_havingDiabetesCoInsurance[0];
                }
                rowhavingDiabetesCoInsuranceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhavingDiabetesCoInsuranceRow);
                return rowhavingDiabetesCoInsuranceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                havingDiabetesCoInsuranceDataTable cln = ((havingDiabetesCoInsuranceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new havingDiabetesCoInsuranceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnsbc_Id = base.Columns["sbc_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnsbc_Id = new global::System.Data.DataColumn("sbc_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnsbc_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCoInsuranceRow NewhavingDiabetesCoInsuranceRow() {
                return ((havingDiabetesCoInsuranceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new havingDiabetesCoInsuranceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(havingDiabetesCoInsuranceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.havingDiabetesCoInsuranceRowChanged != null)) {
                    this.havingDiabetesCoInsuranceRowChanged(this, new havingDiabetesCoInsuranceRowChangeEvent(((havingDiabetesCoInsuranceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.havingDiabetesCoInsuranceRowChanging != null)) {
                    this.havingDiabetesCoInsuranceRowChanging(this, new havingDiabetesCoInsuranceRowChangeEvent(((havingDiabetesCoInsuranceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.havingDiabetesCoInsuranceRowDeleted != null)) {
                    this.havingDiabetesCoInsuranceRowDeleted(this, new havingDiabetesCoInsuranceRowChangeEvent(((havingDiabetesCoInsuranceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.havingDiabetesCoInsuranceRowDeleting != null)) {
                    this.havingDiabetesCoInsuranceRowDeleting(this, new havingDiabetesCoInsuranceRowChangeEvent(((havingDiabetesCoInsuranceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovehavingDiabetesCoInsuranceRow(havingDiabetesCoInsuranceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "havingDiabetesCoInsuranceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class havingDiabetesLimitDataTable : global::System.Data.TypedTableBase<havingDiabetesLimitRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnsbc_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesLimitDataTable() {
                this.TableName = "havingDiabetesLimit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingDiabetesLimitDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected havingDiabetesLimitDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sbc_IdColumn {
                get {
                    return this.columnsbc_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesLimitRow this[int index] {
                get {
                    return ((havingDiabetesLimitRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesLimitRowChangeEventHandler havingDiabetesLimitRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesLimitRowChangeEventHandler havingDiabetesLimitRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesLimitRowChangeEventHandler havingDiabetesLimitRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event havingDiabetesLimitRowChangeEventHandler havingDiabetesLimitRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddhavingDiabetesLimitRow(havingDiabetesLimitRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesLimitRow AddhavingDiabetesLimitRow(string cellValue, string cellLocation, sbcRow parentsbcRowBysbc_havingDiabetesLimit) {
                havingDiabetesLimitRow rowhavingDiabetesLimitRow = ((havingDiabetesLimitRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentsbcRowBysbc_havingDiabetesLimit != null)) {
                    columnValuesArray[2] = parentsbcRowBysbc_havingDiabetesLimit[0];
                }
                rowhavingDiabetesLimitRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowhavingDiabetesLimitRow);
                return rowhavingDiabetesLimitRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                havingDiabetesLimitDataTable cln = ((havingDiabetesLimitDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new havingDiabetesLimitDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnsbc_Id = base.Columns["sbc_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnsbc_Id = new global::System.Data.DataColumn("sbc_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnsbc_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesLimitRow NewhavingDiabetesLimitRow() {
                return ((havingDiabetesLimitRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new havingDiabetesLimitRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(havingDiabetesLimitRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.havingDiabetesLimitRowChanged != null)) {
                    this.havingDiabetesLimitRowChanged(this, new havingDiabetesLimitRowChangeEvent(((havingDiabetesLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.havingDiabetesLimitRowChanging != null)) {
                    this.havingDiabetesLimitRowChanging(this, new havingDiabetesLimitRowChangeEvent(((havingDiabetesLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.havingDiabetesLimitRowDeleted != null)) {
                    this.havingDiabetesLimitRowDeleted(this, new havingDiabetesLimitRowChangeEvent(((havingDiabetesLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.havingDiabetesLimitRowDeleting != null)) {
                    this.havingDiabetesLimitRowDeleting(this, new havingDiabetesLimitRowChangeEvent(((havingDiabetesLimitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovehavingDiabetesLimitRow(havingDiabetesLimitRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "havingDiabetesLimitDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class moopListDataTable : global::System.Data.TypedTableBase<moopListRow> {
            
            private global::System.Data.DataColumn columnmoopList_Id;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopListDataTable() {
                this.TableName = "moopList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal moopListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected moopListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moopList_IdColumn {
                get {
                    return this.columnmoopList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopListRow this[int index] {
                get {
                    return ((moopListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event moopListRowChangeEventHandler moopListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event moopListRowChangeEventHandler moopListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event moopListRowChangeEventHandler moopListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event moopListRowChangeEventHandler moopListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmoopListRow(moopListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopListRow AddmoopListRow(costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_moopList) {
                moopListRow rowmoopListRow = ((moopListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_moopList != null)) {
                    columnValuesArray[1] = parentcostShareVarianceRowBycostShareVariance_moopList[0];
                }
                rowmoopListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmoopListRow);
                return rowmoopListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                moopListDataTable cln = ((moopListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new moopListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnmoopList_Id = base.Columns["moopList_Id"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnmoopList_Id = new global::System.Data.DataColumn("moopList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmoopList_Id);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnmoopList_Id}, true));
                this.columnmoopList_Id.AutoIncrement = true;
                this.columnmoopList_Id.AllowDBNull = false;
                this.columnmoopList_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopListRow NewmoopListRow() {
                return ((moopListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new moopListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(moopListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.moopListRowChanged != null)) {
                    this.moopListRowChanged(this, new moopListRowChangeEvent(((moopListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.moopListRowChanging != null)) {
                    this.moopListRowChanging(this, new moopListRowChangeEvent(((moopListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.moopListRowDeleted != null)) {
                    this.moopListRowDeleted(this, new moopListRowChangeEvent(((moopListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.moopListRowDeleting != null)) {
                    this.moopListRowDeleting(this, new moopListRowChangeEvent(((moopListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemoopListRow(moopListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "moopListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class moopDataTable : global::System.Data.TypedTableBase<moopRow> {
            
            private global::System.Data.DataColumn columnmoop_Id;
            
            private global::System.Data.DataColumn columnmoopList_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopDataTable() {
                this.TableName = "moop";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal moopDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected moopDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moop_IdColumn {
                get {
                    return this.columnmoop_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moopList_IdColumn {
                get {
                    return this.columnmoopList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow this[int index] {
                get {
                    return ((moopRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event moopRowChangeEventHandler moopRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event moopRowChangeEventHandler moopRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event moopRowChangeEventHandler moopRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event moopRowChangeEventHandler moopRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmoopRow(moopRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow AddmoopRow(moopListRow parentmoopListRowBymoopList_moop) {
                moopRow rowmoopRow = ((moopRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentmoopListRowBymoopList_moop != null)) {
                    columnValuesArray[1] = parentmoopListRowBymoopList_moop[0];
                }
                rowmoopRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmoopRow);
                return rowmoopRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                moopDataTable cln = ((moopDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new moopDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnmoop_Id = base.Columns["moop_Id"];
                this.columnmoopList_Id = base.Columns["moopList_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnmoop_Id = new global::System.Data.DataColumn("moop_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmoop_Id);
                this.columnmoopList_Id = new global::System.Data.DataColumn("moopList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmoopList_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnmoop_Id}, true));
                this.columnmoop_Id.AutoIncrement = true;
                this.columnmoop_Id.AllowDBNull = false;
                this.columnmoop_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow NewmoopRow() {
                return ((moopRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new moopRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(moopRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.moopRowChanged != null)) {
                    this.moopRowChanged(this, new moopRowChangeEvent(((moopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.moopRowChanging != null)) {
                    this.moopRowChanging(this, new moopRowChangeEvent(((moopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.moopRowDeleted != null)) {
                    this.moopRowDeleted(this, new moopRowChangeEvent(((moopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.moopRowDeleting != null)) {
                    this.moopRowDeleting(this, new moopRowChangeEvent(((moopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemoopRow(moopRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "moopDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class nameDataTable : global::System.Data.TypedTableBase<nameRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnmoop_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nameDataTable() {
                this.TableName = "name";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal nameDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected nameDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moop_IdColumn {
                get {
                    return this.columnmoop_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nameRow this[int index] {
                get {
                    return ((nameRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event nameRowChangeEventHandler nameRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event nameRowChangeEventHandler nameRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event nameRowChangeEventHandler nameRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event nameRowChangeEventHandler nameRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddnameRow(nameRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nameRow AddnameRow(string cellValue, string cellLocation, moopRow parentmoopRowBymoop_name) {
                nameRow rownameRow = ((nameRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentmoopRowBymoop_name != null)) {
                    columnValuesArray[2] = parentmoopRowBymoop_name[0];
                }
                rownameRow.ItemArray = columnValuesArray;
                this.Rows.Add(rownameRow);
                return rownameRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                nameDataTable cln = ((nameDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new nameDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnmoop_Id = base.Columns["moop_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnmoop_Id = new global::System.Data.DataColumn("moop_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmoop_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nameRow NewnameRow() {
                return ((nameRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new nameRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(nameRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.nameRowChanged != null)) {
                    this.nameRowChanged(this, new nameRowChangeEvent(((nameRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.nameRowChanging != null)) {
                    this.nameRowChanging(this, new nameRowChangeEvent(((nameRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.nameRowDeleted != null)) {
                    this.nameRowDeleted(this, new nameRowChangeEvent(((nameRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.nameRowDeleting != null)) {
                    this.nameRowDeleting(this, new nameRowChangeEvent(((nameRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovenameRow(nameRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "nameDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class inNetworkTier1IndividualAmountDataTable : global::System.Data.TypedTableBase<inNetworkTier1IndividualAmountRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnmoop_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualAmountDataTable() {
                this.TableName = "inNetworkTier1IndividualAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTier1IndividualAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected inNetworkTier1IndividualAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moop_IdColumn {
                get {
                    return this.columnmoop_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualAmountRow this[int index] {
                get {
                    return ((inNetworkTier1IndividualAmountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1IndividualAmountRowChangeEventHandler inNetworkTier1IndividualAmountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1IndividualAmountRowChangeEventHandler inNetworkTier1IndividualAmountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1IndividualAmountRowChangeEventHandler inNetworkTier1IndividualAmountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1IndividualAmountRowChangeEventHandler inNetworkTier1IndividualAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddinNetworkTier1IndividualAmountRow(inNetworkTier1IndividualAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualAmountRow AddinNetworkTier1IndividualAmountRow(string cellValue, string cellLocation, moopRow parentmoopRowBymoop_inNetworkTier1IndividualAmount) {
                inNetworkTier1IndividualAmountRow rowinNetworkTier1IndividualAmountRow = ((inNetworkTier1IndividualAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentmoopRowBymoop_inNetworkTier1IndividualAmount != null)) {
                    columnValuesArray[2] = parentmoopRowBymoop_inNetworkTier1IndividualAmount[0];
                }
                rowinNetworkTier1IndividualAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinNetworkTier1IndividualAmountRow);
                return rowinNetworkTier1IndividualAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                inNetworkTier1IndividualAmountDataTable cln = ((inNetworkTier1IndividualAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new inNetworkTier1IndividualAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnmoop_Id = base.Columns["moop_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnmoop_Id = new global::System.Data.DataColumn("moop_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmoop_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualAmountRow NewinNetworkTier1IndividualAmountRow() {
                return ((inNetworkTier1IndividualAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new inNetworkTier1IndividualAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(inNetworkTier1IndividualAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.inNetworkTier1IndividualAmountRowChanged != null)) {
                    this.inNetworkTier1IndividualAmountRowChanged(this, new inNetworkTier1IndividualAmountRowChangeEvent(((inNetworkTier1IndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.inNetworkTier1IndividualAmountRowChanging != null)) {
                    this.inNetworkTier1IndividualAmountRowChanging(this, new inNetworkTier1IndividualAmountRowChangeEvent(((inNetworkTier1IndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.inNetworkTier1IndividualAmountRowDeleted != null)) {
                    this.inNetworkTier1IndividualAmountRowDeleted(this, new inNetworkTier1IndividualAmountRowChangeEvent(((inNetworkTier1IndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.inNetworkTier1IndividualAmountRowDeleting != null)) {
                    this.inNetworkTier1IndividualAmountRowDeleting(this, new inNetworkTier1IndividualAmountRowChangeEvent(((inNetworkTier1IndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveinNetworkTier1IndividualAmountRow(inNetworkTier1IndividualAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "inNetworkTier1IndividualAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class inNetworkTier1FamilyAmountDataTable : global::System.Data.TypedTableBase<inNetworkTier1FamilyAmountRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnmoop_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyAmountDataTable() {
                this.TableName = "inNetworkTier1FamilyAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTier1FamilyAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected inNetworkTier1FamilyAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moop_IdColumn {
                get {
                    return this.columnmoop_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyAmountRow this[int index] {
                get {
                    return ((inNetworkTier1FamilyAmountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1FamilyAmountRowChangeEventHandler inNetworkTier1FamilyAmountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1FamilyAmountRowChangeEventHandler inNetworkTier1FamilyAmountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1FamilyAmountRowChangeEventHandler inNetworkTier1FamilyAmountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1FamilyAmountRowChangeEventHandler inNetworkTier1FamilyAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddinNetworkTier1FamilyAmountRow(inNetworkTier1FamilyAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyAmountRow AddinNetworkTier1FamilyAmountRow(string cellValue, string cellLocation, moopRow parentmoopRowBymoop_inNetworkTier1FamilyAmount) {
                inNetworkTier1FamilyAmountRow rowinNetworkTier1FamilyAmountRow = ((inNetworkTier1FamilyAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentmoopRowBymoop_inNetworkTier1FamilyAmount != null)) {
                    columnValuesArray[2] = parentmoopRowBymoop_inNetworkTier1FamilyAmount[0];
                }
                rowinNetworkTier1FamilyAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinNetworkTier1FamilyAmountRow);
                return rowinNetworkTier1FamilyAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                inNetworkTier1FamilyAmountDataTable cln = ((inNetworkTier1FamilyAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new inNetworkTier1FamilyAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnmoop_Id = base.Columns["moop_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnmoop_Id = new global::System.Data.DataColumn("moop_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmoop_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyAmountRow NewinNetworkTier1FamilyAmountRow() {
                return ((inNetworkTier1FamilyAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new inNetworkTier1FamilyAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(inNetworkTier1FamilyAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.inNetworkTier1FamilyAmountRowChanged != null)) {
                    this.inNetworkTier1FamilyAmountRowChanged(this, new inNetworkTier1FamilyAmountRowChangeEvent(((inNetworkTier1FamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.inNetworkTier1FamilyAmountRowChanging != null)) {
                    this.inNetworkTier1FamilyAmountRowChanging(this, new inNetworkTier1FamilyAmountRowChangeEvent(((inNetworkTier1FamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.inNetworkTier1FamilyAmountRowDeleted != null)) {
                    this.inNetworkTier1FamilyAmountRowDeleted(this, new inNetworkTier1FamilyAmountRowChangeEvent(((inNetworkTier1FamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.inNetworkTier1FamilyAmountRowDeleting != null)) {
                    this.inNetworkTier1FamilyAmountRowDeleting(this, new inNetworkTier1FamilyAmountRowChangeEvent(((inNetworkTier1FamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveinNetworkTier1FamilyAmountRow(inNetworkTier1FamilyAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "inNetworkTier1FamilyAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class inNetworkTier2IndividualAmountDataTable : global::System.Data.TypedTableBase<inNetworkTier2IndividualAmountRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnmoop_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2IndividualAmountDataTable() {
                this.TableName = "inNetworkTier2IndividualAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTier2IndividualAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected inNetworkTier2IndividualAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moop_IdColumn {
                get {
                    return this.columnmoop_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2IndividualAmountRow this[int index] {
                get {
                    return ((inNetworkTier2IndividualAmountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier2IndividualAmountRowChangeEventHandler inNetworkTier2IndividualAmountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier2IndividualAmountRowChangeEventHandler inNetworkTier2IndividualAmountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier2IndividualAmountRowChangeEventHandler inNetworkTier2IndividualAmountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier2IndividualAmountRowChangeEventHandler inNetworkTier2IndividualAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddinNetworkTier2IndividualAmountRow(inNetworkTier2IndividualAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2IndividualAmountRow AddinNetworkTier2IndividualAmountRow(string cellValue, string cellLocation, moopRow parentmoopRowBymoop_inNetworkTier2IndividualAmount) {
                inNetworkTier2IndividualAmountRow rowinNetworkTier2IndividualAmountRow = ((inNetworkTier2IndividualAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentmoopRowBymoop_inNetworkTier2IndividualAmount != null)) {
                    columnValuesArray[2] = parentmoopRowBymoop_inNetworkTier2IndividualAmount[0];
                }
                rowinNetworkTier2IndividualAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinNetworkTier2IndividualAmountRow);
                return rowinNetworkTier2IndividualAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                inNetworkTier2IndividualAmountDataTable cln = ((inNetworkTier2IndividualAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new inNetworkTier2IndividualAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnmoop_Id = base.Columns["moop_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnmoop_Id = new global::System.Data.DataColumn("moop_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmoop_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2IndividualAmountRow NewinNetworkTier2IndividualAmountRow() {
                return ((inNetworkTier2IndividualAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new inNetworkTier2IndividualAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(inNetworkTier2IndividualAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.inNetworkTier2IndividualAmountRowChanged != null)) {
                    this.inNetworkTier2IndividualAmountRowChanged(this, new inNetworkTier2IndividualAmountRowChangeEvent(((inNetworkTier2IndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.inNetworkTier2IndividualAmountRowChanging != null)) {
                    this.inNetworkTier2IndividualAmountRowChanging(this, new inNetworkTier2IndividualAmountRowChangeEvent(((inNetworkTier2IndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.inNetworkTier2IndividualAmountRowDeleted != null)) {
                    this.inNetworkTier2IndividualAmountRowDeleted(this, new inNetworkTier2IndividualAmountRowChangeEvent(((inNetworkTier2IndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.inNetworkTier2IndividualAmountRowDeleting != null)) {
                    this.inNetworkTier2IndividualAmountRowDeleting(this, new inNetworkTier2IndividualAmountRowChangeEvent(((inNetworkTier2IndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveinNetworkTier2IndividualAmountRow(inNetworkTier2IndividualAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "inNetworkTier2IndividualAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class inNetworkTier2FamilyAmountDataTable : global::System.Data.TypedTableBase<inNetworkTier2FamilyAmountRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnmoop_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2FamilyAmountDataTable() {
                this.TableName = "inNetworkTier2FamilyAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTier2FamilyAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected inNetworkTier2FamilyAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moop_IdColumn {
                get {
                    return this.columnmoop_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2FamilyAmountRow this[int index] {
                get {
                    return ((inNetworkTier2FamilyAmountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier2FamilyAmountRowChangeEventHandler inNetworkTier2FamilyAmountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier2FamilyAmountRowChangeEventHandler inNetworkTier2FamilyAmountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier2FamilyAmountRowChangeEventHandler inNetworkTier2FamilyAmountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier2FamilyAmountRowChangeEventHandler inNetworkTier2FamilyAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddinNetworkTier2FamilyAmountRow(inNetworkTier2FamilyAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2FamilyAmountRow AddinNetworkTier2FamilyAmountRow(string cellValue, string cellLocation, moopRow parentmoopRowBymoop_inNetworkTier2FamilyAmount) {
                inNetworkTier2FamilyAmountRow rowinNetworkTier2FamilyAmountRow = ((inNetworkTier2FamilyAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentmoopRowBymoop_inNetworkTier2FamilyAmount != null)) {
                    columnValuesArray[2] = parentmoopRowBymoop_inNetworkTier2FamilyAmount[0];
                }
                rowinNetworkTier2FamilyAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinNetworkTier2FamilyAmountRow);
                return rowinNetworkTier2FamilyAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                inNetworkTier2FamilyAmountDataTable cln = ((inNetworkTier2FamilyAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new inNetworkTier2FamilyAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnmoop_Id = base.Columns["moop_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnmoop_Id = new global::System.Data.DataColumn("moop_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmoop_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2FamilyAmountRow NewinNetworkTier2FamilyAmountRow() {
                return ((inNetworkTier2FamilyAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new inNetworkTier2FamilyAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(inNetworkTier2FamilyAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.inNetworkTier2FamilyAmountRowChanged != null)) {
                    this.inNetworkTier2FamilyAmountRowChanged(this, new inNetworkTier2FamilyAmountRowChangeEvent(((inNetworkTier2FamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.inNetworkTier2FamilyAmountRowChanging != null)) {
                    this.inNetworkTier2FamilyAmountRowChanging(this, new inNetworkTier2FamilyAmountRowChangeEvent(((inNetworkTier2FamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.inNetworkTier2FamilyAmountRowDeleted != null)) {
                    this.inNetworkTier2FamilyAmountRowDeleted(this, new inNetworkTier2FamilyAmountRowChangeEvent(((inNetworkTier2FamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.inNetworkTier2FamilyAmountRowDeleting != null)) {
                    this.inNetworkTier2FamilyAmountRowDeleting(this, new inNetworkTier2FamilyAmountRowChangeEvent(((inNetworkTier2FamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveinNetworkTier2FamilyAmountRow(inNetworkTier2FamilyAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "inNetworkTier2FamilyAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class outOfNetworkIndividualAmountDataTable : global::System.Data.TypedTableBase<outOfNetworkIndividualAmountRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnmoop_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualAmountDataTable() {
                this.TableName = "outOfNetworkIndividualAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfNetworkIndividualAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected outOfNetworkIndividualAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moop_IdColumn {
                get {
                    return this.columnmoop_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualAmountRow this[int index] {
                get {
                    return ((outOfNetworkIndividualAmountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkIndividualAmountRowChangeEventHandler outOfNetworkIndividualAmountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkIndividualAmountRowChangeEventHandler outOfNetworkIndividualAmountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkIndividualAmountRowChangeEventHandler outOfNetworkIndividualAmountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkIndividualAmountRowChangeEventHandler outOfNetworkIndividualAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddoutOfNetworkIndividualAmountRow(outOfNetworkIndividualAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualAmountRow AddoutOfNetworkIndividualAmountRow(string cellValue, string cellLocation, moopRow parentmoopRowBymoop_outOfNetworkIndividualAmount) {
                outOfNetworkIndividualAmountRow rowoutOfNetworkIndividualAmountRow = ((outOfNetworkIndividualAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentmoopRowBymoop_outOfNetworkIndividualAmount != null)) {
                    columnValuesArray[2] = parentmoopRowBymoop_outOfNetworkIndividualAmount[0];
                }
                rowoutOfNetworkIndividualAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowoutOfNetworkIndividualAmountRow);
                return rowoutOfNetworkIndividualAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                outOfNetworkIndividualAmountDataTable cln = ((outOfNetworkIndividualAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new outOfNetworkIndividualAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnmoop_Id = base.Columns["moop_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnmoop_Id = new global::System.Data.DataColumn("moop_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmoop_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualAmountRow NewoutOfNetworkIndividualAmountRow() {
                return ((outOfNetworkIndividualAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new outOfNetworkIndividualAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(outOfNetworkIndividualAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.outOfNetworkIndividualAmountRowChanged != null)) {
                    this.outOfNetworkIndividualAmountRowChanged(this, new outOfNetworkIndividualAmountRowChangeEvent(((outOfNetworkIndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.outOfNetworkIndividualAmountRowChanging != null)) {
                    this.outOfNetworkIndividualAmountRowChanging(this, new outOfNetworkIndividualAmountRowChangeEvent(((outOfNetworkIndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.outOfNetworkIndividualAmountRowDeleted != null)) {
                    this.outOfNetworkIndividualAmountRowDeleted(this, new outOfNetworkIndividualAmountRowChangeEvent(((outOfNetworkIndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.outOfNetworkIndividualAmountRowDeleting != null)) {
                    this.outOfNetworkIndividualAmountRowDeleting(this, new outOfNetworkIndividualAmountRowChangeEvent(((outOfNetworkIndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveoutOfNetworkIndividualAmountRow(outOfNetworkIndividualAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "outOfNetworkIndividualAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class outOfNetworkFamilyAmountDataTable : global::System.Data.TypedTableBase<outOfNetworkFamilyAmountRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnmoop_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyAmountDataTable() {
                this.TableName = "outOfNetworkFamilyAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfNetworkFamilyAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected outOfNetworkFamilyAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moop_IdColumn {
                get {
                    return this.columnmoop_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyAmountRow this[int index] {
                get {
                    return ((outOfNetworkFamilyAmountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkFamilyAmountRowChangeEventHandler outOfNetworkFamilyAmountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkFamilyAmountRowChangeEventHandler outOfNetworkFamilyAmountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkFamilyAmountRowChangeEventHandler outOfNetworkFamilyAmountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkFamilyAmountRowChangeEventHandler outOfNetworkFamilyAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddoutOfNetworkFamilyAmountRow(outOfNetworkFamilyAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyAmountRow AddoutOfNetworkFamilyAmountRow(string cellValue, string cellLocation, moopRow parentmoopRowBymoop_outOfNetworkFamilyAmount) {
                outOfNetworkFamilyAmountRow rowoutOfNetworkFamilyAmountRow = ((outOfNetworkFamilyAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentmoopRowBymoop_outOfNetworkFamilyAmount != null)) {
                    columnValuesArray[2] = parentmoopRowBymoop_outOfNetworkFamilyAmount[0];
                }
                rowoutOfNetworkFamilyAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowoutOfNetworkFamilyAmountRow);
                return rowoutOfNetworkFamilyAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                outOfNetworkFamilyAmountDataTable cln = ((outOfNetworkFamilyAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new outOfNetworkFamilyAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnmoop_Id = base.Columns["moop_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnmoop_Id = new global::System.Data.DataColumn("moop_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmoop_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyAmountRow NewoutOfNetworkFamilyAmountRow() {
                return ((outOfNetworkFamilyAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new outOfNetworkFamilyAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(outOfNetworkFamilyAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.outOfNetworkFamilyAmountRowChanged != null)) {
                    this.outOfNetworkFamilyAmountRowChanged(this, new outOfNetworkFamilyAmountRowChangeEvent(((outOfNetworkFamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.outOfNetworkFamilyAmountRowChanging != null)) {
                    this.outOfNetworkFamilyAmountRowChanging(this, new outOfNetworkFamilyAmountRowChangeEvent(((outOfNetworkFamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.outOfNetworkFamilyAmountRowDeleted != null)) {
                    this.outOfNetworkFamilyAmountRowDeleted(this, new outOfNetworkFamilyAmountRowChangeEvent(((outOfNetworkFamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.outOfNetworkFamilyAmountRowDeleting != null)) {
                    this.outOfNetworkFamilyAmountRowDeleting(this, new outOfNetworkFamilyAmountRowChangeEvent(((outOfNetworkFamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveoutOfNetworkFamilyAmountRow(outOfNetworkFamilyAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "outOfNetworkFamilyAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class combinedInOutNetworkIndividualAmountDataTable : global::System.Data.TypedTableBase<combinedInOutNetworkIndividualAmountRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnmoop_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkIndividualAmountDataTable() {
                this.TableName = "combinedInOutNetworkIndividualAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal combinedInOutNetworkIndividualAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected combinedInOutNetworkIndividualAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moop_IdColumn {
                get {
                    return this.columnmoop_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkIndividualAmountRow this[int index] {
                get {
                    return ((combinedInOutNetworkIndividualAmountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOutNetworkIndividualAmountRowChangeEventHandler combinedInOutNetworkIndividualAmountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOutNetworkIndividualAmountRowChangeEventHandler combinedInOutNetworkIndividualAmountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOutNetworkIndividualAmountRowChangeEventHandler combinedInOutNetworkIndividualAmountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOutNetworkIndividualAmountRowChangeEventHandler combinedInOutNetworkIndividualAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcombinedInOutNetworkIndividualAmountRow(combinedInOutNetworkIndividualAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkIndividualAmountRow AddcombinedInOutNetworkIndividualAmountRow(string cellValue, string cellLocation, moopRow parentmoopRowBymoop_combinedInOutNetworkIndividualAmount) {
                combinedInOutNetworkIndividualAmountRow rowcombinedInOutNetworkIndividualAmountRow = ((combinedInOutNetworkIndividualAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentmoopRowBymoop_combinedInOutNetworkIndividualAmount != null)) {
                    columnValuesArray[2] = parentmoopRowBymoop_combinedInOutNetworkIndividualAmount[0];
                }
                rowcombinedInOutNetworkIndividualAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcombinedInOutNetworkIndividualAmountRow);
                return rowcombinedInOutNetworkIndividualAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                combinedInOutNetworkIndividualAmountDataTable cln = ((combinedInOutNetworkIndividualAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new combinedInOutNetworkIndividualAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnmoop_Id = base.Columns["moop_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnmoop_Id = new global::System.Data.DataColumn("moop_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmoop_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkIndividualAmountRow NewcombinedInOutNetworkIndividualAmountRow() {
                return ((combinedInOutNetworkIndividualAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new combinedInOutNetworkIndividualAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(combinedInOutNetworkIndividualAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.combinedInOutNetworkIndividualAmountRowChanged != null)) {
                    this.combinedInOutNetworkIndividualAmountRowChanged(this, new combinedInOutNetworkIndividualAmountRowChangeEvent(((combinedInOutNetworkIndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.combinedInOutNetworkIndividualAmountRowChanging != null)) {
                    this.combinedInOutNetworkIndividualAmountRowChanging(this, new combinedInOutNetworkIndividualAmountRowChangeEvent(((combinedInOutNetworkIndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.combinedInOutNetworkIndividualAmountRowDeleted != null)) {
                    this.combinedInOutNetworkIndividualAmountRowDeleted(this, new combinedInOutNetworkIndividualAmountRowChangeEvent(((combinedInOutNetworkIndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.combinedInOutNetworkIndividualAmountRowDeleting != null)) {
                    this.combinedInOutNetworkIndividualAmountRowDeleting(this, new combinedInOutNetworkIndividualAmountRowChangeEvent(((combinedInOutNetworkIndividualAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecombinedInOutNetworkIndividualAmountRow(combinedInOutNetworkIndividualAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "combinedInOutNetworkIndividualAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class combinedInOutNetworkFamilyAmountDataTable : global::System.Data.TypedTableBase<combinedInOutNetworkFamilyAmountRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnmoop_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkFamilyAmountDataTable() {
                this.TableName = "combinedInOutNetworkFamilyAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal combinedInOutNetworkFamilyAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected combinedInOutNetworkFamilyAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn moop_IdColumn {
                get {
                    return this.columnmoop_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkFamilyAmountRow this[int index] {
                get {
                    return ((combinedInOutNetworkFamilyAmountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOutNetworkFamilyAmountRowChangeEventHandler combinedInOutNetworkFamilyAmountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOutNetworkFamilyAmountRowChangeEventHandler combinedInOutNetworkFamilyAmountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOutNetworkFamilyAmountRowChangeEventHandler combinedInOutNetworkFamilyAmountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOutNetworkFamilyAmountRowChangeEventHandler combinedInOutNetworkFamilyAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcombinedInOutNetworkFamilyAmountRow(combinedInOutNetworkFamilyAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkFamilyAmountRow AddcombinedInOutNetworkFamilyAmountRow(string cellValue, string cellLocation, moopRow parentmoopRowBymoop_combinedInOutNetworkFamilyAmount) {
                combinedInOutNetworkFamilyAmountRow rowcombinedInOutNetworkFamilyAmountRow = ((combinedInOutNetworkFamilyAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentmoopRowBymoop_combinedInOutNetworkFamilyAmount != null)) {
                    columnValuesArray[2] = parentmoopRowBymoop_combinedInOutNetworkFamilyAmount[0];
                }
                rowcombinedInOutNetworkFamilyAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcombinedInOutNetworkFamilyAmountRow);
                return rowcombinedInOutNetworkFamilyAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                combinedInOutNetworkFamilyAmountDataTable cln = ((combinedInOutNetworkFamilyAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new combinedInOutNetworkFamilyAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnmoop_Id = base.Columns["moop_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnmoop_Id = new global::System.Data.DataColumn("moop_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnmoop_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkFamilyAmountRow NewcombinedInOutNetworkFamilyAmountRow() {
                return ((combinedInOutNetworkFamilyAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new combinedInOutNetworkFamilyAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(combinedInOutNetworkFamilyAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.combinedInOutNetworkFamilyAmountRowChanged != null)) {
                    this.combinedInOutNetworkFamilyAmountRowChanged(this, new combinedInOutNetworkFamilyAmountRowChangeEvent(((combinedInOutNetworkFamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.combinedInOutNetworkFamilyAmountRowChanging != null)) {
                    this.combinedInOutNetworkFamilyAmountRowChanging(this, new combinedInOutNetworkFamilyAmountRowChangeEvent(((combinedInOutNetworkFamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.combinedInOutNetworkFamilyAmountRowDeleted != null)) {
                    this.combinedInOutNetworkFamilyAmountRowDeleted(this, new combinedInOutNetworkFamilyAmountRowChangeEvent(((combinedInOutNetworkFamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.combinedInOutNetworkFamilyAmountRowDeleting != null)) {
                    this.combinedInOutNetworkFamilyAmountRowDeleting(this, new combinedInOutNetworkFamilyAmountRowChangeEvent(((combinedInOutNetworkFamilyAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecombinedInOutNetworkFamilyAmountRow(combinedInOutNetworkFamilyAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "combinedInOutNetworkFamilyAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class planDeductibleListDataTable : global::System.Data.TypedTableBase<planDeductibleListRow> {
            
            private global::System.Data.DataColumn columnplanDeductibleList_Id;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleListDataTable() {
                this.TableName = "planDeductibleList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planDeductibleListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected planDeductibleListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductibleList_IdColumn {
                get {
                    return this.columnplanDeductibleList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleListRow this[int index] {
                get {
                    return ((planDeductibleListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planDeductibleListRowChangeEventHandler planDeductibleListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planDeductibleListRowChangeEventHandler planDeductibleListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planDeductibleListRowChangeEventHandler planDeductibleListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planDeductibleListRowChangeEventHandler planDeductibleListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddplanDeductibleListRow(planDeductibleListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleListRow AddplanDeductibleListRow(costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_planDeductibleList) {
                planDeductibleListRow rowplanDeductibleListRow = ((planDeductibleListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_planDeductibleList != null)) {
                    columnValuesArray[1] = parentcostShareVarianceRowBycostShareVariance_planDeductibleList[0];
                }
                rowplanDeductibleListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowplanDeductibleListRow);
                return rowplanDeductibleListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                planDeductibleListDataTable cln = ((planDeductibleListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new planDeductibleListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnplanDeductibleList_Id = base.Columns["planDeductibleList_Id"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnplanDeductibleList_Id = new global::System.Data.DataColumn("planDeductibleList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductibleList_Id);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnplanDeductibleList_Id}, true));
                this.columnplanDeductibleList_Id.AutoIncrement = true;
                this.columnplanDeductibleList_Id.AllowDBNull = false;
                this.columnplanDeductibleList_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleListRow NewplanDeductibleListRow() {
                return ((planDeductibleListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new planDeductibleListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(planDeductibleListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.planDeductibleListRowChanged != null)) {
                    this.planDeductibleListRowChanged(this, new planDeductibleListRowChangeEvent(((planDeductibleListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.planDeductibleListRowChanging != null)) {
                    this.planDeductibleListRowChanging(this, new planDeductibleListRowChangeEvent(((planDeductibleListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.planDeductibleListRowDeleted != null)) {
                    this.planDeductibleListRowDeleted(this, new planDeductibleListRowChangeEvent(((planDeductibleListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.planDeductibleListRowDeleting != null)) {
                    this.planDeductibleListRowDeleting(this, new planDeductibleListRowChangeEvent(((planDeductibleListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveplanDeductibleListRow(planDeductibleListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "planDeductibleListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class planDeductibleDataTable : global::System.Data.TypedTableBase<planDeductibleRow> {
            
            private global::System.Data.DataColumn columnplanDeductible_Id;
            
            private global::System.Data.DataColumn columnplanDeductibleList_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleDataTable() {
                this.TableName = "planDeductible";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planDeductibleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected planDeductibleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductible_IdColumn {
                get {
                    return this.columnplanDeductible_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductibleList_IdColumn {
                get {
                    return this.columnplanDeductibleList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow this[int index] {
                get {
                    return ((planDeductibleRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planDeductibleRowChangeEventHandler planDeductibleRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planDeductibleRowChangeEventHandler planDeductibleRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planDeductibleRowChangeEventHandler planDeductibleRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event planDeductibleRowChangeEventHandler planDeductibleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddplanDeductibleRow(planDeductibleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow AddplanDeductibleRow(planDeductibleListRow parentplanDeductibleListRowByplanDeductibleList_planDeductible) {
                planDeductibleRow rowplanDeductibleRow = ((planDeductibleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentplanDeductibleListRowByplanDeductibleList_planDeductible != null)) {
                    columnValuesArray[1] = parentplanDeductibleListRowByplanDeductibleList_planDeductible[0];
                }
                rowplanDeductibleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowplanDeductibleRow);
                return rowplanDeductibleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                planDeductibleDataTable cln = ((planDeductibleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new planDeductibleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnplanDeductible_Id = base.Columns["planDeductible_Id"];
                this.columnplanDeductibleList_Id = base.Columns["planDeductibleList_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnplanDeductible_Id = new global::System.Data.DataColumn("planDeductible_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductible_Id);
                this.columnplanDeductibleList_Id = new global::System.Data.DataColumn("planDeductibleList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductibleList_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnplanDeductible_Id}, true));
                this.columnplanDeductible_Id.AutoIncrement = true;
                this.columnplanDeductible_Id.AllowDBNull = false;
                this.columnplanDeductible_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow NewplanDeductibleRow() {
                return ((planDeductibleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new planDeductibleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(planDeductibleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.planDeductibleRowChanged != null)) {
                    this.planDeductibleRowChanged(this, new planDeductibleRowChangeEvent(((planDeductibleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.planDeductibleRowChanging != null)) {
                    this.planDeductibleRowChanging(this, new planDeductibleRowChangeEvent(((planDeductibleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.planDeductibleRowDeleted != null)) {
                    this.planDeductibleRowDeleted(this, new planDeductibleRowChangeEvent(((planDeductibleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.planDeductibleRowDeleting != null)) {
                    this.planDeductibleRowDeleting(this, new planDeductibleRowChangeEvent(((planDeductibleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveplanDeductibleRow(planDeductibleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "planDeductibleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class deductibleTypeDataTable : global::System.Data.TypedTableBase<deductibleTypeRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanDeductible_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public deductibleTypeDataTable() {
                this.TableName = "deductibleType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal deductibleTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected deductibleTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductible_IdColumn {
                get {
                    return this.columnplanDeductible_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public deductibleTypeRow this[int index] {
                get {
                    return ((deductibleTypeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event deductibleTypeRowChangeEventHandler deductibleTypeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event deductibleTypeRowChangeEventHandler deductibleTypeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event deductibleTypeRowChangeEventHandler deductibleTypeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event deductibleTypeRowChangeEventHandler deductibleTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddeductibleTypeRow(deductibleTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public deductibleTypeRow AdddeductibleTypeRow(string cellValue, string cellLocation, planDeductibleRow parentplanDeductibleRowByplanDeductible_deductibleType) {
                deductibleTypeRow rowdeductibleTypeRow = ((deductibleTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanDeductibleRowByplanDeductible_deductibleType != null)) {
                    columnValuesArray[2] = parentplanDeductibleRowByplanDeductible_deductibleType[0];
                }
                rowdeductibleTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdeductibleTypeRow);
                return rowdeductibleTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                deductibleTypeDataTable cln = ((deductibleTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new deductibleTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanDeductible_Id = base.Columns["planDeductible_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanDeductible_Id = new global::System.Data.DataColumn("planDeductible_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductible_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public deductibleTypeRow NewdeductibleTypeRow() {
                return ((deductibleTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new deductibleTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(deductibleTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.deductibleTypeRowChanged != null)) {
                    this.deductibleTypeRowChanged(this, new deductibleTypeRowChangeEvent(((deductibleTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.deductibleTypeRowChanging != null)) {
                    this.deductibleTypeRowChanging(this, new deductibleTypeRowChangeEvent(((deductibleTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.deductibleTypeRowDeleted != null)) {
                    this.deductibleTypeRowDeleted(this, new deductibleTypeRowChangeEvent(((deductibleTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.deductibleTypeRowDeleting != null)) {
                    this.deductibleTypeRowDeleting(this, new deductibleTypeRowChangeEvent(((deductibleTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedeductibleTypeRow(deductibleTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "deductibleTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class inNetworkTier1IndividualDataTable : global::System.Data.TypedTableBase<inNetworkTier1IndividualRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanDeductible_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualDataTable() {
                this.TableName = "inNetworkTier1Individual";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTier1IndividualDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected inNetworkTier1IndividualDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductible_IdColumn {
                get {
                    return this.columnplanDeductible_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualRow this[int index] {
                get {
                    return ((inNetworkTier1IndividualRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1IndividualRowChangeEventHandler inNetworkTier1IndividualRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1IndividualRowChangeEventHandler inNetworkTier1IndividualRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1IndividualRowChangeEventHandler inNetworkTier1IndividualRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1IndividualRowChangeEventHandler inNetworkTier1IndividualRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddinNetworkTier1IndividualRow(inNetworkTier1IndividualRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualRow AddinNetworkTier1IndividualRow(string cellValue, string cellLocation, planDeductibleRow parentplanDeductibleRowByplanDeductible_inNetworkTier1Individual) {
                inNetworkTier1IndividualRow rowinNetworkTier1IndividualRow = ((inNetworkTier1IndividualRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanDeductibleRowByplanDeductible_inNetworkTier1Individual != null)) {
                    columnValuesArray[2] = parentplanDeductibleRowByplanDeductible_inNetworkTier1Individual[0];
                }
                rowinNetworkTier1IndividualRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinNetworkTier1IndividualRow);
                return rowinNetworkTier1IndividualRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                inNetworkTier1IndividualDataTable cln = ((inNetworkTier1IndividualDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new inNetworkTier1IndividualDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanDeductible_Id = base.Columns["planDeductible_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanDeductible_Id = new global::System.Data.DataColumn("planDeductible_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductible_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualRow NewinNetworkTier1IndividualRow() {
                return ((inNetworkTier1IndividualRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new inNetworkTier1IndividualRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(inNetworkTier1IndividualRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.inNetworkTier1IndividualRowChanged != null)) {
                    this.inNetworkTier1IndividualRowChanged(this, new inNetworkTier1IndividualRowChangeEvent(((inNetworkTier1IndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.inNetworkTier1IndividualRowChanging != null)) {
                    this.inNetworkTier1IndividualRowChanging(this, new inNetworkTier1IndividualRowChangeEvent(((inNetworkTier1IndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.inNetworkTier1IndividualRowDeleted != null)) {
                    this.inNetworkTier1IndividualRowDeleted(this, new inNetworkTier1IndividualRowChangeEvent(((inNetworkTier1IndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.inNetworkTier1IndividualRowDeleting != null)) {
                    this.inNetworkTier1IndividualRowDeleting(this, new inNetworkTier1IndividualRowChangeEvent(((inNetworkTier1IndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveinNetworkTier1IndividualRow(inNetworkTier1IndividualRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "inNetworkTier1IndividualDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class inNetworkTier1FamilyDataTable : global::System.Data.TypedTableBase<inNetworkTier1FamilyRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanDeductible_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyDataTable() {
                this.TableName = "inNetworkTier1Family";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTier1FamilyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected inNetworkTier1FamilyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductible_IdColumn {
                get {
                    return this.columnplanDeductible_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyRow this[int index] {
                get {
                    return ((inNetworkTier1FamilyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1FamilyRowChangeEventHandler inNetworkTier1FamilyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1FamilyRowChangeEventHandler inNetworkTier1FamilyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1FamilyRowChangeEventHandler inNetworkTier1FamilyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTier1FamilyRowChangeEventHandler inNetworkTier1FamilyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddinNetworkTier1FamilyRow(inNetworkTier1FamilyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyRow AddinNetworkTier1FamilyRow(string cellValue, string cellLocation, planDeductibleRow parentplanDeductibleRowByplanDeductible_inNetworkTier1Family) {
                inNetworkTier1FamilyRow rowinNetworkTier1FamilyRow = ((inNetworkTier1FamilyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanDeductibleRowByplanDeductible_inNetworkTier1Family != null)) {
                    columnValuesArray[2] = parentplanDeductibleRowByplanDeductible_inNetworkTier1Family[0];
                }
                rowinNetworkTier1FamilyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinNetworkTier1FamilyRow);
                return rowinNetworkTier1FamilyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                inNetworkTier1FamilyDataTable cln = ((inNetworkTier1FamilyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new inNetworkTier1FamilyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanDeductible_Id = base.Columns["planDeductible_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanDeductible_Id = new global::System.Data.DataColumn("planDeductible_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductible_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyRow NewinNetworkTier1FamilyRow() {
                return ((inNetworkTier1FamilyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new inNetworkTier1FamilyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(inNetworkTier1FamilyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.inNetworkTier1FamilyRowChanged != null)) {
                    this.inNetworkTier1FamilyRowChanged(this, new inNetworkTier1FamilyRowChangeEvent(((inNetworkTier1FamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.inNetworkTier1FamilyRowChanging != null)) {
                    this.inNetworkTier1FamilyRowChanging(this, new inNetworkTier1FamilyRowChangeEvent(((inNetworkTier1FamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.inNetworkTier1FamilyRowDeleted != null)) {
                    this.inNetworkTier1FamilyRowDeleted(this, new inNetworkTier1FamilyRowChangeEvent(((inNetworkTier1FamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.inNetworkTier1FamilyRowDeleting != null)) {
                    this.inNetworkTier1FamilyRowDeleting(this, new inNetworkTier1FamilyRowChangeEvent(((inNetworkTier1FamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveinNetworkTier1FamilyRow(inNetworkTier1FamilyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "inNetworkTier1FamilyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class coinsuranceInNetworkTier1DataTable : global::System.Data.TypedTableBase<coinsuranceInNetworkTier1Row> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanDeductible_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier1DataTable() {
                this.TableName = "coinsuranceInNetworkTier1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal coinsuranceInNetworkTier1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected coinsuranceInNetworkTier1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductible_IdColumn {
                get {
                    return this.columnplanDeductible_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier1Row this[int index] {
                get {
                    return ((coinsuranceInNetworkTier1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coinsuranceInNetworkTier1RowChangeEventHandler coinsuranceInNetworkTier1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coinsuranceInNetworkTier1RowChangeEventHandler coinsuranceInNetworkTier1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coinsuranceInNetworkTier1RowChangeEventHandler coinsuranceInNetworkTier1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coinsuranceInNetworkTier1RowChangeEventHandler coinsuranceInNetworkTier1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcoinsuranceInNetworkTier1Row(coinsuranceInNetworkTier1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier1Row AddcoinsuranceInNetworkTier1Row(string cellValue, string cellLocation, planDeductibleRow parentplanDeductibleRowByplanDeductible_coinsuranceInNetworkTier1) {
                coinsuranceInNetworkTier1Row rowcoinsuranceInNetworkTier1Row = ((coinsuranceInNetworkTier1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanDeductibleRowByplanDeductible_coinsuranceInNetworkTier1 != null)) {
                    columnValuesArray[2] = parentplanDeductibleRowByplanDeductible_coinsuranceInNetworkTier1[0];
                }
                rowcoinsuranceInNetworkTier1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowcoinsuranceInNetworkTier1Row);
                return rowcoinsuranceInNetworkTier1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                coinsuranceInNetworkTier1DataTable cln = ((coinsuranceInNetworkTier1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new coinsuranceInNetworkTier1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanDeductible_Id = base.Columns["planDeductible_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanDeductible_Id = new global::System.Data.DataColumn("planDeductible_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductible_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier1Row NewcoinsuranceInNetworkTier1Row() {
                return ((coinsuranceInNetworkTier1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new coinsuranceInNetworkTier1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(coinsuranceInNetworkTier1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.coinsuranceInNetworkTier1RowChanged != null)) {
                    this.coinsuranceInNetworkTier1RowChanged(this, new coinsuranceInNetworkTier1RowChangeEvent(((coinsuranceInNetworkTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.coinsuranceInNetworkTier1RowChanging != null)) {
                    this.coinsuranceInNetworkTier1RowChanging(this, new coinsuranceInNetworkTier1RowChangeEvent(((coinsuranceInNetworkTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.coinsuranceInNetworkTier1RowDeleted != null)) {
                    this.coinsuranceInNetworkTier1RowDeleted(this, new coinsuranceInNetworkTier1RowChangeEvent(((coinsuranceInNetworkTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.coinsuranceInNetworkTier1RowDeleting != null)) {
                    this.coinsuranceInNetworkTier1RowDeleting(this, new coinsuranceInNetworkTier1RowChangeEvent(((coinsuranceInNetworkTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecoinsuranceInNetworkTier1Row(coinsuranceInNetworkTier1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "coinsuranceInNetworkTier1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class inNetworkTierTwoIndividualDataTable : global::System.Data.TypedTableBase<inNetworkTierTwoIndividualRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanDeductible_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoIndividualDataTable() {
                this.TableName = "inNetworkTierTwoIndividual";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTierTwoIndividualDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected inNetworkTierTwoIndividualDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductible_IdColumn {
                get {
                    return this.columnplanDeductible_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoIndividualRow this[int index] {
                get {
                    return ((inNetworkTierTwoIndividualRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTierTwoIndividualRowChangeEventHandler inNetworkTierTwoIndividualRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTierTwoIndividualRowChangeEventHandler inNetworkTierTwoIndividualRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTierTwoIndividualRowChangeEventHandler inNetworkTierTwoIndividualRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTierTwoIndividualRowChangeEventHandler inNetworkTierTwoIndividualRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddinNetworkTierTwoIndividualRow(inNetworkTierTwoIndividualRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoIndividualRow AddinNetworkTierTwoIndividualRow(string cellValue, string cellLocation, planDeductibleRow parentplanDeductibleRowByplanDeductible_inNetworkTierTwoIndividual) {
                inNetworkTierTwoIndividualRow rowinNetworkTierTwoIndividualRow = ((inNetworkTierTwoIndividualRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanDeductibleRowByplanDeductible_inNetworkTierTwoIndividual != null)) {
                    columnValuesArray[2] = parentplanDeductibleRowByplanDeductible_inNetworkTierTwoIndividual[0];
                }
                rowinNetworkTierTwoIndividualRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinNetworkTierTwoIndividualRow);
                return rowinNetworkTierTwoIndividualRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                inNetworkTierTwoIndividualDataTable cln = ((inNetworkTierTwoIndividualDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new inNetworkTierTwoIndividualDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanDeductible_Id = base.Columns["planDeductible_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanDeductible_Id = new global::System.Data.DataColumn("planDeductible_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductible_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoIndividualRow NewinNetworkTierTwoIndividualRow() {
                return ((inNetworkTierTwoIndividualRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new inNetworkTierTwoIndividualRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(inNetworkTierTwoIndividualRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.inNetworkTierTwoIndividualRowChanged != null)) {
                    this.inNetworkTierTwoIndividualRowChanged(this, new inNetworkTierTwoIndividualRowChangeEvent(((inNetworkTierTwoIndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.inNetworkTierTwoIndividualRowChanging != null)) {
                    this.inNetworkTierTwoIndividualRowChanging(this, new inNetworkTierTwoIndividualRowChangeEvent(((inNetworkTierTwoIndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.inNetworkTierTwoIndividualRowDeleted != null)) {
                    this.inNetworkTierTwoIndividualRowDeleted(this, new inNetworkTierTwoIndividualRowChangeEvent(((inNetworkTierTwoIndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.inNetworkTierTwoIndividualRowDeleting != null)) {
                    this.inNetworkTierTwoIndividualRowDeleting(this, new inNetworkTierTwoIndividualRowChangeEvent(((inNetworkTierTwoIndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveinNetworkTierTwoIndividualRow(inNetworkTierTwoIndividualRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "inNetworkTierTwoIndividualDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class inNetworkTierTwoFamilyDataTable : global::System.Data.TypedTableBase<inNetworkTierTwoFamilyRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanDeductible_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoFamilyDataTable() {
                this.TableName = "inNetworkTierTwoFamily";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTierTwoFamilyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected inNetworkTierTwoFamilyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductible_IdColumn {
                get {
                    return this.columnplanDeductible_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoFamilyRow this[int index] {
                get {
                    return ((inNetworkTierTwoFamilyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTierTwoFamilyRowChangeEventHandler inNetworkTierTwoFamilyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTierTwoFamilyRowChangeEventHandler inNetworkTierTwoFamilyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTierTwoFamilyRowChangeEventHandler inNetworkTierTwoFamilyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event inNetworkTierTwoFamilyRowChangeEventHandler inNetworkTierTwoFamilyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddinNetworkTierTwoFamilyRow(inNetworkTierTwoFamilyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoFamilyRow AddinNetworkTierTwoFamilyRow(string cellValue, string cellLocation, planDeductibleRow parentplanDeductibleRowByplanDeductible_inNetworkTierTwoFamily) {
                inNetworkTierTwoFamilyRow rowinNetworkTierTwoFamilyRow = ((inNetworkTierTwoFamilyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanDeductibleRowByplanDeductible_inNetworkTierTwoFamily != null)) {
                    columnValuesArray[2] = parentplanDeductibleRowByplanDeductible_inNetworkTierTwoFamily[0];
                }
                rowinNetworkTierTwoFamilyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinNetworkTierTwoFamilyRow);
                return rowinNetworkTierTwoFamilyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                inNetworkTierTwoFamilyDataTable cln = ((inNetworkTierTwoFamilyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new inNetworkTierTwoFamilyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanDeductible_Id = base.Columns["planDeductible_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanDeductible_Id = new global::System.Data.DataColumn("planDeductible_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductible_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoFamilyRow NewinNetworkTierTwoFamilyRow() {
                return ((inNetworkTierTwoFamilyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new inNetworkTierTwoFamilyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(inNetworkTierTwoFamilyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.inNetworkTierTwoFamilyRowChanged != null)) {
                    this.inNetworkTierTwoFamilyRowChanged(this, new inNetworkTierTwoFamilyRowChangeEvent(((inNetworkTierTwoFamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.inNetworkTierTwoFamilyRowChanging != null)) {
                    this.inNetworkTierTwoFamilyRowChanging(this, new inNetworkTierTwoFamilyRowChangeEvent(((inNetworkTierTwoFamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.inNetworkTierTwoFamilyRowDeleted != null)) {
                    this.inNetworkTierTwoFamilyRowDeleted(this, new inNetworkTierTwoFamilyRowChangeEvent(((inNetworkTierTwoFamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.inNetworkTierTwoFamilyRowDeleting != null)) {
                    this.inNetworkTierTwoFamilyRowDeleting(this, new inNetworkTierTwoFamilyRowChangeEvent(((inNetworkTierTwoFamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveinNetworkTierTwoFamilyRow(inNetworkTierTwoFamilyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "inNetworkTierTwoFamilyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class coinsuranceInNetworkTier2DataTable : global::System.Data.TypedTableBase<coinsuranceInNetworkTier2Row> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanDeductible_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier2DataTable() {
                this.TableName = "coinsuranceInNetworkTier2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal coinsuranceInNetworkTier2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected coinsuranceInNetworkTier2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductible_IdColumn {
                get {
                    return this.columnplanDeductible_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier2Row this[int index] {
                get {
                    return ((coinsuranceInNetworkTier2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coinsuranceInNetworkTier2RowChangeEventHandler coinsuranceInNetworkTier2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coinsuranceInNetworkTier2RowChangeEventHandler coinsuranceInNetworkTier2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coinsuranceInNetworkTier2RowChangeEventHandler coinsuranceInNetworkTier2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coinsuranceInNetworkTier2RowChangeEventHandler coinsuranceInNetworkTier2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcoinsuranceInNetworkTier2Row(coinsuranceInNetworkTier2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier2Row AddcoinsuranceInNetworkTier2Row(string cellValue, string cellLocation, planDeductibleRow parentplanDeductibleRowByplanDeductible_coinsuranceInNetworkTier2) {
                coinsuranceInNetworkTier2Row rowcoinsuranceInNetworkTier2Row = ((coinsuranceInNetworkTier2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanDeductibleRowByplanDeductible_coinsuranceInNetworkTier2 != null)) {
                    columnValuesArray[2] = parentplanDeductibleRowByplanDeductible_coinsuranceInNetworkTier2[0];
                }
                rowcoinsuranceInNetworkTier2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowcoinsuranceInNetworkTier2Row);
                return rowcoinsuranceInNetworkTier2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                coinsuranceInNetworkTier2DataTable cln = ((coinsuranceInNetworkTier2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new coinsuranceInNetworkTier2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanDeductible_Id = base.Columns["planDeductible_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanDeductible_Id = new global::System.Data.DataColumn("planDeductible_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductible_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier2Row NewcoinsuranceInNetworkTier2Row() {
                return ((coinsuranceInNetworkTier2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new coinsuranceInNetworkTier2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(coinsuranceInNetworkTier2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.coinsuranceInNetworkTier2RowChanged != null)) {
                    this.coinsuranceInNetworkTier2RowChanged(this, new coinsuranceInNetworkTier2RowChangeEvent(((coinsuranceInNetworkTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.coinsuranceInNetworkTier2RowChanging != null)) {
                    this.coinsuranceInNetworkTier2RowChanging(this, new coinsuranceInNetworkTier2RowChangeEvent(((coinsuranceInNetworkTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.coinsuranceInNetworkTier2RowDeleted != null)) {
                    this.coinsuranceInNetworkTier2RowDeleted(this, new coinsuranceInNetworkTier2RowChangeEvent(((coinsuranceInNetworkTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.coinsuranceInNetworkTier2RowDeleting != null)) {
                    this.coinsuranceInNetworkTier2RowDeleting(this, new coinsuranceInNetworkTier2RowChangeEvent(((coinsuranceInNetworkTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecoinsuranceInNetworkTier2Row(coinsuranceInNetworkTier2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "coinsuranceInNetworkTier2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class outOfNetworkIndividualDataTable : global::System.Data.TypedTableBase<outOfNetworkIndividualRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanDeductible_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualDataTable() {
                this.TableName = "outOfNetworkIndividual";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfNetworkIndividualDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected outOfNetworkIndividualDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductible_IdColumn {
                get {
                    return this.columnplanDeductible_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualRow this[int index] {
                get {
                    return ((outOfNetworkIndividualRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkIndividualRowChangeEventHandler outOfNetworkIndividualRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkIndividualRowChangeEventHandler outOfNetworkIndividualRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkIndividualRowChangeEventHandler outOfNetworkIndividualRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkIndividualRowChangeEventHandler outOfNetworkIndividualRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddoutOfNetworkIndividualRow(outOfNetworkIndividualRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualRow AddoutOfNetworkIndividualRow(string cellValue, string cellLocation, planDeductibleRow parentplanDeductibleRowByplanDeductible_outOfNetworkIndividual) {
                outOfNetworkIndividualRow rowoutOfNetworkIndividualRow = ((outOfNetworkIndividualRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanDeductibleRowByplanDeductible_outOfNetworkIndividual != null)) {
                    columnValuesArray[2] = parentplanDeductibleRowByplanDeductible_outOfNetworkIndividual[0];
                }
                rowoutOfNetworkIndividualRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowoutOfNetworkIndividualRow);
                return rowoutOfNetworkIndividualRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                outOfNetworkIndividualDataTable cln = ((outOfNetworkIndividualDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new outOfNetworkIndividualDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanDeductible_Id = base.Columns["planDeductible_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanDeductible_Id = new global::System.Data.DataColumn("planDeductible_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductible_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualRow NewoutOfNetworkIndividualRow() {
                return ((outOfNetworkIndividualRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new outOfNetworkIndividualRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(outOfNetworkIndividualRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.outOfNetworkIndividualRowChanged != null)) {
                    this.outOfNetworkIndividualRowChanged(this, new outOfNetworkIndividualRowChangeEvent(((outOfNetworkIndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.outOfNetworkIndividualRowChanging != null)) {
                    this.outOfNetworkIndividualRowChanging(this, new outOfNetworkIndividualRowChangeEvent(((outOfNetworkIndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.outOfNetworkIndividualRowDeleted != null)) {
                    this.outOfNetworkIndividualRowDeleted(this, new outOfNetworkIndividualRowChangeEvent(((outOfNetworkIndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.outOfNetworkIndividualRowDeleting != null)) {
                    this.outOfNetworkIndividualRowDeleting(this, new outOfNetworkIndividualRowChangeEvent(((outOfNetworkIndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveoutOfNetworkIndividualRow(outOfNetworkIndividualRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "outOfNetworkIndividualDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class outOfNetworkFamilyDataTable : global::System.Data.TypedTableBase<outOfNetworkFamilyRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanDeductible_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyDataTable() {
                this.TableName = "outOfNetworkFamily";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfNetworkFamilyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected outOfNetworkFamilyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductible_IdColumn {
                get {
                    return this.columnplanDeductible_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyRow this[int index] {
                get {
                    return ((outOfNetworkFamilyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkFamilyRowChangeEventHandler outOfNetworkFamilyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkFamilyRowChangeEventHandler outOfNetworkFamilyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkFamilyRowChangeEventHandler outOfNetworkFamilyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event outOfNetworkFamilyRowChangeEventHandler outOfNetworkFamilyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddoutOfNetworkFamilyRow(outOfNetworkFamilyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyRow AddoutOfNetworkFamilyRow(string cellValue, string cellLocation, planDeductibleRow parentplanDeductibleRowByplanDeductible_outOfNetworkFamily) {
                outOfNetworkFamilyRow rowoutOfNetworkFamilyRow = ((outOfNetworkFamilyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanDeductibleRowByplanDeductible_outOfNetworkFamily != null)) {
                    columnValuesArray[2] = parentplanDeductibleRowByplanDeductible_outOfNetworkFamily[0];
                }
                rowoutOfNetworkFamilyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowoutOfNetworkFamilyRow);
                return rowoutOfNetworkFamilyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                outOfNetworkFamilyDataTable cln = ((outOfNetworkFamilyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new outOfNetworkFamilyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanDeductible_Id = base.Columns["planDeductible_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanDeductible_Id = new global::System.Data.DataColumn("planDeductible_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductible_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyRow NewoutOfNetworkFamilyRow() {
                return ((outOfNetworkFamilyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new outOfNetworkFamilyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(outOfNetworkFamilyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.outOfNetworkFamilyRowChanged != null)) {
                    this.outOfNetworkFamilyRowChanged(this, new outOfNetworkFamilyRowChangeEvent(((outOfNetworkFamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.outOfNetworkFamilyRowChanging != null)) {
                    this.outOfNetworkFamilyRowChanging(this, new outOfNetworkFamilyRowChangeEvent(((outOfNetworkFamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.outOfNetworkFamilyRowDeleted != null)) {
                    this.outOfNetworkFamilyRowDeleted(this, new outOfNetworkFamilyRowChangeEvent(((outOfNetworkFamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.outOfNetworkFamilyRowDeleting != null)) {
                    this.outOfNetworkFamilyRowDeleting(this, new outOfNetworkFamilyRowChangeEvent(((outOfNetworkFamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveoutOfNetworkFamilyRow(outOfNetworkFamilyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "outOfNetworkFamilyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class combinedInOrOutNetworkIndividualDataTable : global::System.Data.TypedTableBase<combinedInOrOutNetworkIndividualRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanDeductible_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkIndividualDataTable() {
                this.TableName = "combinedInOrOutNetworkIndividual";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal combinedInOrOutNetworkIndividualDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected combinedInOrOutNetworkIndividualDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductible_IdColumn {
                get {
                    return this.columnplanDeductible_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkIndividualRow this[int index] {
                get {
                    return ((combinedInOrOutNetworkIndividualRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOrOutNetworkIndividualRowChangeEventHandler combinedInOrOutNetworkIndividualRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOrOutNetworkIndividualRowChangeEventHandler combinedInOrOutNetworkIndividualRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOrOutNetworkIndividualRowChangeEventHandler combinedInOrOutNetworkIndividualRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOrOutNetworkIndividualRowChangeEventHandler combinedInOrOutNetworkIndividualRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcombinedInOrOutNetworkIndividualRow(combinedInOrOutNetworkIndividualRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkIndividualRow AddcombinedInOrOutNetworkIndividualRow(string cellValue, string cellLocation, planDeductibleRow parentplanDeductibleRowByplanDeductible_combinedInOrOutNetworkIndividual) {
                combinedInOrOutNetworkIndividualRow rowcombinedInOrOutNetworkIndividualRow = ((combinedInOrOutNetworkIndividualRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanDeductibleRowByplanDeductible_combinedInOrOutNetworkIndividual != null)) {
                    columnValuesArray[2] = parentplanDeductibleRowByplanDeductible_combinedInOrOutNetworkIndividual[0];
                }
                rowcombinedInOrOutNetworkIndividualRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcombinedInOrOutNetworkIndividualRow);
                return rowcombinedInOrOutNetworkIndividualRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                combinedInOrOutNetworkIndividualDataTable cln = ((combinedInOrOutNetworkIndividualDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new combinedInOrOutNetworkIndividualDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanDeductible_Id = base.Columns["planDeductible_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanDeductible_Id = new global::System.Data.DataColumn("planDeductible_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductible_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkIndividualRow NewcombinedInOrOutNetworkIndividualRow() {
                return ((combinedInOrOutNetworkIndividualRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new combinedInOrOutNetworkIndividualRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(combinedInOrOutNetworkIndividualRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.combinedInOrOutNetworkIndividualRowChanged != null)) {
                    this.combinedInOrOutNetworkIndividualRowChanged(this, new combinedInOrOutNetworkIndividualRowChangeEvent(((combinedInOrOutNetworkIndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.combinedInOrOutNetworkIndividualRowChanging != null)) {
                    this.combinedInOrOutNetworkIndividualRowChanging(this, new combinedInOrOutNetworkIndividualRowChangeEvent(((combinedInOrOutNetworkIndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.combinedInOrOutNetworkIndividualRowDeleted != null)) {
                    this.combinedInOrOutNetworkIndividualRowDeleted(this, new combinedInOrOutNetworkIndividualRowChangeEvent(((combinedInOrOutNetworkIndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.combinedInOrOutNetworkIndividualRowDeleting != null)) {
                    this.combinedInOrOutNetworkIndividualRowDeleting(this, new combinedInOrOutNetworkIndividualRowChangeEvent(((combinedInOrOutNetworkIndividualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecombinedInOrOutNetworkIndividualRow(combinedInOrOutNetworkIndividualRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "combinedInOrOutNetworkIndividualDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class combinedInOrOutNetworkFamilyDataTable : global::System.Data.TypedTableBase<combinedInOrOutNetworkFamilyRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnplanDeductible_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkFamilyDataTable() {
                this.TableName = "combinedInOrOutNetworkFamily";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal combinedInOrOutNetworkFamilyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected combinedInOrOutNetworkFamilyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn planDeductible_IdColumn {
                get {
                    return this.columnplanDeductible_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkFamilyRow this[int index] {
                get {
                    return ((combinedInOrOutNetworkFamilyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOrOutNetworkFamilyRowChangeEventHandler combinedInOrOutNetworkFamilyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOrOutNetworkFamilyRowChangeEventHandler combinedInOrOutNetworkFamilyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOrOutNetworkFamilyRowChangeEventHandler combinedInOrOutNetworkFamilyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event combinedInOrOutNetworkFamilyRowChangeEventHandler combinedInOrOutNetworkFamilyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcombinedInOrOutNetworkFamilyRow(combinedInOrOutNetworkFamilyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkFamilyRow AddcombinedInOrOutNetworkFamilyRow(string cellValue, string cellLocation, planDeductibleRow parentplanDeductibleRowByplanDeductible_combinedInOrOutNetworkFamily) {
                combinedInOrOutNetworkFamilyRow rowcombinedInOrOutNetworkFamilyRow = ((combinedInOrOutNetworkFamilyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentplanDeductibleRowByplanDeductible_combinedInOrOutNetworkFamily != null)) {
                    columnValuesArray[2] = parentplanDeductibleRowByplanDeductible_combinedInOrOutNetworkFamily[0];
                }
                rowcombinedInOrOutNetworkFamilyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcombinedInOrOutNetworkFamilyRow);
                return rowcombinedInOrOutNetworkFamilyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                combinedInOrOutNetworkFamilyDataTable cln = ((combinedInOrOutNetworkFamilyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new combinedInOrOutNetworkFamilyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnplanDeductible_Id = base.Columns["planDeductible_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnplanDeductible_Id = new global::System.Data.DataColumn("planDeductible_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnplanDeductible_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkFamilyRow NewcombinedInOrOutNetworkFamilyRow() {
                return ((combinedInOrOutNetworkFamilyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new combinedInOrOutNetworkFamilyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(combinedInOrOutNetworkFamilyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.combinedInOrOutNetworkFamilyRowChanged != null)) {
                    this.combinedInOrOutNetworkFamilyRowChanged(this, new combinedInOrOutNetworkFamilyRowChangeEvent(((combinedInOrOutNetworkFamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.combinedInOrOutNetworkFamilyRowChanging != null)) {
                    this.combinedInOrOutNetworkFamilyRowChanging(this, new combinedInOrOutNetworkFamilyRowChangeEvent(((combinedInOrOutNetworkFamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.combinedInOrOutNetworkFamilyRowDeleted != null)) {
                    this.combinedInOrOutNetworkFamilyRowDeleted(this, new combinedInOrOutNetworkFamilyRowChangeEvent(((combinedInOrOutNetworkFamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.combinedInOrOutNetworkFamilyRowDeleting != null)) {
                    this.combinedInOrOutNetworkFamilyRowDeleting(this, new combinedInOrOutNetworkFamilyRowChangeEvent(((combinedInOrOutNetworkFamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecombinedInOrOutNetworkFamilyRow(combinedInOrOutNetworkFamilyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "combinedInOrOutNetworkFamilyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class serviceVisitListDataTable : global::System.Data.TypedTableBase<serviceVisitListRow> {
            
            private global::System.Data.DataColumn columnserviceVisitList_Id;
            
            private global::System.Data.DataColumn columncostShareVariance_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitListDataTable() {
                this.TableName = "serviceVisitList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal serviceVisitListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected serviceVisitListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn serviceVisitList_IdColumn {
                get {
                    return this.columnserviceVisitList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn costShareVariance_IdColumn {
                get {
                    return this.columncostShareVariance_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitListRow this[int index] {
                get {
                    return ((serviceVisitListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceVisitListRowChangeEventHandler serviceVisitListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceVisitListRowChangeEventHandler serviceVisitListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceVisitListRowChangeEventHandler serviceVisitListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceVisitListRowChangeEventHandler serviceVisitListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddserviceVisitListRow(serviceVisitListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitListRow AddserviceVisitListRow(costShareVarianceRow parentcostShareVarianceRowBycostShareVariance_serviceVisitList) {
                serviceVisitListRow rowserviceVisitListRow = ((serviceVisitListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentcostShareVarianceRowBycostShareVariance_serviceVisitList != null)) {
                    columnValuesArray[1] = parentcostShareVarianceRowBycostShareVariance_serviceVisitList[0];
                }
                rowserviceVisitListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowserviceVisitListRow);
                return rowserviceVisitListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                serviceVisitListDataTable cln = ((serviceVisitListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new serviceVisitListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnserviceVisitList_Id = base.Columns["serviceVisitList_Id"];
                this.columncostShareVariance_Id = base.Columns["costShareVariance_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnserviceVisitList_Id = new global::System.Data.DataColumn("serviceVisitList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnserviceVisitList_Id);
                this.columncostShareVariance_Id = new global::System.Data.DataColumn("costShareVariance_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columncostShareVariance_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnserviceVisitList_Id}, true));
                this.columnserviceVisitList_Id.AutoIncrement = true;
                this.columnserviceVisitList_Id.AllowDBNull = false;
                this.columnserviceVisitList_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitListRow NewserviceVisitListRow() {
                return ((serviceVisitListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new serviceVisitListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(serviceVisitListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.serviceVisitListRowChanged != null)) {
                    this.serviceVisitListRowChanged(this, new serviceVisitListRowChangeEvent(((serviceVisitListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.serviceVisitListRowChanging != null)) {
                    this.serviceVisitListRowChanging(this, new serviceVisitListRowChangeEvent(((serviceVisitListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.serviceVisitListRowDeleted != null)) {
                    this.serviceVisitListRowDeleted(this, new serviceVisitListRowChangeEvent(((serviceVisitListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.serviceVisitListRowDeleting != null)) {
                    this.serviceVisitListRowDeleting(this, new serviceVisitListRowChangeEvent(((serviceVisitListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveserviceVisitListRow(serviceVisitListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "serviceVisitListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class serviceVisitDataTable : global::System.Data.TypedTableBase<serviceVisitRow> {
            
            private global::System.Data.DataColumn columnserviceVisit_Id;
            
            private global::System.Data.DataColumn columnserviceVisitList_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitDataTable() {
                this.TableName = "serviceVisit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal serviceVisitDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected serviceVisitDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn serviceVisit_IdColumn {
                get {
                    return this.columnserviceVisit_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn serviceVisitList_IdColumn {
                get {
                    return this.columnserviceVisitList_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRow this[int index] {
                get {
                    return ((serviceVisitRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceVisitRowChangeEventHandler serviceVisitRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceVisitRowChangeEventHandler serviceVisitRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceVisitRowChangeEventHandler serviceVisitRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event serviceVisitRowChangeEventHandler serviceVisitRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddserviceVisitRow(serviceVisitRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRow AddserviceVisitRow(serviceVisitListRow parentserviceVisitListRowByserviceVisitList_serviceVisit) {
                serviceVisitRow rowserviceVisitRow = ((serviceVisitRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentserviceVisitListRowByserviceVisitList_serviceVisit != null)) {
                    columnValuesArray[1] = parentserviceVisitListRowByserviceVisitList_serviceVisit[0];
                }
                rowserviceVisitRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowserviceVisitRow);
                return rowserviceVisitRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                serviceVisitDataTable cln = ((serviceVisitDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new serviceVisitDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnserviceVisit_Id = base.Columns["serviceVisit_Id"];
                this.columnserviceVisitList_Id = base.Columns["serviceVisitList_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnserviceVisit_Id = new global::System.Data.DataColumn("serviceVisit_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnserviceVisit_Id);
                this.columnserviceVisitList_Id = new global::System.Data.DataColumn("serviceVisitList_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnserviceVisitList_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnserviceVisit_Id}, true));
                this.columnserviceVisit_Id.AutoIncrement = true;
                this.columnserviceVisit_Id.AllowDBNull = false;
                this.columnserviceVisit_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRow NewserviceVisitRow() {
                return ((serviceVisitRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new serviceVisitRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(serviceVisitRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.serviceVisitRowChanged != null)) {
                    this.serviceVisitRowChanged(this, new serviceVisitRowChangeEvent(((serviceVisitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.serviceVisitRowChanging != null)) {
                    this.serviceVisitRowChanging(this, new serviceVisitRowChangeEvent(((serviceVisitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.serviceVisitRowDeleted != null)) {
                    this.serviceVisitRowDeleted(this, new serviceVisitRowChangeEvent(((serviceVisitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.serviceVisitRowDeleting != null)) {
                    this.serviceVisitRowDeleting(this, new serviceVisitRowChangeEvent(((serviceVisitRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveserviceVisitRow(serviceVisitRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "serviceVisitDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class visitTypeDataTable : global::System.Data.TypedTableBase<visitTypeRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnserviceVisit_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public visitTypeDataTable() {
                this.TableName = "visitType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal visitTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected visitTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn serviceVisit_IdColumn {
                get {
                    return this.columnserviceVisit_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public visitTypeRow this[int index] {
                get {
                    return ((visitTypeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event visitTypeRowChangeEventHandler visitTypeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event visitTypeRowChangeEventHandler visitTypeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event visitTypeRowChangeEventHandler visitTypeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event visitTypeRowChangeEventHandler visitTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvisitTypeRow(visitTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public visitTypeRow AddvisitTypeRow(string cellValue, string cellLocation, serviceVisitRow parentserviceVisitRowByserviceVisit_visitType) {
                visitTypeRow rowvisitTypeRow = ((visitTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentserviceVisitRowByserviceVisit_visitType != null)) {
                    columnValuesArray[2] = parentserviceVisitRowByserviceVisit_visitType[0];
                }
                rowvisitTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvisitTypeRow);
                return rowvisitTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                visitTypeDataTable cln = ((visitTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new visitTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnserviceVisit_Id = base.Columns["serviceVisit_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnserviceVisit_Id = new global::System.Data.DataColumn("serviceVisit_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnserviceVisit_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public visitTypeRow NewvisitTypeRow() {
                return ((visitTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new visitTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(visitTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.visitTypeRowChanged != null)) {
                    this.visitTypeRowChanged(this, new visitTypeRowChangeEvent(((visitTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.visitTypeRowChanging != null)) {
                    this.visitTypeRowChanging(this, new visitTypeRowChangeEvent(((visitTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.visitTypeRowDeleted != null)) {
                    this.visitTypeRowDeleted(this, new visitTypeRowChangeEvent(((visitTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.visitTypeRowDeleting != null)) {
                    this.visitTypeRowDeleting(this, new visitTypeRowChangeEvent(((visitTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevisitTypeRow(visitTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "visitTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class copayInNetworkTier1DataTable : global::System.Data.TypedTableBase<copayInNetworkTier1Row> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnserviceVisit_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier1DataTable() {
                this.TableName = "copayInNetworkTier1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal copayInNetworkTier1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected copayInNetworkTier1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn serviceVisit_IdColumn {
                get {
                    return this.columnserviceVisit_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier1Row this[int index] {
                get {
                    return ((copayInNetworkTier1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event copayInNetworkTier1RowChangeEventHandler copayInNetworkTier1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event copayInNetworkTier1RowChangeEventHandler copayInNetworkTier1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event copayInNetworkTier1RowChangeEventHandler copayInNetworkTier1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event copayInNetworkTier1RowChangeEventHandler copayInNetworkTier1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcopayInNetworkTier1Row(copayInNetworkTier1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier1Row AddcopayInNetworkTier1Row(string cellValue, string cellLocation, serviceVisitRow parentserviceVisitRowByserviceVisit_copayInNetworkTier1) {
                copayInNetworkTier1Row rowcopayInNetworkTier1Row = ((copayInNetworkTier1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentserviceVisitRowByserviceVisit_copayInNetworkTier1 != null)) {
                    columnValuesArray[2] = parentserviceVisitRowByserviceVisit_copayInNetworkTier1[0];
                }
                rowcopayInNetworkTier1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowcopayInNetworkTier1Row);
                return rowcopayInNetworkTier1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                copayInNetworkTier1DataTable cln = ((copayInNetworkTier1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new copayInNetworkTier1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnserviceVisit_Id = base.Columns["serviceVisit_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnserviceVisit_Id = new global::System.Data.DataColumn("serviceVisit_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnserviceVisit_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier1Row NewcopayInNetworkTier1Row() {
                return ((copayInNetworkTier1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new copayInNetworkTier1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(copayInNetworkTier1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.copayInNetworkTier1RowChanged != null)) {
                    this.copayInNetworkTier1RowChanged(this, new copayInNetworkTier1RowChangeEvent(((copayInNetworkTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.copayInNetworkTier1RowChanging != null)) {
                    this.copayInNetworkTier1RowChanging(this, new copayInNetworkTier1RowChangeEvent(((copayInNetworkTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.copayInNetworkTier1RowDeleted != null)) {
                    this.copayInNetworkTier1RowDeleted(this, new copayInNetworkTier1RowChangeEvent(((copayInNetworkTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.copayInNetworkTier1RowDeleting != null)) {
                    this.copayInNetworkTier1RowDeleting(this, new copayInNetworkTier1RowChangeEvent(((copayInNetworkTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecopayInNetworkTier1Row(copayInNetworkTier1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "copayInNetworkTier1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class copayInNetworkTier2DataTable : global::System.Data.TypedTableBase<copayInNetworkTier2Row> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnserviceVisit_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier2DataTable() {
                this.TableName = "copayInNetworkTier2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal copayInNetworkTier2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected copayInNetworkTier2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn serviceVisit_IdColumn {
                get {
                    return this.columnserviceVisit_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier2Row this[int index] {
                get {
                    return ((copayInNetworkTier2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event copayInNetworkTier2RowChangeEventHandler copayInNetworkTier2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event copayInNetworkTier2RowChangeEventHandler copayInNetworkTier2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event copayInNetworkTier2RowChangeEventHandler copayInNetworkTier2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event copayInNetworkTier2RowChangeEventHandler copayInNetworkTier2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcopayInNetworkTier2Row(copayInNetworkTier2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier2Row AddcopayInNetworkTier2Row(string cellValue, string cellLocation, serviceVisitRow parentserviceVisitRowByserviceVisit_copayInNetworkTier2) {
                copayInNetworkTier2Row rowcopayInNetworkTier2Row = ((copayInNetworkTier2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentserviceVisitRowByserviceVisit_copayInNetworkTier2 != null)) {
                    columnValuesArray[2] = parentserviceVisitRowByserviceVisit_copayInNetworkTier2[0];
                }
                rowcopayInNetworkTier2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowcopayInNetworkTier2Row);
                return rowcopayInNetworkTier2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                copayInNetworkTier2DataTable cln = ((copayInNetworkTier2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new copayInNetworkTier2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnserviceVisit_Id = base.Columns["serviceVisit_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnserviceVisit_Id = new global::System.Data.DataColumn("serviceVisit_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnserviceVisit_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier2Row NewcopayInNetworkTier2Row() {
                return ((copayInNetworkTier2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new copayInNetworkTier2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(copayInNetworkTier2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.copayInNetworkTier2RowChanged != null)) {
                    this.copayInNetworkTier2RowChanged(this, new copayInNetworkTier2RowChangeEvent(((copayInNetworkTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.copayInNetworkTier2RowChanging != null)) {
                    this.copayInNetworkTier2RowChanging(this, new copayInNetworkTier2RowChangeEvent(((copayInNetworkTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.copayInNetworkTier2RowDeleted != null)) {
                    this.copayInNetworkTier2RowDeleted(this, new copayInNetworkTier2RowChangeEvent(((copayInNetworkTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.copayInNetworkTier2RowDeleting != null)) {
                    this.copayInNetworkTier2RowDeleting(this, new copayInNetworkTier2RowChangeEvent(((copayInNetworkTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecopayInNetworkTier2Row(copayInNetworkTier2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "copayInNetworkTier2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class copayOutOfNetworkDataTable : global::System.Data.TypedTableBase<copayOutOfNetworkRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnserviceVisit_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayOutOfNetworkDataTable() {
                this.TableName = "copayOutOfNetwork";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal copayOutOfNetworkDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected copayOutOfNetworkDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn serviceVisit_IdColumn {
                get {
                    return this.columnserviceVisit_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayOutOfNetworkRow this[int index] {
                get {
                    return ((copayOutOfNetworkRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event copayOutOfNetworkRowChangeEventHandler copayOutOfNetworkRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event copayOutOfNetworkRowChangeEventHandler copayOutOfNetworkRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event copayOutOfNetworkRowChangeEventHandler copayOutOfNetworkRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event copayOutOfNetworkRowChangeEventHandler copayOutOfNetworkRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcopayOutOfNetworkRow(copayOutOfNetworkRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayOutOfNetworkRow AddcopayOutOfNetworkRow(string cellValue, string cellLocation, serviceVisitRow parentserviceVisitRowByserviceVisit_copayOutOfNetwork) {
                copayOutOfNetworkRow rowcopayOutOfNetworkRow = ((copayOutOfNetworkRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentserviceVisitRowByserviceVisit_copayOutOfNetwork != null)) {
                    columnValuesArray[2] = parentserviceVisitRowByserviceVisit_copayOutOfNetwork[0];
                }
                rowcopayOutOfNetworkRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcopayOutOfNetworkRow);
                return rowcopayOutOfNetworkRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                copayOutOfNetworkDataTable cln = ((copayOutOfNetworkDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new copayOutOfNetworkDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnserviceVisit_Id = base.Columns["serviceVisit_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnserviceVisit_Id = new global::System.Data.DataColumn("serviceVisit_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnserviceVisit_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayOutOfNetworkRow NewcopayOutOfNetworkRow() {
                return ((copayOutOfNetworkRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new copayOutOfNetworkRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(copayOutOfNetworkRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.copayOutOfNetworkRowChanged != null)) {
                    this.copayOutOfNetworkRowChanged(this, new copayOutOfNetworkRowChangeEvent(((copayOutOfNetworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.copayOutOfNetworkRowChanging != null)) {
                    this.copayOutOfNetworkRowChanging(this, new copayOutOfNetworkRowChangeEvent(((copayOutOfNetworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.copayOutOfNetworkRowDeleted != null)) {
                    this.copayOutOfNetworkRowDeleted(this, new copayOutOfNetworkRowChangeEvent(((copayOutOfNetworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.copayOutOfNetworkRowDeleting != null)) {
                    this.copayOutOfNetworkRowDeleting(this, new copayOutOfNetworkRowChangeEvent(((copayOutOfNetworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecopayOutOfNetworkRow(copayOutOfNetworkRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "copayOutOfNetworkDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class coInsuranceInNetworkTier1DataTable : global::System.Data.TypedTableBase<coInsuranceInNetworkTier1Row> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnserviceVisit_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier1DataTable() {
                this.TableName = "coInsuranceInNetworkTier1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal coInsuranceInNetworkTier1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected coInsuranceInNetworkTier1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn serviceVisit_IdColumn {
                get {
                    return this.columnserviceVisit_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier1Row this[int index] {
                get {
                    return ((coInsuranceInNetworkTier1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coInsuranceInNetworkTier1RowChangeEventHandler coInsuranceInNetworkTier1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coInsuranceInNetworkTier1RowChangeEventHandler coInsuranceInNetworkTier1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coInsuranceInNetworkTier1RowChangeEventHandler coInsuranceInNetworkTier1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coInsuranceInNetworkTier1RowChangeEventHandler coInsuranceInNetworkTier1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcoInsuranceInNetworkTier1Row(coInsuranceInNetworkTier1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier1Row AddcoInsuranceInNetworkTier1Row(string cellValue, string cellLocation, serviceVisitRow parentserviceVisitRowByserviceVisit_coInsuranceInNetworkTier1) {
                coInsuranceInNetworkTier1Row rowcoInsuranceInNetworkTier1Row = ((coInsuranceInNetworkTier1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentserviceVisitRowByserviceVisit_coInsuranceInNetworkTier1 != null)) {
                    columnValuesArray[2] = parentserviceVisitRowByserviceVisit_coInsuranceInNetworkTier1[0];
                }
                rowcoInsuranceInNetworkTier1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowcoInsuranceInNetworkTier1Row);
                return rowcoInsuranceInNetworkTier1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                coInsuranceInNetworkTier1DataTable cln = ((coInsuranceInNetworkTier1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new coInsuranceInNetworkTier1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnserviceVisit_Id = base.Columns["serviceVisit_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnserviceVisit_Id = new global::System.Data.DataColumn("serviceVisit_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnserviceVisit_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier1Row NewcoInsuranceInNetworkTier1Row() {
                return ((coInsuranceInNetworkTier1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new coInsuranceInNetworkTier1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(coInsuranceInNetworkTier1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.coInsuranceInNetworkTier1RowChanged != null)) {
                    this.coInsuranceInNetworkTier1RowChanged(this, new coInsuranceInNetworkTier1RowChangeEvent(((coInsuranceInNetworkTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.coInsuranceInNetworkTier1RowChanging != null)) {
                    this.coInsuranceInNetworkTier1RowChanging(this, new coInsuranceInNetworkTier1RowChangeEvent(((coInsuranceInNetworkTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.coInsuranceInNetworkTier1RowDeleted != null)) {
                    this.coInsuranceInNetworkTier1RowDeleted(this, new coInsuranceInNetworkTier1RowChangeEvent(((coInsuranceInNetworkTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.coInsuranceInNetworkTier1RowDeleting != null)) {
                    this.coInsuranceInNetworkTier1RowDeleting(this, new coInsuranceInNetworkTier1RowChangeEvent(((coInsuranceInNetworkTier1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecoInsuranceInNetworkTier1Row(coInsuranceInNetworkTier1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "coInsuranceInNetworkTier1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class coInsuranceInNetworkTier2DataTable : global::System.Data.TypedTableBase<coInsuranceInNetworkTier2Row> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnserviceVisit_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier2DataTable() {
                this.TableName = "coInsuranceInNetworkTier2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal coInsuranceInNetworkTier2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected coInsuranceInNetworkTier2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn serviceVisit_IdColumn {
                get {
                    return this.columnserviceVisit_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier2Row this[int index] {
                get {
                    return ((coInsuranceInNetworkTier2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coInsuranceInNetworkTier2RowChangeEventHandler coInsuranceInNetworkTier2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coInsuranceInNetworkTier2RowChangeEventHandler coInsuranceInNetworkTier2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coInsuranceInNetworkTier2RowChangeEventHandler coInsuranceInNetworkTier2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coInsuranceInNetworkTier2RowChangeEventHandler coInsuranceInNetworkTier2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcoInsuranceInNetworkTier2Row(coInsuranceInNetworkTier2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier2Row AddcoInsuranceInNetworkTier2Row(string cellValue, string cellLocation, serviceVisitRow parentserviceVisitRowByserviceVisit_coInsuranceInNetworkTier2) {
                coInsuranceInNetworkTier2Row rowcoInsuranceInNetworkTier2Row = ((coInsuranceInNetworkTier2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentserviceVisitRowByserviceVisit_coInsuranceInNetworkTier2 != null)) {
                    columnValuesArray[2] = parentserviceVisitRowByserviceVisit_coInsuranceInNetworkTier2[0];
                }
                rowcoInsuranceInNetworkTier2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowcoInsuranceInNetworkTier2Row);
                return rowcoInsuranceInNetworkTier2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                coInsuranceInNetworkTier2DataTable cln = ((coInsuranceInNetworkTier2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new coInsuranceInNetworkTier2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnserviceVisit_Id = base.Columns["serviceVisit_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnserviceVisit_Id = new global::System.Data.DataColumn("serviceVisit_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnserviceVisit_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier2Row NewcoInsuranceInNetworkTier2Row() {
                return ((coInsuranceInNetworkTier2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new coInsuranceInNetworkTier2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(coInsuranceInNetworkTier2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.coInsuranceInNetworkTier2RowChanged != null)) {
                    this.coInsuranceInNetworkTier2RowChanged(this, new coInsuranceInNetworkTier2RowChangeEvent(((coInsuranceInNetworkTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.coInsuranceInNetworkTier2RowChanging != null)) {
                    this.coInsuranceInNetworkTier2RowChanging(this, new coInsuranceInNetworkTier2RowChangeEvent(((coInsuranceInNetworkTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.coInsuranceInNetworkTier2RowDeleted != null)) {
                    this.coInsuranceInNetworkTier2RowDeleted(this, new coInsuranceInNetworkTier2RowChangeEvent(((coInsuranceInNetworkTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.coInsuranceInNetworkTier2RowDeleting != null)) {
                    this.coInsuranceInNetworkTier2RowDeleting(this, new coInsuranceInNetworkTier2RowChangeEvent(((coInsuranceInNetworkTier2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecoInsuranceInNetworkTier2Row(coInsuranceInNetworkTier2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "coInsuranceInNetworkTier2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class coInsuranceOutOfNetworkDataTable : global::System.Data.TypedTableBase<coInsuranceOutOfNetworkRow> {
            
            private global::System.Data.DataColumn columncellValue;
            
            private global::System.Data.DataColumn columncellLocation;
            
            private global::System.Data.DataColumn columnserviceVisit_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceOutOfNetworkDataTable() {
                this.TableName = "coInsuranceOutOfNetwork";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal coInsuranceOutOfNetworkDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected coInsuranceOutOfNetworkDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellValueColumn {
                get {
                    return this.columncellValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cellLocationColumn {
                get {
                    return this.columncellLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn serviceVisit_IdColumn {
                get {
                    return this.columnserviceVisit_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceOutOfNetworkRow this[int index] {
                get {
                    return ((coInsuranceOutOfNetworkRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coInsuranceOutOfNetworkRowChangeEventHandler coInsuranceOutOfNetworkRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coInsuranceOutOfNetworkRowChangeEventHandler coInsuranceOutOfNetworkRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coInsuranceOutOfNetworkRowChangeEventHandler coInsuranceOutOfNetworkRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event coInsuranceOutOfNetworkRowChangeEventHandler coInsuranceOutOfNetworkRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcoInsuranceOutOfNetworkRow(coInsuranceOutOfNetworkRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceOutOfNetworkRow AddcoInsuranceOutOfNetworkRow(string cellValue, string cellLocation, serviceVisitRow parentserviceVisitRowByserviceVisit_coInsuranceOutOfNetwork) {
                coInsuranceOutOfNetworkRow rowcoInsuranceOutOfNetworkRow = ((coInsuranceOutOfNetworkRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cellValue,
                        cellLocation,
                        null};
                if ((parentserviceVisitRowByserviceVisit_coInsuranceOutOfNetwork != null)) {
                    columnValuesArray[2] = parentserviceVisitRowByserviceVisit_coInsuranceOutOfNetwork[0];
                }
                rowcoInsuranceOutOfNetworkRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcoInsuranceOutOfNetworkRow);
                return rowcoInsuranceOutOfNetworkRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                coInsuranceOutOfNetworkDataTable cln = ((coInsuranceOutOfNetworkDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new coInsuranceOutOfNetworkDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncellValue = base.Columns["cellValue"];
                this.columncellLocation = base.Columns["cellLocation"];
                this.columnserviceVisit_Id = base.Columns["serviceVisit_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncellValue = new global::System.Data.DataColumn("cellValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellValue);
                this.columncellLocation = new global::System.Data.DataColumn("cellLocation", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columncellLocation);
                this.columnserviceVisit_Id = new global::System.Data.DataColumn("serviceVisit_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnserviceVisit_Id);
                this.columncellLocation.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceOutOfNetworkRow NewcoInsuranceOutOfNetworkRow() {
                return ((coInsuranceOutOfNetworkRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new coInsuranceOutOfNetworkRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(coInsuranceOutOfNetworkRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.coInsuranceOutOfNetworkRowChanged != null)) {
                    this.coInsuranceOutOfNetworkRowChanged(this, new coInsuranceOutOfNetworkRowChangeEvent(((coInsuranceOutOfNetworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.coInsuranceOutOfNetworkRowChanging != null)) {
                    this.coInsuranceOutOfNetworkRowChanging(this, new coInsuranceOutOfNetworkRowChangeEvent(((coInsuranceOutOfNetworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.coInsuranceOutOfNetworkRowDeleted != null)) {
                    this.coInsuranceOutOfNetworkRowDeleted(this, new coInsuranceOutOfNetworkRowChangeEvent(((coInsuranceOutOfNetworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.coInsuranceOutOfNetworkRowDeleting != null)) {
                    this.coInsuranceOutOfNetworkRowDeleting(this, new coInsuranceOutOfNetworkRowChangeEvent(((coInsuranceOutOfNetworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecoInsuranceOutOfNetworkRow(coInsuranceOutOfNetworkRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                planBenefitTemplateVO ds = new planBenefitTemplateVO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "coInsuranceOutOfNetworkDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class planMarketingNameRow : global::System.Data.DataRow {
            
            private planMarketingNameDataTable tableplanMarketingName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planMarketingNameRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplanMarketingName = ((planMarketingNameDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableplanMarketingName.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'planMarketingName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanMarketingName.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableplanMarketingName.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'planMarketingName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanMarketingName.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableplanMarketingName.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'planMarketingName\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanMarketingName.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tableplanMarketingName.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'planMarketingName\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableplanMarketingName.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_planMarketingName"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_planMarketingName"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_planMarketingName"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_planMarketingName"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableplanMarketingName.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableplanMarketingName.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableplanMarketingName.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableplanMarketingName.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableplanMarketingName.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableplanMarketingName.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tableplanMarketingName.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tableplanMarketingName.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class metalLevelRow : global::System.Data.DataRow {
            
            private metalLevelDataTable tablemetalLevel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal metalLevelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemetalLevel = ((metalLevelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablemetalLevel.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'metalLevel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalLevel.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablemetalLevel.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'metalLevel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalLevel.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablemetalLevel.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'metalLevel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalLevel.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tablemetalLevel.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'metalLevel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemetalLevel.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_metalLevel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_metalLevel"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_metalLevel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_metalLevel"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablemetalLevel.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablemetalLevel.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablemetalLevel.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablemetalLevel.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablemetalLevel.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablemetalLevel.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tablemetalLevel.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tablemetalLevel.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class packagesListRow : global::System.Data.DataRow {
            
            private packagesListDataTable tablepackagesList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal packagesListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepackagesList = ((packagesListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int packagesList_Id {
                get {
                    return ((int)(this[this.tablepackagesList.packagesList_IdColumn]));
                }
                set {
                    this[this.tablepackagesList.packagesList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesRow[] GetpackagesRows() {
                if ((this.Table.ChildRelations["packagesList_packages"] == null)) {
                    return new packagesRow[0];
                }
                else {
                    return ((packagesRow[])(base.GetChildRows(this.Table.ChildRelations["packagesList_packages"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class packagesRow : global::System.Data.DataRow {
            
            private packagesDataTable tablepackages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal packagesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepackages = ((packagesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int packages_Id {
                get {
                    return ((int)(this[this.tablepackages.packages_IdColumn]));
                }
                set {
                    this[this.tablepackages.packages_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int packagesList_Id {
                get {
                    try {
                        return ((int)(this[this.tablepackages.packagesList_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'packagesList_Id\' in table \'packages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepackages.packagesList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesListRow packagesListRow {
                get {
                    return ((packagesListRow)(this.GetParentRow(this.Table.ParentRelations["packagesList_packages"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["packagesList_packages"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspackagesList_IdNull() {
                return this.IsNull(this.tablepackages.packagesList_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpackagesList_IdNull() {
                this[this.tablepackages.packagesList_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public headerRow[] GetheaderRows() {
                if ((this.Table.ChildRelations["packages_header"] == null)) {
                    return new headerRow[0];
                }
                else {
                    return ((headerRow[])(base.GetChildRows(this.Table.ChildRelations["packages_header"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsListRow[] GetbenefitsListRows() {
                if ((this.Table.ChildRelations["packages_benefitsList"] == null)) {
                    return new benefitsListRow[0];
                }
                else {
                    return ((benefitsListRow[])(base.GetChildRows(this.Table.ChildRelations["packages_benefitsList"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansListRow[] GetplansListRows() {
                if ((this.Table.ChildRelations["packages_plansList"] == null)) {
                    return new plansListRow[0];
                }
                else {
                    return ((plansListRow[])(base.GetChildRows(this.Table.ChildRelations["packages_plansList"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class headerRow : global::System.Data.DataRow {
            
            private headerDataTable tableheader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal headerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableheader = ((headerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string templateVersion {
                get {
                    try {
                        return ((string)(this[this.tableheader.templateVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'templateVersion\' in table \'header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableheader.templateVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int header_Id {
                get {
                    return ((int)(this[this.tableheader.header_IdColumn]));
                }
                set {
                    this[this.tableheader.header_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int packages_Id {
                get {
                    try {
                        return ((int)(this[this.tableheader.packages_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'packages_Id\' in table \'header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableheader.packages_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesRow packagesRow {
                get {
                    return ((packagesRow)(this.GetParentRow(this.Table.ParentRelations["packages_header"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["packages_header"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstemplateVersionNull() {
                return this.IsNull(this.tableheader.templateVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettemplateVersionNull() {
                this[this.tableheader.templateVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ispackages_IdNull() {
                return this.IsNull(this.tableheader.packages_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setpackages_IdNull() {
                this[this.tableheader.packages_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerIdRow[] GetissuerIdRows() {
                if ((this.Table.ChildRelations["header_issuerId"] == null)) {
                    return new issuerIdRow[0];
                }
                else {
                    return ((issuerIdRow[])(base.GetChildRows(this.Table.ChildRelations["header_issuerId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public statePostalCodeRow[] GetstatePostalCodeRows() {
                if ((this.Table.ChildRelations["header_statePostalCode"] == null)) {
                    return new statePostalCodeRow[0];
                }
                else {
                    return ((statePostalCodeRow[])(base.GetChildRows(this.Table.ChildRelations["header_statePostalCode"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public marketCoverageRow[] GetmarketCoverageRows() {
                if ((this.Table.ChildRelations["header_marketCoverage"] == null)) {
                    return new marketCoverageRow[0];
                }
                else {
                    return ((marketCoverageRow[])(base.GetChildRows(this.Table.ChildRelations["header_marketCoverage"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dentalPlanOnlyIndRow[] GetdentalPlanOnlyIndRows() {
                if ((this.Table.ChildRelations["header_dentalPlanOnlyInd"] == null)) {
                    return new dentalPlanOnlyIndRow[0];
                }
                else {
                    return ((dentalPlanOnlyIndRow[])(base.GetChildRows(this.Table.ChildRelations["header_dentalPlanOnlyInd"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tinRow[] GettinRows() {
                if ((this.Table.ChildRelations["header_tin"] == null)) {
                    return new tinRow[0];
                }
                else {
                    return ((tinRow[])(base.GetChildRows(this.Table.ChildRelations["header_tin"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class issuerIdRow : global::System.Data.DataRow {
            
            private issuerIdDataTable tableissuerId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal issuerIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableissuerId = ((issuerIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableissuerId.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'issuerId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableissuerId.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableissuerId.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'issuerId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableissuerId.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int header_Id {
                get {
                    try {
                        return ((int)(this[this.tableissuerId.header_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'header_Id\' in table \'issuerId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableissuerId.header_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public headerRow headerRow {
                get {
                    return ((headerRow)(this.GetParentRow(this.Table.ParentRelations["header_issuerId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["header_issuerId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableissuerId.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableissuerId.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableissuerId.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableissuerId.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isheader_IdNull() {
                return this.IsNull(this.tableissuerId.header_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setheader_IdNull() {
                this[this.tableissuerId.header_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class statePostalCodeRow : global::System.Data.DataRow {
            
            private statePostalCodeDataTable tablestatePostalCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal statePostalCodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestatePostalCode = ((statePostalCodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablestatePostalCode.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'statePostalCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestatePostalCode.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablestatePostalCode.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'statePostalCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestatePostalCode.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int header_Id {
                get {
                    try {
                        return ((int)(this[this.tablestatePostalCode.header_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'header_Id\' in table \'statePostalCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestatePostalCode.header_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public headerRow headerRow {
                get {
                    return ((headerRow)(this.GetParentRow(this.Table.ParentRelations["header_statePostalCode"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["header_statePostalCode"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablestatePostalCode.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablestatePostalCode.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablestatePostalCode.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablestatePostalCode.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isheader_IdNull() {
                return this.IsNull(this.tablestatePostalCode.header_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setheader_IdNull() {
                this[this.tablestatePostalCode.header_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class marketCoverageRow : global::System.Data.DataRow {
            
            private marketCoverageDataTable tablemarketCoverage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal marketCoverageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemarketCoverage = ((marketCoverageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablemarketCoverage.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'marketCoverage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarketCoverage.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablemarketCoverage.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'marketCoverage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarketCoverage.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int header_Id {
                get {
                    try {
                        return ((int)(this[this.tablemarketCoverage.header_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'header_Id\' in table \'marketCoverage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarketCoverage.header_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public headerRow headerRow {
                get {
                    return ((headerRow)(this.GetParentRow(this.Table.ParentRelations["header_marketCoverage"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["header_marketCoverage"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablemarketCoverage.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablemarketCoverage.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablemarketCoverage.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablemarketCoverage.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isheader_IdNull() {
                return this.IsNull(this.tablemarketCoverage.header_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setheader_IdNull() {
                this[this.tablemarketCoverage.header_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dentalPlanOnlyIndRow : global::System.Data.DataRow {
            
            private dentalPlanOnlyIndDataTable tabledentalPlanOnlyInd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dentalPlanOnlyIndRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledentalPlanOnlyInd = ((dentalPlanOnlyIndDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tabledentalPlanOnlyInd.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'dentalPlanOnlyInd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledentalPlanOnlyInd.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tabledentalPlanOnlyInd.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'dentalPlanOnlyInd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledentalPlanOnlyInd.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int header_Id {
                get {
                    try {
                        return ((int)(this[this.tabledentalPlanOnlyInd.header_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'header_Id\' in table \'dentalPlanOnlyInd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledentalPlanOnlyInd.header_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public headerRow headerRow {
                get {
                    return ((headerRow)(this.GetParentRow(this.Table.ParentRelations["header_dentalPlanOnlyInd"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["header_dentalPlanOnlyInd"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tabledentalPlanOnlyInd.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tabledentalPlanOnlyInd.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tabledentalPlanOnlyInd.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tabledentalPlanOnlyInd.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isheader_IdNull() {
                return this.IsNull(this.tabledentalPlanOnlyInd.header_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setheader_IdNull() {
                this[this.tabledentalPlanOnlyInd.header_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tinRow : global::System.Data.DataRow {
            
            private tinDataTable tabletin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tinRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletin = ((tinDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tabletin.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'tin\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletin.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tabletin.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'tin\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletin.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int header_Id {
                get {
                    try {
                        return ((int)(this[this.tabletin.header_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'header_Id\' in table \'tin\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletin.header_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public headerRow headerRow {
                get {
                    return ((headerRow)(this.GetParentRow(this.Table.ParentRelations["header_tin"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["header_tin"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tabletin.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tabletin.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tabletin.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tabletin.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isheader_IdNull() {
                return this.IsNull(this.tabletin.header_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setheader_IdNull() {
                this[this.tabletin.header_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class benefitsListRow : global::System.Data.DataRow {
            
            private benefitsListDataTable tablebenefitsList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal benefitsListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebenefitsList = ((benefitsListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefitsList_Id {
                get {
                    return ((int)(this[this.tablebenefitsList.benefitsList_IdColumn]));
                }
                set {
                    this[this.tablebenefitsList.benefitsList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int packages_Id {
                get {
                    try {
                        return ((int)(this[this.tablebenefitsList.packages_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'packages_Id\' in table \'benefitsList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebenefitsList.packages_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesRow packagesRow {
                get {
                    return ((packagesRow)(this.GetParentRow(this.Table.ParentRelations["packages_benefitsList"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["packages_benefitsList"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ispackages_IdNull() {
                return this.IsNull(this.tablebenefitsList.packages_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setpackages_IdNull() {
                this[this.tablebenefitsList.packages_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow[] GetbenefitsRows() {
                if ((this.Table.ChildRelations["benefitsList_benefits"] == null)) {
                    return new benefitsRow[0];
                }
                else {
                    return ((benefitsRow[])(base.GetChildRows(this.Table.ChildRelations["benefitsList_benefits"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class benefitsRow : global::System.Data.DataRow {
            
            private benefitsDataTable tablebenefits;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal benefitsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebenefits = ((benefitsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    return ((int)(this[this.tablebenefits.benefits_IdColumn]));
                }
                set {
                    this[this.tablebenefits.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefitsList_Id {
                get {
                    try {
                        return ((int)(this[this.tablebenefits.benefitsList_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefitsList_Id\' in table \'benefits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebenefits.benefitsList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsListRow benefitsListRow {
                get {
                    return ((benefitsListRow)(this.GetParentRow(this.Table.ParentRelations["benefitsList_benefits"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefitsList_benefits"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbenefitsList_IdNull() {
                return this.IsNull(this.tablebenefits.benefitsList_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbenefitsList_IdNull() {
                this[this.tablebenefits.benefitsList_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitTypeCodeRow[] GetbenefitTypeCodeRows() {
                if ((this.Table.ChildRelations["benefits_benefitTypeCode"] == null)) {
                    return new benefitTypeCodeRow[0];
                }
                else {
                    return ((benefitTypeCodeRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_benefitTypeCode"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isEHBRow[] GetisEHBRows() {
                if ((this.Table.ChildRelations["benefits_isEHB"] == null)) {
                    return new isEHBRow[0];
                }
                else {
                    return ((isEHBRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_isEHB"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isStateMandateRow[] GetisStateMandateRows() {
                if ((this.Table.ChildRelations["benefits_isStateMandate"] == null)) {
                    return new isStateMandateRow[0];
                }
                else {
                    return ((isStateMandateRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_isStateMandate"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isBenefitCoveredRow[] GetisBenefitCoveredRows() {
                if ((this.Table.ChildRelations["benefits_isBenefitCovered"] == null)) {
                    return new isBenefitCoveredRow[0];
                }
                else {
                    return ((isBenefitCoveredRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_isBenefitCovered"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceLimitRow[] GetserviceLimitRows() {
                if ((this.Table.ChildRelations["benefits_serviceLimit"] == null)) {
                    return new serviceLimitRow[0];
                }
                else {
                    return ((serviceLimitRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_serviceLimit"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public quantityLimitRow[] GetquantityLimitRows() {
                if ((this.Table.ChildRelations["benefits_quantityLimit"] == null)) {
                    return new quantityLimitRow[0];
                }
                else {
                    return ((quantityLimitRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_quantityLimit"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public unitLimitRow[] GetunitLimitRows() {
                if ((this.Table.ChildRelations["benefits_unitLimit"] == null)) {
                    return new unitLimitRow[0];
                }
                else {
                    return ((unitLimitRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_unitLimit"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public minimumStayRow[] GetminimumStayRows() {
                if ((this.Table.ChildRelations["benefits_minimumStay"] == null)) {
                    return new minimumStayRow[0];
                }
                else {
                    return ((minimumStayRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_minimumStay"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exclusionRow[] GetexclusionRows() {
                if ((this.Table.ChildRelations["benefits_exclusion"] == null)) {
                    return new exclusionRow[0];
                }
                else {
                    return ((exclusionRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_exclusion"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public explanationRow[] GetexplanationRows() {
                if ((this.Table.ChildRelations["benefits_explanation"] == null)) {
                    return new explanationRow[0];
                }
                else {
                    return ((explanationRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_explanation"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbVarianceReasonRow[] GetehbVarianceReasonRows() {
                if ((this.Table.ChildRelations["benefits_ehbVarianceReason"] == null)) {
                    return new ehbVarianceReasonRow[0];
                }
                else {
                    return ((ehbVarianceReasonRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_ehbVarianceReason"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier1Row[] GetsubjectToDeductibleTier1Rows() {
                if ((this.Table.ChildRelations["benefits_subjectToDeductibleTier1"] == null)) {
                    return new subjectToDeductibleTier1Row[0];
                }
                else {
                    return ((subjectToDeductibleTier1Row[])(base.GetChildRows(this.Table.ChildRelations["benefits_subjectToDeductibleTier1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier2Row[] GetsubjectToDeductibleTier2Rows() {
                if ((this.Table.ChildRelations["benefits_subjectToDeductibleTier2"] == null)) {
                    return new subjectToDeductibleTier2Row[0];
                }
                else {
                    return ((subjectToDeductibleTier2Row[])(base.GetChildRows(this.Table.ChildRelations["benefits_subjectToDeductibleTier2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedInNetworkMOOPRow[] GetexcludedInNetworkMOOPRows() {
                if ((this.Table.ChildRelations["benefits_excludedInNetworkMOOP"] == null)) {
                    return new excludedInNetworkMOOPRow[0];
                }
                else {
                    return ((excludedInNetworkMOOPRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_excludedInNetworkMOOP"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedOutOfNetworkMOOPRow[] GetexcludedOutOfNetworkMOOPRows() {
                if ((this.Table.ChildRelations["benefits_excludedOutOfNetworkMOOP"] == null)) {
                    return new excludedOutOfNetworkMOOPRow[0];
                }
                else {
                    return ((excludedOutOfNetworkMOOPRow[])(base.GetChildRows(this.Table.ChildRelations["benefits_excludedOutOfNetworkMOOP"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class benefitTypeCodeRow : global::System.Data.DataRow {
            
            private benefitTypeCodeDataTable tablebenefitTypeCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal benefitTypeCodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebenefitTypeCode = ((benefitTypeCodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablebenefitTypeCode.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'benefitTypeCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebenefitTypeCode.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablebenefitTypeCode.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'benefitTypeCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebenefitTypeCode.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tablebenefitTypeCode.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'benefitTypeCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebenefitTypeCode.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_benefitTypeCode"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_benefitTypeCode"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablebenefitTypeCode.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablebenefitTypeCode.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablebenefitTypeCode.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablebenefitTypeCode.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tablebenefitTypeCode.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tablebenefitTypeCode.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class isEHBRow : global::System.Data.DataRow {
            
            private isEHBDataTable tableisEHB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isEHBRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisEHB = ((isEHBDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableisEHB.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'isEHB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisEHB.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableisEHB.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'isEHB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisEHB.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tableisEHB.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'isEHB\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisEHB.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_isEHB"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_isEHB"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableisEHB.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableisEHB.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableisEHB.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableisEHB.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tableisEHB.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tableisEHB.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class isStateMandateRow : global::System.Data.DataRow {
            
            private isStateMandateDataTable tableisStateMandate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isStateMandateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisStateMandate = ((isStateMandateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableisStateMandate.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'isStateMandate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisStateMandate.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableisStateMandate.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'isStateMandate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisStateMandate.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tableisStateMandate.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'isStateMandate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisStateMandate.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_isStateMandate"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_isStateMandate"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableisStateMandate.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableisStateMandate.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableisStateMandate.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableisStateMandate.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tableisStateMandate.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tableisStateMandate.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class isBenefitCoveredRow : global::System.Data.DataRow {
            
            private isBenefitCoveredDataTable tableisBenefitCovered;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isBenefitCoveredRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisBenefitCovered = ((isBenefitCoveredDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableisBenefitCovered.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'isBenefitCovered\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisBenefitCovered.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableisBenefitCovered.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'isBenefitCovered\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisBenefitCovered.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tableisBenefitCovered.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'isBenefitCovered\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisBenefitCovered.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_isBenefitCovered"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_isBenefitCovered"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableisBenefitCovered.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableisBenefitCovered.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableisBenefitCovered.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableisBenefitCovered.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tableisBenefitCovered.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tableisBenefitCovered.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class serviceLimitRow : global::System.Data.DataRow {
            
            private serviceLimitDataTable tableserviceLimit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal serviceLimitRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableserviceLimit = ((serviceLimitDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableserviceLimit.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'serviceLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableserviceLimit.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableserviceLimit.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'serviceLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableserviceLimit.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tableserviceLimit.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'serviceLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableserviceLimit.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_serviceLimit"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_serviceLimit"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableserviceLimit.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableserviceLimit.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableserviceLimit.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableserviceLimit.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tableserviceLimit.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tableserviceLimit.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class quantityLimitRow : global::System.Data.DataRow {
            
            private quantityLimitDataTable tablequantityLimit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal quantityLimitRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablequantityLimit = ((quantityLimitDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablequantityLimit.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'quantityLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablequantityLimit.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablequantityLimit.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'quantityLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablequantityLimit.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tablequantityLimit.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'quantityLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablequantityLimit.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_quantityLimit"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_quantityLimit"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablequantityLimit.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablequantityLimit.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablequantityLimit.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablequantityLimit.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tablequantityLimit.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tablequantityLimit.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class unitLimitRow : global::System.Data.DataRow {
            
            private unitLimitDataTable tableunitLimit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal unitLimitRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableunitLimit = ((unitLimitDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableunitLimit.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'unitLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableunitLimit.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableunitLimit.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'unitLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableunitLimit.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tableunitLimit.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'unitLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableunitLimit.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_unitLimit"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_unitLimit"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableunitLimit.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableunitLimit.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableunitLimit.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableunitLimit.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tableunitLimit.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tableunitLimit.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class minimumStayRow : global::System.Data.DataRow {
            
            private minimumStayDataTable tableminimumStay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal minimumStayRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableminimumStay = ((minimumStayDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableminimumStay.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'minimumStay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableminimumStay.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableminimumStay.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'minimumStay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableminimumStay.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tableminimumStay.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'minimumStay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableminimumStay.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_minimumStay"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_minimumStay"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableminimumStay.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableminimumStay.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableminimumStay.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableminimumStay.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tableminimumStay.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tableminimumStay.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class exclusionRow : global::System.Data.DataRow {
            
            private exclusionDataTable tableexclusion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal exclusionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableexclusion = ((exclusionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableexclusion.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'exclusion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexclusion.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableexclusion.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'exclusion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexclusion.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tableexclusion.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'exclusion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexclusion.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_exclusion"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_exclusion"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableexclusion.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableexclusion.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableexclusion.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableexclusion.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tableexclusion.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tableexclusion.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class explanationRow : global::System.Data.DataRow {
            
            private explanationDataTable tableexplanation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal explanationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableexplanation = ((explanationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableexplanation.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'explanation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexplanation.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableexplanation.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'explanation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexplanation.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tableexplanation.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'explanation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexplanation.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_explanation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_explanation"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableexplanation.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableexplanation.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableexplanation.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableexplanation.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tableexplanation.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tableexplanation.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ehbVarianceReasonRow : global::System.Data.DataRow {
            
            private ehbVarianceReasonDataTable tableehbVarianceReason;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ehbVarianceReasonRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableehbVarianceReason = ((ehbVarianceReasonDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableehbVarianceReason.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'ehbVarianceReason\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableehbVarianceReason.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableehbVarianceReason.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'ehbVarianceReason\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableehbVarianceReason.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tableehbVarianceReason.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'ehbVarianceReason\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableehbVarianceReason.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_ehbVarianceReason"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_ehbVarianceReason"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableehbVarianceReason.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableehbVarianceReason.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableehbVarianceReason.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableehbVarianceReason.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tableehbVarianceReason.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tableehbVarianceReason.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class subjectToDeductibleTier1Row : global::System.Data.DataRow {
            
            private subjectToDeductibleTier1DataTable tablesubjectToDeductibleTier1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal subjectToDeductibleTier1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesubjectToDeductibleTier1 = ((subjectToDeductibleTier1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablesubjectToDeductibleTier1.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'subjectToDeductibleTier1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesubjectToDeductibleTier1.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablesubjectToDeductibleTier1.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'subjectToDeductibleTier1\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesubjectToDeductibleTier1.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tablesubjectToDeductibleTier1.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'subjectToDeductibleTier1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesubjectToDeductibleTier1.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_subjectToDeductibleTier1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_subjectToDeductibleTier1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablesubjectToDeductibleTier1.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablesubjectToDeductibleTier1.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablesubjectToDeductibleTier1.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablesubjectToDeductibleTier1.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tablesubjectToDeductibleTier1.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tablesubjectToDeductibleTier1.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class subjectToDeductibleTier2Row : global::System.Data.DataRow {
            
            private subjectToDeductibleTier2DataTable tablesubjectToDeductibleTier2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal subjectToDeductibleTier2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesubjectToDeductibleTier2 = ((subjectToDeductibleTier2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablesubjectToDeductibleTier2.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'subjectToDeductibleTier2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesubjectToDeductibleTier2.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablesubjectToDeductibleTier2.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'subjectToDeductibleTier2\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesubjectToDeductibleTier2.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tablesubjectToDeductibleTier2.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'subjectToDeductibleTier2\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesubjectToDeductibleTier2.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_subjectToDeductibleTier2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_subjectToDeductibleTier2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablesubjectToDeductibleTier2.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablesubjectToDeductibleTier2.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablesubjectToDeductibleTier2.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablesubjectToDeductibleTier2.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tablesubjectToDeductibleTier2.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tablesubjectToDeductibleTier2.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class excludedInNetworkMOOPRow : global::System.Data.DataRow {
            
            private excludedInNetworkMOOPDataTable tableexcludedInNetworkMOOP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal excludedInNetworkMOOPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableexcludedInNetworkMOOP = ((excludedInNetworkMOOPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableexcludedInNetworkMOOP.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'excludedInNetworkMOOP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexcludedInNetworkMOOP.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableexcludedInNetworkMOOP.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'excludedInNetworkMOOP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexcludedInNetworkMOOP.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tableexcludedInNetworkMOOP.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'excludedInNetworkMOOP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexcludedInNetworkMOOP.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_excludedInNetworkMOOP"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_excludedInNetworkMOOP"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableexcludedInNetworkMOOP.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableexcludedInNetworkMOOP.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableexcludedInNetworkMOOP.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableexcludedInNetworkMOOP.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tableexcludedInNetworkMOOP.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tableexcludedInNetworkMOOP.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class excludedOutOfNetworkMOOPRow : global::System.Data.DataRow {
            
            private excludedOutOfNetworkMOOPDataTable tableexcludedOutOfNetworkMOOP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal excludedOutOfNetworkMOOPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableexcludedOutOfNetworkMOOP = ((excludedOutOfNetworkMOOPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableexcludedOutOfNetworkMOOP.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'excludedOutOfNetworkMOOP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableexcludedOutOfNetworkMOOP.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableexcludedOutOfNetworkMOOP.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'excludedOutOfNetworkMOOP\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableexcludedOutOfNetworkMOOP.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int benefits_Id {
                get {
                    try {
                        return ((int)(this[this.tableexcludedOutOfNetworkMOOP.benefits_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'benefits_Id\' in table \'excludedOutOfNetworkMOOP\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableexcludedOutOfNetworkMOOP.benefits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow benefitsRow {
                get {
                    return ((benefitsRow)(this.GetParentRow(this.Table.ParentRelations["benefits_excludedOutOfNetworkMOOP"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["benefits_excludedOutOfNetworkMOOP"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableexcludedOutOfNetworkMOOP.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableexcludedOutOfNetworkMOOP.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableexcludedOutOfNetworkMOOP.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableexcludedOutOfNetworkMOOP.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbenefits_IdNull() {
                return this.IsNull(this.tableexcludedOutOfNetworkMOOP.benefits_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbenefits_IdNull() {
                this[this.tableexcludedOutOfNetworkMOOP.benefits_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class plansListRow : global::System.Data.DataRow {
            
            private plansListDataTable tableplansList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal plansListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplansList = ((plansListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int plansList_Id {
                get {
                    return ((int)(this[this.tableplansList.plansList_IdColumn]));
                }
                set {
                    this[this.tableplansList.plansList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int packages_Id {
                get {
                    try {
                        return ((int)(this[this.tableplansList.packages_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'packages_Id\' in table \'plansList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplansList.packages_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesRow packagesRow {
                get {
                    return ((packagesRow)(this.GetParentRow(this.Table.ParentRelations["packages_plansList"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["packages_plansList"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ispackages_IdNull() {
                return this.IsNull(this.tableplansList.packages_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setpackages_IdNull() {
                this[this.tableplansList.packages_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansRow[] GetplansRows() {
                if ((this.Table.ChildRelations["plansList_plans"] == null)) {
                    return new plansRow[0];
                }
                else {
                    return ((plansRow[])(base.GetChildRows(this.Table.ChildRelations["plansList_plans"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class plansRow : global::System.Data.DataRow {
            
            private plansDataTable tableplans;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal plansRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplans = ((plansDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int plans_Id {
                get {
                    return ((int)(this[this.tableplans.plans_IdColumn]));
                }
                set {
                    this[this.tableplans.plans_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int plansList_Id {
                get {
                    try {
                        return ((int)(this[this.tableplans.plansList_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'plansList_Id\' in table \'plans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplans.plansList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansListRow plansListRow {
                get {
                    return ((plansListRow)(this.GetParentRow(this.Table.ParentRelations["plansList_plans"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["plansList_plans"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplansList_IdNull() {
                return this.IsNull(this.tableplans.plansList_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplansList_IdNull() {
                this[this.tableplans.plansList_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow[] GetplanAttributesRows() {
                if ((this.Table.ChildRelations["plans_planAttributes"] == null)) {
                    return new planAttributesRow[0];
                }
                else {
                    return ((planAttributesRow[])(base.GetChildRows(this.Table.ChildRelations["plans_planAttributes"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVariancesListRow[] GetcostShareVariancesListRows() {
                if ((this.Table.ChildRelations["plans_costShareVariancesList"] == null)) {
                    return new costShareVariancesListRow[0];
                }
                else {
                    return ((costShareVariancesListRow[])(base.GetChildRows(this.Table.ChildRelations["plans_costShareVariancesList"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class planAttributesRow : global::System.Data.DataRow {
            
            private planAttributesDataTable tableplanAttributes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planAttributesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplanAttributes = ((planAttributesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    return ((int)(this[this.tableplanAttributes.planAttributes_IdColumn]));
                }
                set {
                    this[this.tableplanAttributes.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int plans_Id {
                get {
                    try {
                        return ((int)(this[this.tableplanAttributes.plans_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'plans_Id\' in table \'planAttributes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanAttributes.plans_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansRow plansRow {
                get {
                    return ((plansRow)(this.GetParentRow(this.Table.ParentRelations["plans_planAttributes"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["plans_planAttributes"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isplans_IdNull() {
                return this.IsNull(this.tableplanAttributes.plans_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setplans_IdNull() {
                this[this.tableplanAttributes.plans_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public standardComponentIDRow[] GetstandardComponentIDRows() {
                if ((this.Table.ChildRelations["planAttributes_standardComponentID"] == null)) {
                    return new standardComponentIDRow[0];
                }
                else {
                    return ((standardComponentIDRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_standardComponentID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planMarketingNameRow[] GetplanMarketingNameRows() {
                if ((this.Table.ChildRelations["planAttributes_planMarketingName"] == null)) {
                    return new planMarketingNameRow[0];
                }
                else {
                    return ((planMarketingNameRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_planMarketingName"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hiosProductIDRow[] GethiosProductIDRows() {
                if ((this.Table.ChildRelations["planAttributes_hiosProductID"] == null)) {
                    return new hiosProductIDRow[0];
                }
                else {
                    return ((hiosProductIDRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_hiosProductID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hpidRow[] GethpidRows() {
                if ((this.Table.ChildRelations["planAttributes_hpid"] == null)) {
                    return new hpidRow[0];
                }
                else {
                    return ((hpidRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_hpid"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public networkIDRow[] GetnetworkIDRows() {
                if ((this.Table.ChildRelations["planAttributes_networkID"] == null)) {
                    return new networkIDRow[0];
                }
                else {
                    return ((networkIDRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_networkID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceAreaIDRow[] GetserviceAreaIDRows() {
                if ((this.Table.ChildRelations["planAttributes_serviceAreaID"] == null)) {
                    return new serviceAreaIDRow[0];
                }
                else {
                    return ((serviceAreaIDRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_serviceAreaID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public formularyIDRow[] GetformularyIDRows() {
                if ((this.Table.ChildRelations["planAttributes_formularyID"] == null)) {
                    return new formularyIDRow[0];
                }
                else {
                    return ((formularyIDRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_formularyID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isNewPlanRow[] GetisNewPlanRows() {
                if ((this.Table.ChildRelations["planAttributes_isNewPlan"] == null)) {
                    return new isNewPlanRow[0];
                }
                else {
                    return ((isNewPlanRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_isNewPlan"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planTypeRow[] GetplanTypeRows() {
                if ((this.Table.ChildRelations["planAttributes_planType"] == null)) {
                    return new planTypeRow[0];
                }
                else {
                    return ((planTypeRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_planType"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public metalLevelRow[] GetmetalLevelRows() {
                if ((this.Table.ChildRelations["planAttributes_metalLevel"] == null)) {
                    return new metalLevelRow[0];
                }
                else {
                    return ((metalLevelRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_metalLevel"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uniquePlanDesignRow[] GetuniquePlanDesignRows() {
                if ((this.Table.ChildRelations["planAttributes_uniquePlanDesign"] == null)) {
                    return new uniquePlanDesignRow[0];
                }
                else {
                    return ((uniquePlanDesignRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_uniquePlanDesign"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public qhpOrNonQhpRow[] GetqhpOrNonQhpRows() {
                if ((this.Table.ChildRelations["planAttributes_qhpOrNonQhp"] == null)) {
                    return new qhpOrNonQhpRow[0];
                }
                else {
                    return ((qhpOrNonQhpRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_qhpOrNonQhp"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanPregnancyNoticeReqIndRow[] GetinsurancePlanPregnancyNoticeReqIndRows() {
                if ((this.Table.ChildRelations["planAttributes_insurancePlanPregnancyNoticeReqInd"] == null)) {
                    return new insurancePlanPregnancyNoticeReqIndRow[0];
                }
                else {
                    return ((insurancePlanPregnancyNoticeReqIndRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_insurancePlanPregnancyNoticeReqInd"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isSpecialistReferralRequiredRow[] GetisSpecialistReferralRequiredRows() {
                if ((this.Table.ChildRelations["planAttributes_isSpecialistReferralRequired"] == null)) {
                    return new isSpecialistReferralRequiredRow[0];
                }
                else {
                    return ((isSpecialistReferralRequiredRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_isSpecialistReferralRequired"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public healthCareSpecialistReferralTypeRow[] GethealthCareSpecialistReferralTypeRows() {
                if ((this.Table.ChildRelations["planAttributes_healthCareSpecialistReferralType"] == null)) {
                    return new healthCareSpecialistReferralTypeRow[0];
                }
                else {
                    return ((healthCareSpecialistReferralTypeRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_healthCareSpecialistReferralType"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanBenefitExclusionTextRow[] GetinsurancePlanBenefitExclusionTextRows() {
                if ((this.Table.ChildRelations["planAttributes_insurancePlanBenefitExclusionText"] == null)) {
                    return new insurancePlanBenefitExclusionTextRow[0];
                }
                else {
                    return ((insurancePlanBenefitExclusionTextRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_insurancePlanBenefitExclusionText"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public indianPlanVariationRow[] GetindianPlanVariationRows() {
                if ((this.Table.ChildRelations["planAttributes_indianPlanVariation"] == null)) {
                    return new indianPlanVariationRow[0];
                }
                else {
                    return ((indianPlanVariationRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_indianPlanVariation"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hsaEligibilityRow[] GethsaEligibilityRows() {
                if ((this.Table.ChildRelations["planAttributes_hsaEligibility"] == null)) {
                    return new hsaEligibilityRow[0];
                }
                else {
                    return ((hsaEligibilityRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_hsaEligibility"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public employerHSAHRAContributionIndicatorRow[] GetemployerHSAHRAContributionIndicatorRows() {
                if ((this.Table.ChildRelations["planAttributes_employerHSAHRAContributionIndicator"] == null)) {
                    return new employerHSAHRAContributionIndicatorRow[0];
                }
                else {
                    return ((employerHSAHRAContributionIndicatorRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_employerHSAHRAContributionIndicator"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public empContributionAmountForHSAOrHRARow[] GetempContributionAmountForHSAOrHRARows() {
                if ((this.Table.ChildRelations["planAttributes_empContributionAmountForHSAOrHRA"] == null)) {
                    return new empContributionAmountForHSAOrHRARow[0];
                }
                else {
                    return ((empContributionAmountForHSAOrHRARow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_empContributionAmountForHSAOrHRA"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyOfferingRow[] GetchildOnlyOfferingRows() {
                if ((this.Table.ChildRelations["planAttributes_childOnlyOffering"] == null)) {
                    return new childOnlyOfferingRow[0];
                }
                else {
                    return ((childOnlyOfferingRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_childOnlyOffering"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyPlanIDRow[] GetchildOnlyPlanIDRows() {
                if ((this.Table.ChildRelations["planAttributes_childOnlyPlanID"] == null)) {
                    return new childOnlyPlanIDRow[0];
                }
                else {
                    return ((childOnlyPlanIDRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_childOnlyPlanID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isWellnessProgramOfferedRow[] GetisWellnessProgramOfferedRows() {
                if ((this.Table.ChildRelations["planAttributes_isWellnessProgramOffered"] == null)) {
                    return new isWellnessProgramOfferedRow[0];
                }
                else {
                    return ((isWellnessProgramOfferedRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_isWellnessProgramOffered"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isDiseaseMgmtProgramsOfferedRow[] GetisDiseaseMgmtProgramsOfferedRows() {
                if ((this.Table.ChildRelations["planAttributes_isDiseaseMgmtProgramsOffered"] == null)) {
                    return new isDiseaseMgmtProgramsOfferedRow[0];
                }
                else {
                    return ((isDiseaseMgmtProgramsOfferedRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_isDiseaseMgmtProgramsOffered"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbApportionmentForPediatricDentalRow[] GetehbApportionmentForPediatricDentalRows() {
                if ((this.Table.ChildRelations["planAttributes_ehbApportionmentForPediatricDental"] == null)) {
                    return new ehbApportionmentForPediatricDentalRow[0];
                }
                else {
                    return ((ehbApportionmentForPediatricDentalRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_ehbApportionmentForPediatricDental"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public guaranteedVsEstimatedRateRow[] GetguaranteedVsEstimatedRateRows() {
                if ((this.Table.ChildRelations["planAttributes_guaranteedVsEstimatedRate"] == null)) {
                    return new guaranteedVsEstimatedRateRow[0];
                }
                else {
                    return ((guaranteedVsEstimatedRateRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_guaranteedVsEstimatedRate"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maximumCoinsuranceForSpecialtyDrugsRow[] GetmaximumCoinsuranceForSpecialtyDrugsRows() {
                if ((this.Table.ChildRelations["planAttributes_maximumCoinsuranceForSpecialtyDrugs"] == null)) {
                    return new maximumCoinsuranceForSpecialtyDrugsRow[0];
                }
                else {
                    return ((maximumCoinsuranceForSpecialtyDrugsRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_maximumCoinsuranceForSpecialtyDrugs"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maxNumDaysForChargingInpatientCopayRow[] GetmaxNumDaysForChargingInpatientCopayRows() {
                if ((this.Table.ChildRelations["planAttributes_maxNumDaysForChargingInpatientCopay"] == null)) {
                    return new maxNumDaysForChargingInpatientCopayRow[0];
                }
                else {
                    return ((maxNumDaysForChargingInpatientCopayRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_maxNumDaysForChargingInpatientCopay"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareCostSharingAfterSetNumberVisitsRow[] GetbeginPrimaryCareCostSharingAfterSetNumberVisitsRows() {
                if ((this.Table.ChildRelations["planAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits"] == null)) {
                    return new beginPrimaryCareCostSharingAfterSetNumberVisitsRow[0];
                }
                else {
                    return ((beginPrimaryCareCostSharingAfterSetNumberVisitsRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow[] GetbeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRows() {
                if ((this.Table.ChildRelations["planAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays"] == null)) {
                    return new beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow[0];
                }
                else {
                    return ((beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planEffectiveDateRow[] GetplanEffectiveDateRows() {
                if ((this.Table.ChildRelations["planAttributes_planEffectiveDate"] == null)) {
                    return new planEffectiveDateRow[0];
                }
                else {
                    return ((planEffectiveDateRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_planEffectiveDate"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planExpirationDateRow[] GetplanExpirationDateRows() {
                if ((this.Table.ChildRelations["planAttributes_planExpirationDate"] == null)) {
                    return new planExpirationDateRow[0];
                }
                else {
                    return ((planExpirationDateRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_planExpirationDate"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageRow[] GetoutOfCountryCoverageRows() {
                if ((this.Table.ChildRelations["planAttributes_outOfCountryCoverage"] == null)) {
                    return new outOfCountryCoverageRow[0];
                }
                else {
                    return ((outOfCountryCoverageRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_outOfCountryCoverage"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageDescriptionRow[] GetoutOfCountryCoverageDescriptionRows() {
                if ((this.Table.ChildRelations["planAttributes_outOfCountryCoverageDescription"] == null)) {
                    return new outOfCountryCoverageDescriptionRow[0];
                }
                else {
                    return ((outOfCountryCoverageDescriptionRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_outOfCountryCoverageDescription"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageRow[] GetoutOfServiceAreaCoverageRows() {
                if ((this.Table.ChildRelations["planAttributes_outOfServiceAreaCoverage"] == null)) {
                    return new outOfServiceAreaCoverageRow[0];
                }
                else {
                    return ((outOfServiceAreaCoverageRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_outOfServiceAreaCoverage"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageDescriptionRow[] GetoutOfServiceAreaCoverageDescriptionRows() {
                if ((this.Table.ChildRelations["planAttributes_outOfServiceAreaCoverageDescription"] == null)) {
                    return new outOfServiceAreaCoverageDescriptionRow[0];
                }
                else {
                    return ((outOfServiceAreaCoverageDescriptionRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_outOfServiceAreaCoverageDescription"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nationalNetworkRow[] GetnationalNetworkRows() {
                if ((this.Table.ChildRelations["planAttributes_nationalNetwork"] == null)) {
                    return new nationalNetworkRow[0];
                }
                else {
                    return ((nationalNetworkRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_nationalNetwork"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public summaryBenefitAndCoverageURLRow[] GetsummaryBenefitAndCoverageURLRows() {
                if ((this.Table.ChildRelations["planAttributes_summaryBenefitAndCoverageURL"] == null)) {
                    return new summaryBenefitAndCoverageURLRow[0];
                }
                else {
                    return ((summaryBenefitAndCoverageURLRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_summaryBenefitAndCoverageURL"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public enrollmentPaymentURLRow[] GetenrollmentPaymentURLRows() {
                if ((this.Table.ChildRelations["planAttributes_enrollmentPaymentURL"] == null)) {
                    return new enrollmentPaymentURLRow[0];
                }
                else {
                    return ((enrollmentPaymentURLRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_enrollmentPaymentURL"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planBrochureRow[] GetplanBrochureRows() {
                if ((this.Table.ChildRelations["planAttributes_planBrochure"] == null)) {
                    return new planBrochureRow[0];
                }
                else {
                    return ((planBrochureRow[])(base.GetChildRows(this.Table.ChildRelations["planAttributes_planBrochure"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class standardComponentIDRow : global::System.Data.DataRow {
            
            private standardComponentIDDataTable tablestandardComponentID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal standardComponentIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestandardComponentID = ((standardComponentIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablestandardComponentID.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'standardComponentID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestandardComponentID.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablestandardComponentID.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'standardComponentID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestandardComponentID.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablestandardComponentID.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'standardComponentID\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablestandardComponentID.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_standardComponentID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_standardComponentID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablestandardComponentID.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablestandardComponentID.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablestandardComponentID.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablestandardComponentID.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablestandardComponentID.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablestandardComponentID.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class hiosProductIDRow : global::System.Data.DataRow {
            
            private hiosProductIDDataTable tablehiosProductID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal hiosProductIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehiosProductID = ((hiosProductIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablehiosProductID.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'hiosProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehiosProductID.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablehiosProductID.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'hiosProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehiosProductID.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablehiosProductID.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'hiosProductID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehiosProductID.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_hiosProductID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_hiosProductID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablehiosProductID.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablehiosProductID.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablehiosProductID.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablehiosProductID.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablehiosProductID.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablehiosProductID.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class hpidRow : global::System.Data.DataRow {
            
            private hpidDataTable tablehpid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal hpidRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehpid = ((hpidDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablehpid.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'hpid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehpid.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablehpid.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'hpid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehpid.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablehpid.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'hpid\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehpid.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_hpid"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_hpid"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablehpid.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablehpid.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablehpid.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablehpid.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablehpid.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablehpid.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class networkIDRow : global::System.Data.DataRow {
            
            private networkIDDataTable tablenetworkID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal networkIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablenetworkID = ((networkIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablenetworkID.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'networkID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenetworkID.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablenetworkID.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'networkID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenetworkID.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablenetworkID.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'networkID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenetworkID.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_networkID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_networkID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablenetworkID.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablenetworkID.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablenetworkID.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablenetworkID.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablenetworkID.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablenetworkID.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class serviceAreaIDRow : global::System.Data.DataRow {
            
            private serviceAreaIDDataTable tableserviceAreaID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal serviceAreaIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableserviceAreaID = ((serviceAreaIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableserviceAreaID.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'serviceAreaID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableserviceAreaID.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableserviceAreaID.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'serviceAreaID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableserviceAreaID.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableserviceAreaID.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'serviceAreaID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableserviceAreaID.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_serviceAreaID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_serviceAreaID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableserviceAreaID.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableserviceAreaID.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableserviceAreaID.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableserviceAreaID.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableserviceAreaID.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableserviceAreaID.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class formularyIDRow : global::System.Data.DataRow {
            
            private formularyIDDataTable tableformularyID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal formularyIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableformularyID = ((formularyIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableformularyID.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'formularyID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableformularyID.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableformularyID.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'formularyID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableformularyID.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableformularyID.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'formularyID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableformularyID.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_formularyID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_formularyID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableformularyID.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableformularyID.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableformularyID.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableformularyID.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableformularyID.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableformularyID.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class isNewPlanRow : global::System.Data.DataRow {
            
            private isNewPlanDataTable tableisNewPlan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isNewPlanRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisNewPlan = ((isNewPlanDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableisNewPlan.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'isNewPlan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisNewPlan.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableisNewPlan.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'isNewPlan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisNewPlan.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableisNewPlan.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'isNewPlan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisNewPlan.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_isNewPlan"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_isNewPlan"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableisNewPlan.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableisNewPlan.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableisNewPlan.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableisNewPlan.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableisNewPlan.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableisNewPlan.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class planTypeRow : global::System.Data.DataRow {
            
            private planTypeDataTable tableplanType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplanType = ((planTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableplanType.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'planType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanType.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableplanType.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'planType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanType.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableplanType.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'planType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanType.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_planType"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_planType"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableplanType.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableplanType.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableplanType.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableplanType.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableplanType.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableplanType.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class uniquePlanDesignRow : global::System.Data.DataRow {
            
            private uniquePlanDesignDataTable tableuniquePlanDesign;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal uniquePlanDesignRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableuniquePlanDesign = ((uniquePlanDesignDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableuniquePlanDesign.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'uniquePlanDesign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuniquePlanDesign.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableuniquePlanDesign.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'uniquePlanDesign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuniquePlanDesign.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableuniquePlanDesign.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'uniquePlanDesign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuniquePlanDesign.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_uniquePlanDesign"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_uniquePlanDesign"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableuniquePlanDesign.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableuniquePlanDesign.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableuniquePlanDesign.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableuniquePlanDesign.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableuniquePlanDesign.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableuniquePlanDesign.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class qhpOrNonQhpRow : global::System.Data.DataRow {
            
            private qhpOrNonQhpDataTable tableqhpOrNonQhp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal qhpOrNonQhpRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableqhpOrNonQhp = ((qhpOrNonQhpDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableqhpOrNonQhp.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'qhpOrNonQhp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqhpOrNonQhp.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableqhpOrNonQhp.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'qhpOrNonQhp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqhpOrNonQhp.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableqhpOrNonQhp.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'qhpOrNonQhp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqhpOrNonQhp.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_qhpOrNonQhp"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_qhpOrNonQhp"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableqhpOrNonQhp.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableqhpOrNonQhp.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableqhpOrNonQhp.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableqhpOrNonQhp.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableqhpOrNonQhp.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableqhpOrNonQhp.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class insurancePlanPregnancyNoticeReqIndRow : global::System.Data.DataRow {
            
            private insurancePlanPregnancyNoticeReqIndDataTable tableinsurancePlanPregnancyNoticeReqInd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal insurancePlanPregnancyNoticeReqIndRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinsurancePlanPregnancyNoticeReqInd = ((insurancePlanPregnancyNoticeReqIndDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableinsurancePlanPregnancyNoticeReqInd.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'insurancePlanPregnancyNoticeReqInd\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsurancePlanPregnancyNoticeReqInd.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableinsurancePlanPregnancyNoticeReqInd.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'insurancePlanPregnancyNoticeReqInd\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsurancePlanPregnancyNoticeReqInd.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableinsurancePlanPregnancyNoticeReqInd.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'insurancePlanPregnancyNoticeRe" +
                                "qInd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsurancePlanPregnancyNoticeReqInd.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_insurancePlanPregnancyNoticeReqInd"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_insurancePlanPregnancyNoticeReqInd"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableinsurancePlanPregnancyNoticeReqInd.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableinsurancePlanPregnancyNoticeReqInd.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableinsurancePlanPregnancyNoticeReqInd.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableinsurancePlanPregnancyNoticeReqInd.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableinsurancePlanPregnancyNoticeReqInd.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableinsurancePlanPregnancyNoticeReqInd.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class isSpecialistReferralRequiredRow : global::System.Data.DataRow {
            
            private isSpecialistReferralRequiredDataTable tableisSpecialistReferralRequired;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isSpecialistReferralRequiredRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisSpecialistReferralRequired = ((isSpecialistReferralRequiredDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableisSpecialistReferralRequired.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'isSpecialistReferralRequired\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableisSpecialistReferralRequired.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableisSpecialistReferralRequired.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'isSpecialistReferralRequired\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableisSpecialistReferralRequired.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableisSpecialistReferralRequired.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'isSpecialistReferralRequired\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisSpecialistReferralRequired.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_isSpecialistReferralRequired"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_isSpecialistReferralRequired"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableisSpecialistReferralRequired.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableisSpecialistReferralRequired.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableisSpecialistReferralRequired.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableisSpecialistReferralRequired.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableisSpecialistReferralRequired.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableisSpecialistReferralRequired.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class healthCareSpecialistReferralTypeRow : global::System.Data.DataRow {
            
            private healthCareSpecialistReferralTypeDataTable tablehealthCareSpecialistReferralType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal healthCareSpecialistReferralTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehealthCareSpecialistReferralType = ((healthCareSpecialistReferralTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablehealthCareSpecialistReferralType.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'healthCareSpecialistReferralType\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablehealthCareSpecialistReferralType.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablehealthCareSpecialistReferralType.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'healthCareSpecialistReferralType\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablehealthCareSpecialistReferralType.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablehealthCareSpecialistReferralType.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'healthCareSpecialistReferralTy" +
                                "pe\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehealthCareSpecialistReferralType.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_healthCareSpecialistReferralType"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_healthCareSpecialistReferralType"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablehealthCareSpecialistReferralType.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablehealthCareSpecialistReferralType.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablehealthCareSpecialistReferralType.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablehealthCareSpecialistReferralType.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablehealthCareSpecialistReferralType.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablehealthCareSpecialistReferralType.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class insurancePlanBenefitExclusionTextRow : global::System.Data.DataRow {
            
            private insurancePlanBenefitExclusionTextDataTable tableinsurancePlanBenefitExclusionText;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal insurancePlanBenefitExclusionTextRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinsurancePlanBenefitExclusionText = ((insurancePlanBenefitExclusionTextDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableinsurancePlanBenefitExclusionText.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'insurancePlanBenefitExclusionText\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsurancePlanBenefitExclusionText.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableinsurancePlanBenefitExclusionText.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'insurancePlanBenefitExclusionText\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsurancePlanBenefitExclusionText.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableinsurancePlanBenefitExclusionText.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'insurancePlanBenefitExclusionT" +
                                "ext\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsurancePlanBenefitExclusionText.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_insurancePlanBenefitExclusionText"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_insurancePlanBenefitExclusionText"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableinsurancePlanBenefitExclusionText.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableinsurancePlanBenefitExclusionText.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableinsurancePlanBenefitExclusionText.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableinsurancePlanBenefitExclusionText.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableinsurancePlanBenefitExclusionText.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableinsurancePlanBenefitExclusionText.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class indianPlanVariationRow : global::System.Data.DataRow {
            
            private indianPlanVariationDataTable tableindianPlanVariation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal indianPlanVariationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableindianPlanVariation = ((indianPlanVariationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableindianPlanVariation.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'indianPlanVariation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindianPlanVariation.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableindianPlanVariation.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'indianPlanVariation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableindianPlanVariation.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableindianPlanVariation.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'indianPlanVariation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableindianPlanVariation.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_indianPlanVariation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_indianPlanVariation"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableindianPlanVariation.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableindianPlanVariation.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableindianPlanVariation.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableindianPlanVariation.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableindianPlanVariation.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableindianPlanVariation.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class hsaEligibilityRow : global::System.Data.DataRow {
            
            private hsaEligibilityDataTable tablehsaEligibility;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal hsaEligibilityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehsaEligibility = ((hsaEligibilityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablehsaEligibility.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'hsaEligibility\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehsaEligibility.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablehsaEligibility.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'hsaEligibility\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehsaEligibility.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablehsaEligibility.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'hsaEligibility\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehsaEligibility.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_hsaEligibility"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_hsaEligibility"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablehsaEligibility.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablehsaEligibility.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablehsaEligibility.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablehsaEligibility.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablehsaEligibility.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablehsaEligibility.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class employerHSAHRAContributionIndicatorRow : global::System.Data.DataRow {
            
            private employerHSAHRAContributionIndicatorDataTable tableemployerHSAHRAContributionIndicator;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal employerHSAHRAContributionIndicatorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableemployerHSAHRAContributionIndicator = ((employerHSAHRAContributionIndicatorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableemployerHSAHRAContributionIndicator.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'employerHSAHRAContributionIndicator\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployerHSAHRAContributionIndicator.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableemployerHSAHRAContributionIndicator.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'employerHSAHRAContributionIndicator" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployerHSAHRAContributionIndicator.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableemployerHSAHRAContributionIndicator.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'employerHSAHRAContributionIndi" +
                                "cator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployerHSAHRAContributionIndicator.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_employerHSAHRAContributionIndicator"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_employerHSAHRAContributionIndicator"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableemployerHSAHRAContributionIndicator.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableemployerHSAHRAContributionIndicator.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableemployerHSAHRAContributionIndicator.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableemployerHSAHRAContributionIndicator.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableemployerHSAHRAContributionIndicator.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableemployerHSAHRAContributionIndicator.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class empContributionAmountForHSAOrHRARow : global::System.Data.DataRow {
            
            private empContributionAmountForHSAOrHRADataTable tableempContributionAmountForHSAOrHRA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal empContributionAmountForHSAOrHRARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableempContributionAmountForHSAOrHRA = ((empContributionAmountForHSAOrHRADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableempContributionAmountForHSAOrHRA.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'empContributionAmountForHSAOrHRA\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableempContributionAmountForHSAOrHRA.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableempContributionAmountForHSAOrHRA.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'empContributionAmountForHSAOrHRA\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableempContributionAmountForHSAOrHRA.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableempContributionAmountForHSAOrHRA.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'empContributionAmountForHSAOrH" +
                                "RA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableempContributionAmountForHSAOrHRA.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_empContributionAmountForHSAOrHRA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_empContributionAmountForHSAOrHRA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableempContributionAmountForHSAOrHRA.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableempContributionAmountForHSAOrHRA.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableempContributionAmountForHSAOrHRA.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableempContributionAmountForHSAOrHRA.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableempContributionAmountForHSAOrHRA.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableempContributionAmountForHSAOrHRA.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class childOnlyOfferingRow : global::System.Data.DataRow {
            
            private childOnlyOfferingDataTable tablechildOnlyOffering;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal childOnlyOfferingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablechildOnlyOffering = ((childOnlyOfferingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablechildOnlyOffering.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'childOnlyOffering\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablechildOnlyOffering.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablechildOnlyOffering.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'childOnlyOffering\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablechildOnlyOffering.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablechildOnlyOffering.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'childOnlyOffering\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablechildOnlyOffering.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_childOnlyOffering"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_childOnlyOffering"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablechildOnlyOffering.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablechildOnlyOffering.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablechildOnlyOffering.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablechildOnlyOffering.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablechildOnlyOffering.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablechildOnlyOffering.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class childOnlyPlanIDRow : global::System.Data.DataRow {
            
            private childOnlyPlanIDDataTable tablechildOnlyPlanID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal childOnlyPlanIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablechildOnlyPlanID = ((childOnlyPlanIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablechildOnlyPlanID.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'childOnlyPlanID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablechildOnlyPlanID.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablechildOnlyPlanID.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'childOnlyPlanID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablechildOnlyPlanID.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablechildOnlyPlanID.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'childOnlyPlanID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablechildOnlyPlanID.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_childOnlyPlanID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_childOnlyPlanID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablechildOnlyPlanID.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablechildOnlyPlanID.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablechildOnlyPlanID.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablechildOnlyPlanID.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablechildOnlyPlanID.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablechildOnlyPlanID.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class isWellnessProgramOfferedRow : global::System.Data.DataRow {
            
            private isWellnessProgramOfferedDataTable tableisWellnessProgramOffered;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isWellnessProgramOfferedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisWellnessProgramOffered = ((isWellnessProgramOfferedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableisWellnessProgramOffered.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'isWellnessProgramOffered\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisWellnessProgramOffered.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableisWellnessProgramOffered.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'isWellnessProgramOffered\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableisWellnessProgramOffered.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableisWellnessProgramOffered.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'isWellnessProgramOffered\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableisWellnessProgramOffered.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_isWellnessProgramOffered"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_isWellnessProgramOffered"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableisWellnessProgramOffered.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableisWellnessProgramOffered.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableisWellnessProgramOffered.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableisWellnessProgramOffered.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableisWellnessProgramOffered.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableisWellnessProgramOffered.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class isDiseaseMgmtProgramsOfferedRow : global::System.Data.DataRow {
            
            private isDiseaseMgmtProgramsOfferedDataTable tableisDiseaseMgmtProgramsOffered;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal isDiseaseMgmtProgramsOfferedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisDiseaseMgmtProgramsOffered = ((isDiseaseMgmtProgramsOfferedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableisDiseaseMgmtProgramsOffered.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'isDiseaseMgmtProgramsOffered\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableisDiseaseMgmtProgramsOffered.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableisDiseaseMgmtProgramsOffered.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'isDiseaseMgmtProgramsOffered\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableisDiseaseMgmtProgramsOffered.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableisDiseaseMgmtProgramsOffered.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'isDiseaseMgmtProgramsOffered\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisDiseaseMgmtProgramsOffered.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_isDiseaseMgmtProgramsOffered"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_isDiseaseMgmtProgramsOffered"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableisDiseaseMgmtProgramsOffered.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableisDiseaseMgmtProgramsOffered.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableisDiseaseMgmtProgramsOffered.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableisDiseaseMgmtProgramsOffered.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableisDiseaseMgmtProgramsOffered.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableisDiseaseMgmtProgramsOffered.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ehbApportionmentForPediatricDentalRow : global::System.Data.DataRow {
            
            private ehbApportionmentForPediatricDentalDataTable tableehbApportionmentForPediatricDental;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ehbApportionmentForPediatricDentalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableehbApportionmentForPediatricDental = ((ehbApportionmentForPediatricDentalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableehbApportionmentForPediatricDental.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'ehbApportionmentForPediatricDental\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableehbApportionmentForPediatricDental.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableehbApportionmentForPediatricDental.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'ehbApportionmentForPediatricDental\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableehbApportionmentForPediatricDental.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableehbApportionmentForPediatricDental.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'ehbApportionmentForPediatricDe" +
                                "ntal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableehbApportionmentForPediatricDental.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_ehbApportionmentForPediatricDental"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_ehbApportionmentForPediatricDental"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableehbApportionmentForPediatricDental.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableehbApportionmentForPediatricDental.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableehbApportionmentForPediatricDental.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableehbApportionmentForPediatricDental.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableehbApportionmentForPediatricDental.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableehbApportionmentForPediatricDental.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class guaranteedVsEstimatedRateRow : global::System.Data.DataRow {
            
            private guaranteedVsEstimatedRateDataTable tableguaranteedVsEstimatedRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal guaranteedVsEstimatedRateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableguaranteedVsEstimatedRate = ((guaranteedVsEstimatedRateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableguaranteedVsEstimatedRate.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'guaranteedVsEstimatedRate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableguaranteedVsEstimatedRate.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableguaranteedVsEstimatedRate.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'guaranteedVsEstimatedRate\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableguaranteedVsEstimatedRate.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableguaranteedVsEstimatedRate.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'guaranteedVsEstimatedRate\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableguaranteedVsEstimatedRate.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_guaranteedVsEstimatedRate"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_guaranteedVsEstimatedRate"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableguaranteedVsEstimatedRate.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableguaranteedVsEstimatedRate.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableguaranteedVsEstimatedRate.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableguaranteedVsEstimatedRate.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableguaranteedVsEstimatedRate.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableguaranteedVsEstimatedRate.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class maximumCoinsuranceForSpecialtyDrugsRow : global::System.Data.DataRow {
            
            private maximumCoinsuranceForSpecialtyDrugsDataTable tablemaximumCoinsuranceForSpecialtyDrugs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal maximumCoinsuranceForSpecialtyDrugsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemaximumCoinsuranceForSpecialtyDrugs = ((maximumCoinsuranceForSpecialtyDrugsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablemaximumCoinsuranceForSpecialtyDrugs.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'maximumCoinsuranceForSpecialtyDrugs\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablemaximumCoinsuranceForSpecialtyDrugs.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablemaximumCoinsuranceForSpecialtyDrugs.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'maximumCoinsuranceForSpecialtyDrugs" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemaximumCoinsuranceForSpecialtyDrugs.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablemaximumCoinsuranceForSpecialtyDrugs.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'maximumCoinsuranceForSpecialty" +
                                "Drugs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemaximumCoinsuranceForSpecialtyDrugs.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_maximumCoinsuranceForSpecialtyDrugs"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_maximumCoinsuranceForSpecialtyDrugs"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablemaximumCoinsuranceForSpecialtyDrugs.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablemaximumCoinsuranceForSpecialtyDrugs.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablemaximumCoinsuranceForSpecialtyDrugs.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablemaximumCoinsuranceForSpecialtyDrugs.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablemaximumCoinsuranceForSpecialtyDrugs.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablemaximumCoinsuranceForSpecialtyDrugs.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class maxNumDaysForChargingInpatientCopayRow : global::System.Data.DataRow {
            
            private maxNumDaysForChargingInpatientCopayDataTable tablemaxNumDaysForChargingInpatientCopay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal maxNumDaysForChargingInpatientCopayRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemaxNumDaysForChargingInpatientCopay = ((maxNumDaysForChargingInpatientCopayDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablemaxNumDaysForChargingInpatientCopay.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'maxNumDaysForChargingInpatientCopay\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablemaxNumDaysForChargingInpatientCopay.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablemaxNumDaysForChargingInpatientCopay.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'maxNumDaysForChargingInpatientCopay" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemaxNumDaysForChargingInpatientCopay.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablemaxNumDaysForChargingInpatientCopay.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'maxNumDaysForChargingInpatient" +
                                "Copay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemaxNumDaysForChargingInpatientCopay.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_maxNumDaysForChargingInpatientCopay"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_maxNumDaysForChargingInpatientCopay"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablemaxNumDaysForChargingInpatientCopay.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablemaxNumDaysForChargingInpatientCopay.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablemaxNumDaysForChargingInpatientCopay.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablemaxNumDaysForChargingInpatientCopay.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablemaxNumDaysForChargingInpatientCopay.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablemaxNumDaysForChargingInpatientCopay.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class beginPrimaryCareCostSharingAfterSetNumberVisitsRow : global::System.Data.DataRow {
            
            private beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable tablebeginPrimaryCareCostSharingAfterSetNumberVisits;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal beginPrimaryCareCostSharingAfterSetNumberVisitsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits = ((beginPrimaryCareCostSharingAfterSetNumberVisitsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'beginPrimaryCareCostSharingAfterSetNum" +
                                "berVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'beginPrimaryCareCostSharingAfterSet" +
                                "NumberVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'beginPrimaryCareCostSharingAft" +
                                "erSetNumberVisits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_beginPrimaryCareCostSharingAfterSetNumberVisits"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablebeginPrimaryCareCostSharingAfterSetNumberVisits.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow : global::System.Data.DataRow {
            
            private beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays = ((beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'beginPrimaryCareDeductibleOrCoinsuranc" +
                                "eAfterSetNumberCopays\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'beginPrimaryCareDeductibleOrCoinsur" +
                                "anceAfterSetNumberCopays\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'beginPrimaryCareDeductibleOrCo" +
                                "insuranceAfterSetNumberCopays\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablebeginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopays.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class planEffectiveDateRow : global::System.Data.DataRow {
            
            private planEffectiveDateDataTable tableplanEffectiveDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planEffectiveDateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplanEffectiveDate = ((planEffectiveDateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableplanEffectiveDate.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'planEffectiveDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanEffectiveDate.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableplanEffectiveDate.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'planEffectiveDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanEffectiveDate.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableplanEffectiveDate.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'planEffectiveDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanEffectiveDate.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_planEffectiveDate"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_planEffectiveDate"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableplanEffectiveDate.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableplanEffectiveDate.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableplanEffectiveDate.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableplanEffectiveDate.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableplanEffectiveDate.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableplanEffectiveDate.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class planExpirationDateRow : global::System.Data.DataRow {
            
            private planExpirationDateDataTable tableplanExpirationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planExpirationDateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplanExpirationDate = ((planExpirationDateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableplanExpirationDate.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'planExpirationDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanExpirationDate.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableplanExpirationDate.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'planExpirationDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanExpirationDate.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableplanExpirationDate.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'planExpirationDate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableplanExpirationDate.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_planExpirationDate"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_planExpirationDate"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableplanExpirationDate.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableplanExpirationDate.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableplanExpirationDate.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableplanExpirationDate.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableplanExpirationDate.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableplanExpirationDate.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class outOfCountryCoverageRow : global::System.Data.DataRow {
            
            private outOfCountryCoverageDataTable tableoutOfCountryCoverage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfCountryCoverageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoutOfCountryCoverage = ((outOfCountryCoverageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableoutOfCountryCoverage.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'outOfCountryCoverage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfCountryCoverage.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableoutOfCountryCoverage.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'outOfCountryCoverage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfCountryCoverage.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableoutOfCountryCoverage.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'outOfCountryCoverage\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableoutOfCountryCoverage.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_outOfCountryCoverage"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_outOfCountryCoverage"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableoutOfCountryCoverage.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableoutOfCountryCoverage.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableoutOfCountryCoverage.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableoutOfCountryCoverage.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableoutOfCountryCoverage.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableoutOfCountryCoverage.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class outOfCountryCoverageDescriptionRow : global::System.Data.DataRow {
            
            private outOfCountryCoverageDescriptionDataTable tableoutOfCountryCoverageDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfCountryCoverageDescriptionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoutOfCountryCoverageDescription = ((outOfCountryCoverageDescriptionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableoutOfCountryCoverageDescription.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'outOfCountryCoverageDescription\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableoutOfCountryCoverageDescription.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableoutOfCountryCoverageDescription.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'outOfCountryCoverageDescription\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfCountryCoverageDescription.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableoutOfCountryCoverageDescription.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'outOfCountryCoverageDescriptio" +
                                "n\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfCountryCoverageDescription.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_outOfCountryCoverageDescription"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_outOfCountryCoverageDescription"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableoutOfCountryCoverageDescription.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableoutOfCountryCoverageDescription.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableoutOfCountryCoverageDescription.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableoutOfCountryCoverageDescription.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableoutOfCountryCoverageDescription.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableoutOfCountryCoverageDescription.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class outOfServiceAreaCoverageRow : global::System.Data.DataRow {
            
            private outOfServiceAreaCoverageDataTable tableoutOfServiceAreaCoverage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfServiceAreaCoverageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoutOfServiceAreaCoverage = ((outOfServiceAreaCoverageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableoutOfServiceAreaCoverage.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'outOfServiceAreaCoverage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfServiceAreaCoverage.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableoutOfServiceAreaCoverage.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'outOfServiceAreaCoverage\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableoutOfServiceAreaCoverage.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableoutOfServiceAreaCoverage.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'outOfServiceAreaCoverage\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfServiceAreaCoverage.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_outOfServiceAreaCoverage"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_outOfServiceAreaCoverage"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableoutOfServiceAreaCoverage.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableoutOfServiceAreaCoverage.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableoutOfServiceAreaCoverage.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableoutOfServiceAreaCoverage.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableoutOfServiceAreaCoverage.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableoutOfServiceAreaCoverage.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class outOfServiceAreaCoverageDescriptionRow : global::System.Data.DataRow {
            
            private outOfServiceAreaCoverageDescriptionDataTable tableoutOfServiceAreaCoverageDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfServiceAreaCoverageDescriptionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoutOfServiceAreaCoverageDescription = ((outOfServiceAreaCoverageDescriptionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableoutOfServiceAreaCoverageDescription.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'outOfServiceAreaCoverageDescription\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfServiceAreaCoverageDescription.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableoutOfServiceAreaCoverageDescription.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'outOfServiceAreaCoverageDescription" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfServiceAreaCoverageDescription.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableoutOfServiceAreaCoverageDescription.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'outOfServiceAreaCoverageDescri" +
                                "ption\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfServiceAreaCoverageDescription.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_outOfServiceAreaCoverageDescription"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_outOfServiceAreaCoverageDescription"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableoutOfServiceAreaCoverageDescription.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableoutOfServiceAreaCoverageDescription.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableoutOfServiceAreaCoverageDescription.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableoutOfServiceAreaCoverageDescription.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableoutOfServiceAreaCoverageDescription.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableoutOfServiceAreaCoverageDescription.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class nationalNetworkRow : global::System.Data.DataRow {
            
            private nationalNetworkDataTable tablenationalNetwork;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal nationalNetworkRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablenationalNetwork = ((nationalNetworkDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablenationalNetwork.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'nationalNetwork\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenationalNetwork.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablenationalNetwork.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'nationalNetwork\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenationalNetwork.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablenationalNetwork.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'nationalNetwork\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenationalNetwork.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_nationalNetwork"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_nationalNetwork"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablenationalNetwork.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablenationalNetwork.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablenationalNetwork.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablenationalNetwork.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablenationalNetwork.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablenationalNetwork.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class summaryBenefitAndCoverageURLRow : global::System.Data.DataRow {
            
            private summaryBenefitAndCoverageURLDataTable tablesummaryBenefitAndCoverageURL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal summaryBenefitAndCoverageURLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesummaryBenefitAndCoverageURL = ((summaryBenefitAndCoverageURLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablesummaryBenefitAndCoverageURL.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'summaryBenefitAndCoverageURL\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesummaryBenefitAndCoverageURL.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablesummaryBenefitAndCoverageURL.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'summaryBenefitAndCoverageURL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablesummaryBenefitAndCoverageURL.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tablesummaryBenefitAndCoverageURL.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'summaryBenefitAndCoverageURL\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesummaryBenefitAndCoverageURL.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_summaryBenefitAndCoverageURL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_summaryBenefitAndCoverageURL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablesummaryBenefitAndCoverageURL.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablesummaryBenefitAndCoverageURL.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablesummaryBenefitAndCoverageURL.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablesummaryBenefitAndCoverageURL.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tablesummaryBenefitAndCoverageURL.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tablesummaryBenefitAndCoverageURL.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class enrollmentPaymentURLRow : global::System.Data.DataRow {
            
            private enrollmentPaymentURLDataTable tableenrollmentPaymentURL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal enrollmentPaymentURLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableenrollmentPaymentURL = ((enrollmentPaymentURLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableenrollmentPaymentURL.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'enrollmentPaymentURL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableenrollmentPaymentURL.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableenrollmentPaymentURL.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'enrollmentPaymentURL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableenrollmentPaymentURL.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableenrollmentPaymentURL.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'enrollmentPaymentURL\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableenrollmentPaymentURL.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_enrollmentPaymentURL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_enrollmentPaymentURL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableenrollmentPaymentURL.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableenrollmentPaymentURL.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableenrollmentPaymentURL.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableenrollmentPaymentURL.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableenrollmentPaymentURL.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableenrollmentPaymentURL.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class planBrochureRow : global::System.Data.DataRow {
            
            private planBrochureDataTable tableplanBrochure;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planBrochureRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplanBrochure = ((planBrochureDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableplanBrochure.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'planBrochure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanBrochure.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableplanBrochure.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'planBrochure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanBrochure.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planAttributes_Id {
                get {
                    try {
                        return ((int)(this[this.tableplanBrochure.planAttributes_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planAttributes_Id\' in table \'planBrochure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanBrochure.planAttributes_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow planAttributesRow {
                get {
                    return ((planAttributesRow)(this.GetParentRow(this.Table.ParentRelations["planAttributes_planBrochure"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planAttributes_planBrochure"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableplanBrochure.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableplanBrochure.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableplanBrochure.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableplanBrochure.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanAttributes_IdNull() {
                return this.IsNull(this.tableplanBrochure.planAttributes_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanAttributes_IdNull() {
                this[this.tableplanBrochure.planAttributes_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class costShareVariancesListRow : global::System.Data.DataRow {
            
            private costShareVariancesListDataTable tablecostShareVariancesList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal costShareVariancesListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecostShareVariancesList = ((costShareVariancesListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariancesList_Id {
                get {
                    return ((int)(this[this.tablecostShareVariancesList.costShareVariancesList_IdColumn]));
                }
                set {
                    this[this.tablecostShareVariancesList.costShareVariancesList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int plans_Id {
                get {
                    try {
                        return ((int)(this[this.tablecostShareVariancesList.plans_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'plans_Id\' in table \'costShareVariancesList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecostShareVariancesList.plans_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansRow plansRow {
                get {
                    return ((plansRow)(this.GetParentRow(this.Table.ParentRelations["plans_costShareVariancesList"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["plans_costShareVariancesList"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isplans_IdNull() {
                return this.IsNull(this.tablecostShareVariancesList.plans_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setplans_IdNull() {
                this[this.tablecostShareVariancesList.plans_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow[] GetcostShareVarianceRows() {
                if ((this.Table.ChildRelations["costShareVariancesList_costShareVariance"] == null)) {
                    return new costShareVarianceRow[0];
                }
                else {
                    return ((costShareVarianceRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariancesList_costShareVariance"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class costShareVarianceRow : global::System.Data.DataRow {
            
            private costShareVarianceDataTable tablecostShareVariance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal costShareVarianceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecostShareVariance = ((costShareVarianceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    return ((int)(this[this.tablecostShareVariance.costShareVariance_IdColumn]));
                }
                set {
                    this[this.tablecostShareVariance.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariancesList_Id {
                get {
                    try {
                        return ((int)(this[this.tablecostShareVariance.costShareVariancesList_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariancesList_Id\' in table \'costShareVariance\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablecostShareVariance.costShareVariancesList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVariancesListRow costShareVariancesListRow {
                get {
                    return ((costShareVariancesListRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariancesList_costShareVariance"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariancesList_costShareVariance"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariancesList_IdNull() {
                return this.IsNull(this.tablecostShareVariance.costShareVariancesList_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariancesList_IdNull() {
                this[this.tablecostShareVariance.costShareVariancesList_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planIdRow[] GetplanIdRows() {
                if ((this.Table.ChildRelations["costShareVariance_planId"] == null)) {
                    return new planIdRow[0];
                }
                else {
                    return ((planIdRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_planId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planMarketingNameRow[] GetplanMarketingNameRows() {
                if ((this.Table.ChildRelations["costShareVariance_planMarketingName"] == null)) {
                    return new planMarketingNameRow[0];
                }
                else {
                    return ((planMarketingNameRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_planMarketingName"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public metalLevelRow[] GetmetalLevelRows() {
                if ((this.Table.ChildRelations["costShareVariance_metalLevel"] == null)) {
                    return new metalLevelRow[0];
                }
                else {
                    return ((metalLevelRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_metalLevel"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public csrVariationTypeRow[] GetcsrVariationTypeRows() {
                if ((this.Table.ChildRelations["costShareVariance_csrVariationType"] == null)) {
                    return new csrVariationTypeRow[0];
                }
                else {
                    return ((csrVariationTypeRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_csrVariationType"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerActuarialValueRow[] GetissuerActuarialValueRows() {
                if ((this.Table.ChildRelations["costShareVariance_issuerActuarialValue"] == null)) {
                    return new issuerActuarialValueRow[0];
                }
                else {
                    return ((issuerActuarialValueRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_issuerActuarialValue"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public avCalculatorOutputNumberRow[] GetavCalculatorOutputNumberRows() {
                if ((this.Table.ChildRelations["costShareVariance_avCalculatorOutputNumber"] == null)) {
                    return new avCalculatorOutputNumberRow[0];
                }
                else {
                    return ((avCalculatorOutputNumberRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_avCalculatorOutputNumber"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugDeductiblesIntegratedRow[] GetmedicalAndDrugDeductiblesIntegratedRows() {
                if ((this.Table.ChildRelations["costShareVariance_medicalAndDrugDeductiblesIntegrated"] == null)) {
                    return new medicalAndDrugDeductiblesIntegratedRow[0];
                }
                else {
                    return ((medicalAndDrugDeductiblesIntegratedRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_medicalAndDrugDeductiblesIntegrated"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugMaxOutOfPocketIntegratedRow[] GetmedicalAndDrugMaxOutOfPocketIntegratedRows() {
                if ((this.Table.ChildRelations["costShareVariance_medicalAndDrugMaxOutOfPocketIntegrated"] == null)) {
                    return new medicalAndDrugMaxOutOfPocketIntegratedRow[0];
                }
                else {
                    return ((medicalAndDrugMaxOutOfPocketIntegratedRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_medicalAndDrugMaxOutOfPocketIntegrated"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public multipleProviderTiersRow[] GetmultipleProviderTiersRows() {
                if ((this.Table.ChildRelations["costShareVariance_multipleProviderTiers"] == null)) {
                    return new multipleProviderTiersRow[0];
                }
                else {
                    return ((multipleProviderTiersRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_multipleProviderTiers"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public firstTierUtilizationRow[] GetfirstTierUtilizationRows() {
                if ((this.Table.ChildRelations["costShareVariance_firstTierUtilization"] == null)) {
                    return new firstTierUtilizationRow[0];
                }
                else {
                    return ((firstTierUtilizationRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_firstTierUtilization"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public secondTierUtilizationRow[] GetsecondTierUtilizationRows() {
                if ((this.Table.ChildRelations["costShareVariance_secondTierUtilization"] == null)) {
                    return new secondTierUtilizationRow[0];
                }
                else {
                    return ((secondTierUtilizationRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_secondTierUtilization"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow[] GetsbcRows() {
                if ((this.Table.ChildRelations["costShareVariance_sbc"] == null)) {
                    return new sbcRow[0];
                }
                else {
                    return ((sbcRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_sbc"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopListRow[] GetmoopListRows() {
                if ((this.Table.ChildRelations["costShareVariance_moopList"] == null)) {
                    return new moopListRow[0];
                }
                else {
                    return ((moopListRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_moopList"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleListRow[] GetplanDeductibleListRows() {
                if ((this.Table.ChildRelations["costShareVariance_planDeductibleList"] == null)) {
                    return new planDeductibleListRow[0];
                }
                else {
                    return ((planDeductibleListRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_planDeductibleList"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitListRow[] GetserviceVisitListRows() {
                if ((this.Table.ChildRelations["costShareVariance_serviceVisitList"] == null)) {
                    return new serviceVisitListRow[0];
                }
                else {
                    return ((serviceVisitListRow[])(base.GetChildRows(this.Table.ChildRelations["costShareVariance_serviceVisitList"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class planIdRow : global::System.Data.DataRow {
            
            private planIdDataTable tableplanId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplanId = ((planIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableplanId.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'planId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanId.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableplanId.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'planId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanId.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tableplanId.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'planId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplanId.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_planId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_planId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableplanId.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableplanId.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableplanId.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableplanId.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tableplanId.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tableplanId.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class csrVariationTypeRow : global::System.Data.DataRow {
            
            private csrVariationTypeDataTable tablecsrVariationType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal csrVariationTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecsrVariationType = ((csrVariationTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecsrVariationType.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'csrVariationType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecsrVariationType.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecsrVariationType.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'csrVariationType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecsrVariationType.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tablecsrVariationType.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'csrVariationType\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablecsrVariationType.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_csrVariationType"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_csrVariationType"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecsrVariationType.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecsrVariationType.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecsrVariationType.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecsrVariationType.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tablecsrVariationType.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tablecsrVariationType.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class issuerActuarialValueRow : global::System.Data.DataRow {
            
            private issuerActuarialValueDataTable tableissuerActuarialValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal issuerActuarialValueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableissuerActuarialValue = ((issuerActuarialValueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableissuerActuarialValue.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'issuerActuarialValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableissuerActuarialValue.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableissuerActuarialValue.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'issuerActuarialValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableissuerActuarialValue.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tableissuerActuarialValue.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'issuerActuarialValue\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableissuerActuarialValue.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_issuerActuarialValue"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_issuerActuarialValue"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableissuerActuarialValue.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableissuerActuarialValue.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableissuerActuarialValue.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableissuerActuarialValue.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tableissuerActuarialValue.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tableissuerActuarialValue.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class avCalculatorOutputNumberRow : global::System.Data.DataRow {
            
            private avCalculatorOutputNumberDataTable tableavCalculatorOutputNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal avCalculatorOutputNumberRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableavCalculatorOutputNumber = ((avCalculatorOutputNumberDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableavCalculatorOutputNumber.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'avCalculatorOutputNumber\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableavCalculatorOutputNumber.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableavCalculatorOutputNumber.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'avCalculatorOutputNumber\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableavCalculatorOutputNumber.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tableavCalculatorOutputNumber.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'avCalculatorOutputNumber\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableavCalculatorOutputNumber.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_avCalculatorOutputNumber"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_avCalculatorOutputNumber"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableavCalculatorOutputNumber.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableavCalculatorOutputNumber.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableavCalculatorOutputNumber.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableavCalculatorOutputNumber.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tableavCalculatorOutputNumber.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tableavCalculatorOutputNumber.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class medicalAndDrugDeductiblesIntegratedRow : global::System.Data.DataRow {
            
            private medicalAndDrugDeductiblesIntegratedDataTable tablemedicalAndDrugDeductiblesIntegrated;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal medicalAndDrugDeductiblesIntegratedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemedicalAndDrugDeductiblesIntegrated = ((medicalAndDrugDeductiblesIntegratedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablemedicalAndDrugDeductiblesIntegrated.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'medicalAndDrugDeductiblesIntegrated\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablemedicalAndDrugDeductiblesIntegrated.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablemedicalAndDrugDeductiblesIntegrated.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'medicalAndDrugDeductiblesIntegrated" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemedicalAndDrugDeductiblesIntegrated.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tablemedicalAndDrugDeductiblesIntegrated.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'medicalAndDrugDeductiblesIn" +
                                "tegrated\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemedicalAndDrugDeductiblesIntegrated.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_medicalAndDrugDeductiblesIntegrated"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_medicalAndDrugDeductiblesIntegrated"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablemedicalAndDrugDeductiblesIntegrated.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablemedicalAndDrugDeductiblesIntegrated.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablemedicalAndDrugDeductiblesIntegrated.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablemedicalAndDrugDeductiblesIntegrated.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tablemedicalAndDrugDeductiblesIntegrated.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tablemedicalAndDrugDeductiblesIntegrated.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class medicalAndDrugMaxOutOfPocketIntegratedRow : global::System.Data.DataRow {
            
            private medicalAndDrugMaxOutOfPocketIntegratedDataTable tablemedicalAndDrugMaxOutOfPocketIntegrated;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal medicalAndDrugMaxOutOfPocketIntegratedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemedicalAndDrugMaxOutOfPocketIntegrated = ((medicalAndDrugMaxOutOfPocketIntegratedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablemedicalAndDrugMaxOutOfPocketIntegrated.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'medicalAndDrugMaxOutOfPocketIntegrated" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemedicalAndDrugMaxOutOfPocketIntegrated.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablemedicalAndDrugMaxOutOfPocketIntegrated.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'medicalAndDrugMaxOutOfPocketIntegra" +
                                "ted\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemedicalAndDrugMaxOutOfPocketIntegrated.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tablemedicalAndDrugMaxOutOfPocketIntegrated.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'medicalAndDrugMaxOutOfPocke" +
                                "tIntegrated\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemedicalAndDrugMaxOutOfPocketIntegrated.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_medicalAndDrugMaxOutOfPocketIntegrated"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_medicalAndDrugMaxOutOfPocketIntegrated"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablemedicalAndDrugMaxOutOfPocketIntegrated.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablemedicalAndDrugMaxOutOfPocketIntegrated.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablemedicalAndDrugMaxOutOfPocketIntegrated.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablemedicalAndDrugMaxOutOfPocketIntegrated.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tablemedicalAndDrugMaxOutOfPocketIntegrated.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tablemedicalAndDrugMaxOutOfPocketIntegrated.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class multipleProviderTiersRow : global::System.Data.DataRow {
            
            private multipleProviderTiersDataTable tablemultipleProviderTiers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal multipleProviderTiersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemultipleProviderTiers = ((multipleProviderTiersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablemultipleProviderTiers.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'multipleProviderTiers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemultipleProviderTiers.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablemultipleProviderTiers.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'multipleProviderTiers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemultipleProviderTiers.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tablemultipleProviderTiers.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'multipleProviderTiers\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablemultipleProviderTiers.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_multipleProviderTiers"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_multipleProviderTiers"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablemultipleProviderTiers.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablemultipleProviderTiers.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablemultipleProviderTiers.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablemultipleProviderTiers.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tablemultipleProviderTiers.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tablemultipleProviderTiers.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class firstTierUtilizationRow : global::System.Data.DataRow {
            
            private firstTierUtilizationDataTable tablefirstTierUtilization;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal firstTierUtilizationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefirstTierUtilization = ((firstTierUtilizationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablefirstTierUtilization.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'firstTierUtilization\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefirstTierUtilization.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablefirstTierUtilization.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'firstTierUtilization\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefirstTierUtilization.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tablefirstTierUtilization.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'firstTierUtilization\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablefirstTierUtilization.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_firstTierUtilization"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_firstTierUtilization"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablefirstTierUtilization.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablefirstTierUtilization.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablefirstTierUtilization.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablefirstTierUtilization.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tablefirstTierUtilization.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tablefirstTierUtilization.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class secondTierUtilizationRow : global::System.Data.DataRow {
            
            private secondTierUtilizationDataTable tablesecondTierUtilization;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal secondTierUtilizationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesecondTierUtilization = ((secondTierUtilizationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablesecondTierUtilization.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'secondTierUtilization\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesecondTierUtilization.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablesecondTierUtilization.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'secondTierUtilization\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesecondTierUtilization.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tablesecondTierUtilization.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'secondTierUtilization\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablesecondTierUtilization.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_secondTierUtilization"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_secondTierUtilization"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablesecondTierUtilization.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablesecondTierUtilization.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablesecondTierUtilization.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablesecondTierUtilization.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tablesecondTierUtilization.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tablesecondTierUtilization.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class sbcRow : global::System.Data.DataRow {
            
            private sbcDataTable tablesbc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal sbcRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesbc = ((sbcDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sbc_Id {
                get {
                    return ((int)(this[this.tablesbc.sbc_IdColumn]));
                }
                set {
                    this[this.tablesbc.sbc_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tablesbc.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'sbc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesbc.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_sbc"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_sbc"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tablesbc.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tablesbc.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyDeductibleRow[] GethavingBabyDeductibleRows() {
                if ((this.Table.ChildRelations["sbc_havingBabyDeductible"] == null)) {
                    return new havingBabyDeductibleRow[0];
                }
                else {
                    return ((havingBabyDeductibleRow[])(base.GetChildRows(this.Table.ChildRelations["sbc_havingBabyDeductible"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoPaymentRow[] GethavingBabyCoPaymentRows() {
                if ((this.Table.ChildRelations["sbc_havingBabyCoPayment"] == null)) {
                    return new havingBabyCoPaymentRow[0];
                }
                else {
                    return ((havingBabyCoPaymentRow[])(base.GetChildRows(this.Table.ChildRelations["sbc_havingBabyCoPayment"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoInsuranceRow[] GethavingBabyCoInsuranceRows() {
                if ((this.Table.ChildRelations["sbc_havingBabyCoInsurance"] == null)) {
                    return new havingBabyCoInsuranceRow[0];
                }
                else {
                    return ((havingBabyCoInsuranceRow[])(base.GetChildRows(this.Table.ChildRelations["sbc_havingBabyCoInsurance"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyLimitRow[] GethavingBabyLimitRows() {
                if ((this.Table.ChildRelations["sbc_havingBabyLimit"] == null)) {
                    return new havingBabyLimitRow[0];
                }
                else {
                    return ((havingBabyLimitRow[])(base.GetChildRows(this.Table.ChildRelations["sbc_havingBabyLimit"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesDeductibleRow[] GethavingDiabetesDeductibleRows() {
                if ((this.Table.ChildRelations["sbc_havingDiabetesDeductible"] == null)) {
                    return new havingDiabetesDeductibleRow[0];
                }
                else {
                    return ((havingDiabetesDeductibleRow[])(base.GetChildRows(this.Table.ChildRelations["sbc_havingDiabetesDeductible"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCopayRow[] GethavingDiabetesCopayRows() {
                if ((this.Table.ChildRelations["sbc_havingDiabetesCopay"] == null)) {
                    return new havingDiabetesCopayRow[0];
                }
                else {
                    return ((havingDiabetesCopayRow[])(base.GetChildRows(this.Table.ChildRelations["sbc_havingDiabetesCopay"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCoInsuranceRow[] GethavingDiabetesCoInsuranceRows() {
                if ((this.Table.ChildRelations["sbc_havingDiabetesCoInsurance"] == null)) {
                    return new havingDiabetesCoInsuranceRow[0];
                }
                else {
                    return ((havingDiabetesCoInsuranceRow[])(base.GetChildRows(this.Table.ChildRelations["sbc_havingDiabetesCoInsurance"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesLimitRow[] GethavingDiabetesLimitRows() {
                if ((this.Table.ChildRelations["sbc_havingDiabetesLimit"] == null)) {
                    return new havingDiabetesLimitRow[0];
                }
                else {
                    return ((havingDiabetesLimitRow[])(base.GetChildRows(this.Table.ChildRelations["sbc_havingDiabetesLimit"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class havingBabyDeductibleRow : global::System.Data.DataRow {
            
            private havingBabyDeductibleDataTable tablehavingBabyDeductible;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingBabyDeductibleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehavingBabyDeductible = ((havingBabyDeductibleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablehavingBabyDeductible.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'havingBabyDeductible\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingBabyDeductible.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablehavingBabyDeductible.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'havingBabyDeductible\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingBabyDeductible.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sbc_Id {
                get {
                    try {
                        return ((int)(this[this.tablehavingBabyDeductible.sbc_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sbc_Id\' in table \'havingBabyDeductible\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingBabyDeductible.sbc_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow sbcRow {
                get {
                    return ((sbcRow)(this.GetParentRow(this.Table.ParentRelations["sbc_havingBabyDeductible"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["sbc_havingBabyDeductible"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablehavingBabyDeductible.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablehavingBabyDeductible.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablehavingBabyDeductible.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablehavingBabyDeductible.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issbc_IdNull() {
                return this.IsNull(this.tablehavingBabyDeductible.sbc_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsbc_IdNull() {
                this[this.tablehavingBabyDeductible.sbc_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class havingBabyCoPaymentRow : global::System.Data.DataRow {
            
            private havingBabyCoPaymentDataTable tablehavingBabyCoPayment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingBabyCoPaymentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehavingBabyCoPayment = ((havingBabyCoPaymentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablehavingBabyCoPayment.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'havingBabyCoPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingBabyCoPayment.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablehavingBabyCoPayment.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'havingBabyCoPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingBabyCoPayment.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sbc_Id {
                get {
                    try {
                        return ((int)(this[this.tablehavingBabyCoPayment.sbc_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sbc_Id\' in table \'havingBabyCoPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingBabyCoPayment.sbc_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow sbcRow {
                get {
                    return ((sbcRow)(this.GetParentRow(this.Table.ParentRelations["sbc_havingBabyCoPayment"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["sbc_havingBabyCoPayment"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablehavingBabyCoPayment.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablehavingBabyCoPayment.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablehavingBabyCoPayment.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablehavingBabyCoPayment.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issbc_IdNull() {
                return this.IsNull(this.tablehavingBabyCoPayment.sbc_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsbc_IdNull() {
                this[this.tablehavingBabyCoPayment.sbc_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class havingBabyCoInsuranceRow : global::System.Data.DataRow {
            
            private havingBabyCoInsuranceDataTable tablehavingBabyCoInsurance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingBabyCoInsuranceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehavingBabyCoInsurance = ((havingBabyCoInsuranceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablehavingBabyCoInsurance.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'havingBabyCoInsurance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingBabyCoInsurance.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablehavingBabyCoInsurance.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'havingBabyCoInsurance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingBabyCoInsurance.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sbc_Id {
                get {
                    try {
                        return ((int)(this[this.tablehavingBabyCoInsurance.sbc_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sbc_Id\' in table \'havingBabyCoInsurance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingBabyCoInsurance.sbc_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow sbcRow {
                get {
                    return ((sbcRow)(this.GetParentRow(this.Table.ParentRelations["sbc_havingBabyCoInsurance"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["sbc_havingBabyCoInsurance"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablehavingBabyCoInsurance.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablehavingBabyCoInsurance.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablehavingBabyCoInsurance.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablehavingBabyCoInsurance.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issbc_IdNull() {
                return this.IsNull(this.tablehavingBabyCoInsurance.sbc_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsbc_IdNull() {
                this[this.tablehavingBabyCoInsurance.sbc_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class havingBabyLimitRow : global::System.Data.DataRow {
            
            private havingBabyLimitDataTable tablehavingBabyLimit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingBabyLimitRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehavingBabyLimit = ((havingBabyLimitDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablehavingBabyLimit.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'havingBabyLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingBabyLimit.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablehavingBabyLimit.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'havingBabyLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingBabyLimit.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sbc_Id {
                get {
                    try {
                        return ((int)(this[this.tablehavingBabyLimit.sbc_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sbc_Id\' in table \'havingBabyLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingBabyLimit.sbc_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow sbcRow {
                get {
                    return ((sbcRow)(this.GetParentRow(this.Table.ParentRelations["sbc_havingBabyLimit"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["sbc_havingBabyLimit"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablehavingBabyLimit.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablehavingBabyLimit.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablehavingBabyLimit.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablehavingBabyLimit.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issbc_IdNull() {
                return this.IsNull(this.tablehavingBabyLimit.sbc_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsbc_IdNull() {
                this[this.tablehavingBabyLimit.sbc_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class havingDiabetesDeductibleRow : global::System.Data.DataRow {
            
            private havingDiabetesDeductibleDataTable tablehavingDiabetesDeductible;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingDiabetesDeductibleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehavingDiabetesDeductible = ((havingDiabetesDeductibleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablehavingDiabetesDeductible.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'havingDiabetesDeductible\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingDiabetesDeductible.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablehavingDiabetesDeductible.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'havingDiabetesDeductible\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablehavingDiabetesDeductible.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sbc_Id {
                get {
                    try {
                        return ((int)(this[this.tablehavingDiabetesDeductible.sbc_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sbc_Id\' in table \'havingDiabetesDeductible\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingDiabetesDeductible.sbc_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow sbcRow {
                get {
                    return ((sbcRow)(this.GetParentRow(this.Table.ParentRelations["sbc_havingDiabetesDeductible"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["sbc_havingDiabetesDeductible"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablehavingDiabetesDeductible.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablehavingDiabetesDeductible.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablehavingDiabetesDeductible.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablehavingDiabetesDeductible.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issbc_IdNull() {
                return this.IsNull(this.tablehavingDiabetesDeductible.sbc_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsbc_IdNull() {
                this[this.tablehavingDiabetesDeductible.sbc_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class havingDiabetesCopayRow : global::System.Data.DataRow {
            
            private havingDiabetesCopayDataTable tablehavingDiabetesCopay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingDiabetesCopayRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehavingDiabetesCopay = ((havingDiabetesCopayDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablehavingDiabetesCopay.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'havingDiabetesCopay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingDiabetesCopay.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablehavingDiabetesCopay.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'havingDiabetesCopay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingDiabetesCopay.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sbc_Id {
                get {
                    try {
                        return ((int)(this[this.tablehavingDiabetesCopay.sbc_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sbc_Id\' in table \'havingDiabetesCopay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingDiabetesCopay.sbc_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow sbcRow {
                get {
                    return ((sbcRow)(this.GetParentRow(this.Table.ParentRelations["sbc_havingDiabetesCopay"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["sbc_havingDiabetesCopay"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablehavingDiabetesCopay.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablehavingDiabetesCopay.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablehavingDiabetesCopay.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablehavingDiabetesCopay.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issbc_IdNull() {
                return this.IsNull(this.tablehavingDiabetesCopay.sbc_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsbc_IdNull() {
                this[this.tablehavingDiabetesCopay.sbc_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class havingDiabetesCoInsuranceRow : global::System.Data.DataRow {
            
            private havingDiabetesCoInsuranceDataTable tablehavingDiabetesCoInsurance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingDiabetesCoInsuranceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehavingDiabetesCoInsurance = ((havingDiabetesCoInsuranceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablehavingDiabetesCoInsurance.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'havingDiabetesCoInsurance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingDiabetesCoInsurance.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablehavingDiabetesCoInsurance.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'havingDiabetesCoInsurance\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablehavingDiabetesCoInsurance.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sbc_Id {
                get {
                    try {
                        return ((int)(this[this.tablehavingDiabetesCoInsurance.sbc_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sbc_Id\' in table \'havingDiabetesCoInsurance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingDiabetesCoInsurance.sbc_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow sbcRow {
                get {
                    return ((sbcRow)(this.GetParentRow(this.Table.ParentRelations["sbc_havingDiabetesCoInsurance"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["sbc_havingDiabetesCoInsurance"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablehavingDiabetesCoInsurance.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablehavingDiabetesCoInsurance.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablehavingDiabetesCoInsurance.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablehavingDiabetesCoInsurance.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issbc_IdNull() {
                return this.IsNull(this.tablehavingDiabetesCoInsurance.sbc_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsbc_IdNull() {
                this[this.tablehavingDiabetesCoInsurance.sbc_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class havingDiabetesLimitRow : global::System.Data.DataRow {
            
            private havingDiabetesLimitDataTable tablehavingDiabetesLimit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal havingDiabetesLimitRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablehavingDiabetesLimit = ((havingDiabetesLimitDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablehavingDiabetesLimit.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'havingDiabetesLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingDiabetesLimit.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablehavingDiabetesLimit.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'havingDiabetesLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingDiabetesLimit.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sbc_Id {
                get {
                    try {
                        return ((int)(this[this.tablehavingDiabetesLimit.sbc_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sbc_Id\' in table \'havingDiabetesLimit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablehavingDiabetesLimit.sbc_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow sbcRow {
                get {
                    return ((sbcRow)(this.GetParentRow(this.Table.ParentRelations["sbc_havingDiabetesLimit"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["sbc_havingDiabetesLimit"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablehavingDiabetesLimit.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablehavingDiabetesLimit.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablehavingDiabetesLimit.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablehavingDiabetesLimit.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issbc_IdNull() {
                return this.IsNull(this.tablehavingDiabetesLimit.sbc_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsbc_IdNull() {
                this[this.tablehavingDiabetesLimit.sbc_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class moopListRow : global::System.Data.DataRow {
            
            private moopListDataTable tablemoopList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal moopListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemoopList = ((moopListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int moopList_Id {
                get {
                    return ((int)(this[this.tablemoopList.moopList_IdColumn]));
                }
                set {
                    this[this.tablemoopList.moopList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tablemoopList.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'moopList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemoopList.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_moopList"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_moopList"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tablemoopList.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tablemoopList.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow[] GetmoopRows() {
                if ((this.Table.ChildRelations["moopList_moop"] == null)) {
                    return new moopRow[0];
                }
                else {
                    return ((moopRow[])(base.GetChildRows(this.Table.ChildRelations["moopList_moop"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class moopRow : global::System.Data.DataRow {
            
            private moopDataTable tablemoop;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal moopRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemoop = ((moopDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int moop_Id {
                get {
                    return ((int)(this[this.tablemoop.moop_IdColumn]));
                }
                set {
                    this[this.tablemoop.moop_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int moopList_Id {
                get {
                    try {
                        return ((int)(this[this.tablemoop.moopList_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moopList_Id\' in table \'moop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemoop.moopList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopListRow moopListRow {
                get {
                    return ((moopListRow)(this.GetParentRow(this.Table.ParentRelations["moopList_moop"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["moopList_moop"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmoopList_IdNull() {
                return this.IsNull(this.tablemoop.moopList_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmoopList_IdNull() {
                this[this.tablemoop.moopList_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nameRow[] GetnameRows() {
                if ((this.Table.ChildRelations["moop_name"] == null)) {
                    return new nameRow[0];
                }
                else {
                    return ((nameRow[])(base.GetChildRows(this.Table.ChildRelations["moop_name"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualAmountRow[] GetinNetworkTier1IndividualAmountRows() {
                if ((this.Table.ChildRelations["moop_inNetworkTier1IndividualAmount"] == null)) {
                    return new inNetworkTier1IndividualAmountRow[0];
                }
                else {
                    return ((inNetworkTier1IndividualAmountRow[])(base.GetChildRows(this.Table.ChildRelations["moop_inNetworkTier1IndividualAmount"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyAmountRow[] GetinNetworkTier1FamilyAmountRows() {
                if ((this.Table.ChildRelations["moop_inNetworkTier1FamilyAmount"] == null)) {
                    return new inNetworkTier1FamilyAmountRow[0];
                }
                else {
                    return ((inNetworkTier1FamilyAmountRow[])(base.GetChildRows(this.Table.ChildRelations["moop_inNetworkTier1FamilyAmount"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2IndividualAmountRow[] GetinNetworkTier2IndividualAmountRows() {
                if ((this.Table.ChildRelations["moop_inNetworkTier2IndividualAmount"] == null)) {
                    return new inNetworkTier2IndividualAmountRow[0];
                }
                else {
                    return ((inNetworkTier2IndividualAmountRow[])(base.GetChildRows(this.Table.ChildRelations["moop_inNetworkTier2IndividualAmount"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2FamilyAmountRow[] GetinNetworkTier2FamilyAmountRows() {
                if ((this.Table.ChildRelations["moop_inNetworkTier2FamilyAmount"] == null)) {
                    return new inNetworkTier2FamilyAmountRow[0];
                }
                else {
                    return ((inNetworkTier2FamilyAmountRow[])(base.GetChildRows(this.Table.ChildRelations["moop_inNetworkTier2FamilyAmount"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualAmountRow[] GetoutOfNetworkIndividualAmountRows() {
                if ((this.Table.ChildRelations["moop_outOfNetworkIndividualAmount"] == null)) {
                    return new outOfNetworkIndividualAmountRow[0];
                }
                else {
                    return ((outOfNetworkIndividualAmountRow[])(base.GetChildRows(this.Table.ChildRelations["moop_outOfNetworkIndividualAmount"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyAmountRow[] GetoutOfNetworkFamilyAmountRows() {
                if ((this.Table.ChildRelations["moop_outOfNetworkFamilyAmount"] == null)) {
                    return new outOfNetworkFamilyAmountRow[0];
                }
                else {
                    return ((outOfNetworkFamilyAmountRow[])(base.GetChildRows(this.Table.ChildRelations["moop_outOfNetworkFamilyAmount"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkIndividualAmountRow[] GetcombinedInOutNetworkIndividualAmountRows() {
                if ((this.Table.ChildRelations["moop_combinedInOutNetworkIndividualAmount"] == null)) {
                    return new combinedInOutNetworkIndividualAmountRow[0];
                }
                else {
                    return ((combinedInOutNetworkIndividualAmountRow[])(base.GetChildRows(this.Table.ChildRelations["moop_combinedInOutNetworkIndividualAmount"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkFamilyAmountRow[] GetcombinedInOutNetworkFamilyAmountRows() {
                if ((this.Table.ChildRelations["moop_combinedInOutNetworkFamilyAmount"] == null)) {
                    return new combinedInOutNetworkFamilyAmountRow[0];
                }
                else {
                    return ((combinedInOutNetworkFamilyAmountRow[])(base.GetChildRows(this.Table.ChildRelations["moop_combinedInOutNetworkFamilyAmount"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class nameRow : global::System.Data.DataRow {
            
            private nameDataTable tablename;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal nameRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablename = ((nameDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablename.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'name\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablename.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablename.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'name\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablename.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int moop_Id {
                get {
                    try {
                        return ((int)(this[this.tablename.moop_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moop_Id\' in table \'name\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablename.moop_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow moopRow {
                get {
                    return ((moopRow)(this.GetParentRow(this.Table.ParentRelations["moop_name"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["moop_name"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablename.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablename.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablename.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablename.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismoop_IdNull() {
                return this.IsNull(this.tablename.moop_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmoop_IdNull() {
                this[this.tablename.moop_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class inNetworkTier1IndividualAmountRow : global::System.Data.DataRow {
            
            private inNetworkTier1IndividualAmountDataTable tableinNetworkTier1IndividualAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTier1IndividualAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinNetworkTier1IndividualAmount = ((inNetworkTier1IndividualAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTier1IndividualAmount.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'inNetworkTier1IndividualAmount\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier1IndividualAmount.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTier1IndividualAmount.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'inNetworkTier1IndividualAmount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier1IndividualAmount.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int moop_Id {
                get {
                    try {
                        return ((int)(this[this.tableinNetworkTier1IndividualAmount.moop_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moop_Id\' in table \'inNetworkTier1IndividualAmount\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier1IndividualAmount.moop_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow moopRow {
                get {
                    return ((moopRow)(this.GetParentRow(this.Table.ParentRelations["moop_inNetworkTier1IndividualAmount"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["moop_inNetworkTier1IndividualAmount"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableinNetworkTier1IndividualAmount.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableinNetworkTier1IndividualAmount.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableinNetworkTier1IndividualAmount.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableinNetworkTier1IndividualAmount.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismoop_IdNull() {
                return this.IsNull(this.tableinNetworkTier1IndividualAmount.moop_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmoop_IdNull() {
                this[this.tableinNetworkTier1IndividualAmount.moop_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class inNetworkTier1FamilyAmountRow : global::System.Data.DataRow {
            
            private inNetworkTier1FamilyAmountDataTable tableinNetworkTier1FamilyAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTier1FamilyAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinNetworkTier1FamilyAmount = ((inNetworkTier1FamilyAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTier1FamilyAmount.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'inNetworkTier1FamilyAmount\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier1FamilyAmount.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTier1FamilyAmount.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'inNetworkTier1FamilyAmount\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier1FamilyAmount.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int moop_Id {
                get {
                    try {
                        return ((int)(this[this.tableinNetworkTier1FamilyAmount.moop_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moop_Id\' in table \'inNetworkTier1FamilyAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier1FamilyAmount.moop_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow moopRow {
                get {
                    return ((moopRow)(this.GetParentRow(this.Table.ParentRelations["moop_inNetworkTier1FamilyAmount"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["moop_inNetworkTier1FamilyAmount"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableinNetworkTier1FamilyAmount.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableinNetworkTier1FamilyAmount.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableinNetworkTier1FamilyAmount.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableinNetworkTier1FamilyAmount.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismoop_IdNull() {
                return this.IsNull(this.tableinNetworkTier1FamilyAmount.moop_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmoop_IdNull() {
                this[this.tableinNetworkTier1FamilyAmount.moop_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class inNetworkTier2IndividualAmountRow : global::System.Data.DataRow {
            
            private inNetworkTier2IndividualAmountDataTable tableinNetworkTier2IndividualAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTier2IndividualAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinNetworkTier2IndividualAmount = ((inNetworkTier2IndividualAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTier2IndividualAmount.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'inNetworkTier2IndividualAmount\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier2IndividualAmount.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTier2IndividualAmount.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'inNetworkTier2IndividualAmount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier2IndividualAmount.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int moop_Id {
                get {
                    try {
                        return ((int)(this[this.tableinNetworkTier2IndividualAmount.moop_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moop_Id\' in table \'inNetworkTier2IndividualAmount\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier2IndividualAmount.moop_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow moopRow {
                get {
                    return ((moopRow)(this.GetParentRow(this.Table.ParentRelations["moop_inNetworkTier2IndividualAmount"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["moop_inNetworkTier2IndividualAmount"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableinNetworkTier2IndividualAmount.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableinNetworkTier2IndividualAmount.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableinNetworkTier2IndividualAmount.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableinNetworkTier2IndividualAmount.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismoop_IdNull() {
                return this.IsNull(this.tableinNetworkTier2IndividualAmount.moop_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmoop_IdNull() {
                this[this.tableinNetworkTier2IndividualAmount.moop_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class inNetworkTier2FamilyAmountRow : global::System.Data.DataRow {
            
            private inNetworkTier2FamilyAmountDataTable tableinNetworkTier2FamilyAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTier2FamilyAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinNetworkTier2FamilyAmount = ((inNetworkTier2FamilyAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTier2FamilyAmount.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'inNetworkTier2FamilyAmount\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier2FamilyAmount.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTier2FamilyAmount.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'inNetworkTier2FamilyAmount\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier2FamilyAmount.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int moop_Id {
                get {
                    try {
                        return ((int)(this[this.tableinNetworkTier2FamilyAmount.moop_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moop_Id\' in table \'inNetworkTier2FamilyAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier2FamilyAmount.moop_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow moopRow {
                get {
                    return ((moopRow)(this.GetParentRow(this.Table.ParentRelations["moop_inNetworkTier2FamilyAmount"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["moop_inNetworkTier2FamilyAmount"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableinNetworkTier2FamilyAmount.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableinNetworkTier2FamilyAmount.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableinNetworkTier2FamilyAmount.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableinNetworkTier2FamilyAmount.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismoop_IdNull() {
                return this.IsNull(this.tableinNetworkTier2FamilyAmount.moop_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmoop_IdNull() {
                this[this.tableinNetworkTier2FamilyAmount.moop_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class outOfNetworkIndividualAmountRow : global::System.Data.DataRow {
            
            private outOfNetworkIndividualAmountDataTable tableoutOfNetworkIndividualAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfNetworkIndividualAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoutOfNetworkIndividualAmount = ((outOfNetworkIndividualAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableoutOfNetworkIndividualAmount.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'outOfNetworkIndividualAmount\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableoutOfNetworkIndividualAmount.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableoutOfNetworkIndividualAmount.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'outOfNetworkIndividualAmount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableoutOfNetworkIndividualAmount.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int moop_Id {
                get {
                    try {
                        return ((int)(this[this.tableoutOfNetworkIndividualAmount.moop_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moop_Id\' in table \'outOfNetworkIndividualAmount\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableoutOfNetworkIndividualAmount.moop_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow moopRow {
                get {
                    return ((moopRow)(this.GetParentRow(this.Table.ParentRelations["moop_outOfNetworkIndividualAmount"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["moop_outOfNetworkIndividualAmount"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableoutOfNetworkIndividualAmount.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableoutOfNetworkIndividualAmount.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableoutOfNetworkIndividualAmount.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableoutOfNetworkIndividualAmount.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismoop_IdNull() {
                return this.IsNull(this.tableoutOfNetworkIndividualAmount.moop_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmoop_IdNull() {
                this[this.tableoutOfNetworkIndividualAmount.moop_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class outOfNetworkFamilyAmountRow : global::System.Data.DataRow {
            
            private outOfNetworkFamilyAmountDataTable tableoutOfNetworkFamilyAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfNetworkFamilyAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoutOfNetworkFamilyAmount = ((outOfNetworkFamilyAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableoutOfNetworkFamilyAmount.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'outOfNetworkFamilyAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfNetworkFamilyAmount.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableoutOfNetworkFamilyAmount.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'outOfNetworkFamilyAmount\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableoutOfNetworkFamilyAmount.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int moop_Id {
                get {
                    try {
                        return ((int)(this[this.tableoutOfNetworkFamilyAmount.moop_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moop_Id\' in table \'outOfNetworkFamilyAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfNetworkFamilyAmount.moop_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow moopRow {
                get {
                    return ((moopRow)(this.GetParentRow(this.Table.ParentRelations["moop_outOfNetworkFamilyAmount"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["moop_outOfNetworkFamilyAmount"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableoutOfNetworkFamilyAmount.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableoutOfNetworkFamilyAmount.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableoutOfNetworkFamilyAmount.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableoutOfNetworkFamilyAmount.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismoop_IdNull() {
                return this.IsNull(this.tableoutOfNetworkFamilyAmount.moop_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmoop_IdNull() {
                this[this.tableoutOfNetworkFamilyAmount.moop_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class combinedInOutNetworkIndividualAmountRow : global::System.Data.DataRow {
            
            private combinedInOutNetworkIndividualAmountDataTable tablecombinedInOutNetworkIndividualAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal combinedInOutNetworkIndividualAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecombinedInOutNetworkIndividualAmount = ((combinedInOutNetworkIndividualAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecombinedInOutNetworkIndividualAmount.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'combinedInOutNetworkIndividualAmount\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecombinedInOutNetworkIndividualAmount.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecombinedInOutNetworkIndividualAmount.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'combinedInOutNetworkIndividualAmoun" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecombinedInOutNetworkIndividualAmount.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int moop_Id {
                get {
                    try {
                        return ((int)(this[this.tablecombinedInOutNetworkIndividualAmount.moop_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moop_Id\' in table \'combinedInOutNetworkIndividualAmount\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablecombinedInOutNetworkIndividualAmount.moop_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow moopRow {
                get {
                    return ((moopRow)(this.GetParentRow(this.Table.ParentRelations["moop_combinedInOutNetworkIndividualAmount"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["moop_combinedInOutNetworkIndividualAmount"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecombinedInOutNetworkIndividualAmount.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecombinedInOutNetworkIndividualAmount.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecombinedInOutNetworkIndividualAmount.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecombinedInOutNetworkIndividualAmount.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismoop_IdNull() {
                return this.IsNull(this.tablecombinedInOutNetworkIndividualAmount.moop_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmoop_IdNull() {
                this[this.tablecombinedInOutNetworkIndividualAmount.moop_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class combinedInOutNetworkFamilyAmountRow : global::System.Data.DataRow {
            
            private combinedInOutNetworkFamilyAmountDataTable tablecombinedInOutNetworkFamilyAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal combinedInOutNetworkFamilyAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecombinedInOutNetworkFamilyAmount = ((combinedInOutNetworkFamilyAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecombinedInOutNetworkFamilyAmount.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'combinedInOutNetworkFamilyAmount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablecombinedInOutNetworkFamilyAmount.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecombinedInOutNetworkFamilyAmount.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'combinedInOutNetworkFamilyAmount\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablecombinedInOutNetworkFamilyAmount.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int moop_Id {
                get {
                    try {
                        return ((int)(this[this.tablecombinedInOutNetworkFamilyAmount.moop_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moop_Id\' in table \'combinedInOutNetworkFamilyAmount\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablecombinedInOutNetworkFamilyAmount.moop_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow moopRow {
                get {
                    return ((moopRow)(this.GetParentRow(this.Table.ParentRelations["moop_combinedInOutNetworkFamilyAmount"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["moop_combinedInOutNetworkFamilyAmount"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecombinedInOutNetworkFamilyAmount.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecombinedInOutNetworkFamilyAmount.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecombinedInOutNetworkFamilyAmount.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecombinedInOutNetworkFamilyAmount.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismoop_IdNull() {
                return this.IsNull(this.tablecombinedInOutNetworkFamilyAmount.moop_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmoop_IdNull() {
                this[this.tablecombinedInOutNetworkFamilyAmount.moop_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class planDeductibleListRow : global::System.Data.DataRow {
            
            private planDeductibleListDataTable tableplanDeductibleList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planDeductibleListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplanDeductibleList = ((planDeductibleListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductibleList_Id {
                get {
                    return ((int)(this[this.tableplanDeductibleList.planDeductibleList_IdColumn]));
                }
                set {
                    this[this.tableplanDeductibleList.planDeductibleList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tableplanDeductibleList.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'planDeductibleList\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableplanDeductibleList.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_planDeductibleList"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_planDeductibleList"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tableplanDeductibleList.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tableplanDeductibleList.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow[] GetplanDeductibleRows() {
                if ((this.Table.ChildRelations["planDeductibleList_planDeductible"] == null)) {
                    return new planDeductibleRow[0];
                }
                else {
                    return ((planDeductibleRow[])(base.GetChildRows(this.Table.ChildRelations["planDeductibleList_planDeductible"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class planDeductibleRow : global::System.Data.DataRow {
            
            private planDeductibleDataTable tableplanDeductible;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal planDeductibleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplanDeductible = ((planDeductibleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductible_Id {
                get {
                    return ((int)(this[this.tableplanDeductible.planDeductible_IdColumn]));
                }
                set {
                    this[this.tableplanDeductible.planDeductible_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductibleList_Id {
                get {
                    try {
                        return ((int)(this[this.tableplanDeductible.planDeductibleList_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planDeductibleList_Id\' in table \'planDeductible\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableplanDeductible.planDeductibleList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleListRow planDeductibleListRow {
                get {
                    return ((planDeductibleListRow)(this.GetParentRow(this.Table.ParentRelations["planDeductibleList_planDeductible"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planDeductibleList_planDeductible"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanDeductibleList_IdNull() {
                return this.IsNull(this.tableplanDeductible.planDeductibleList_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanDeductibleList_IdNull() {
                this[this.tableplanDeductible.planDeductibleList_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public deductibleTypeRow[] GetdeductibleTypeRows() {
                if ((this.Table.ChildRelations["planDeductible_deductibleType"] == null)) {
                    return new deductibleTypeRow[0];
                }
                else {
                    return ((deductibleTypeRow[])(base.GetChildRows(this.Table.ChildRelations["planDeductible_deductibleType"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualRow[] GetinNetworkTier1IndividualRows() {
                if ((this.Table.ChildRelations["planDeductible_inNetworkTier1Individual"] == null)) {
                    return new inNetworkTier1IndividualRow[0];
                }
                else {
                    return ((inNetworkTier1IndividualRow[])(base.GetChildRows(this.Table.ChildRelations["planDeductible_inNetworkTier1Individual"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyRow[] GetinNetworkTier1FamilyRows() {
                if ((this.Table.ChildRelations["planDeductible_inNetworkTier1Family"] == null)) {
                    return new inNetworkTier1FamilyRow[0];
                }
                else {
                    return ((inNetworkTier1FamilyRow[])(base.GetChildRows(this.Table.ChildRelations["planDeductible_inNetworkTier1Family"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier1Row[] GetcoinsuranceInNetworkTier1Rows() {
                if ((this.Table.ChildRelations["planDeductible_coinsuranceInNetworkTier1"] == null)) {
                    return new coinsuranceInNetworkTier1Row[0];
                }
                else {
                    return ((coinsuranceInNetworkTier1Row[])(base.GetChildRows(this.Table.ChildRelations["planDeductible_coinsuranceInNetworkTier1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoIndividualRow[] GetinNetworkTierTwoIndividualRows() {
                if ((this.Table.ChildRelations["planDeductible_inNetworkTierTwoIndividual"] == null)) {
                    return new inNetworkTierTwoIndividualRow[0];
                }
                else {
                    return ((inNetworkTierTwoIndividualRow[])(base.GetChildRows(this.Table.ChildRelations["planDeductible_inNetworkTierTwoIndividual"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoFamilyRow[] GetinNetworkTierTwoFamilyRows() {
                if ((this.Table.ChildRelations["planDeductible_inNetworkTierTwoFamily"] == null)) {
                    return new inNetworkTierTwoFamilyRow[0];
                }
                else {
                    return ((inNetworkTierTwoFamilyRow[])(base.GetChildRows(this.Table.ChildRelations["planDeductible_inNetworkTierTwoFamily"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier2Row[] GetcoinsuranceInNetworkTier2Rows() {
                if ((this.Table.ChildRelations["planDeductible_coinsuranceInNetworkTier2"] == null)) {
                    return new coinsuranceInNetworkTier2Row[0];
                }
                else {
                    return ((coinsuranceInNetworkTier2Row[])(base.GetChildRows(this.Table.ChildRelations["planDeductible_coinsuranceInNetworkTier2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualRow[] GetoutOfNetworkIndividualRows() {
                if ((this.Table.ChildRelations["planDeductible_outOfNetworkIndividual"] == null)) {
                    return new outOfNetworkIndividualRow[0];
                }
                else {
                    return ((outOfNetworkIndividualRow[])(base.GetChildRows(this.Table.ChildRelations["planDeductible_outOfNetworkIndividual"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyRow[] GetoutOfNetworkFamilyRows() {
                if ((this.Table.ChildRelations["planDeductible_outOfNetworkFamily"] == null)) {
                    return new outOfNetworkFamilyRow[0];
                }
                else {
                    return ((outOfNetworkFamilyRow[])(base.GetChildRows(this.Table.ChildRelations["planDeductible_outOfNetworkFamily"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkIndividualRow[] GetcombinedInOrOutNetworkIndividualRows() {
                if ((this.Table.ChildRelations["planDeductible_combinedInOrOutNetworkIndividual"] == null)) {
                    return new combinedInOrOutNetworkIndividualRow[0];
                }
                else {
                    return ((combinedInOrOutNetworkIndividualRow[])(base.GetChildRows(this.Table.ChildRelations["planDeductible_combinedInOrOutNetworkIndividual"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkFamilyRow[] GetcombinedInOrOutNetworkFamilyRows() {
                if ((this.Table.ChildRelations["planDeductible_combinedInOrOutNetworkFamily"] == null)) {
                    return new combinedInOrOutNetworkFamilyRow[0];
                }
                else {
                    return ((combinedInOrOutNetworkFamilyRow[])(base.GetChildRows(this.Table.ChildRelations["planDeductible_combinedInOrOutNetworkFamily"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class deductibleTypeRow : global::System.Data.DataRow {
            
            private deductibleTypeDataTable tabledeductibleType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal deductibleTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledeductibleType = ((deductibleTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tabledeductibleType.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'deductibleType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeductibleType.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tabledeductibleType.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'deductibleType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeductibleType.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductible_Id {
                get {
                    try {
                        return ((int)(this[this.tabledeductibleType.planDeductible_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planDeductible_Id\' in table \'deductibleType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeductibleType.planDeductible_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow planDeductibleRow {
                get {
                    return ((planDeductibleRow)(this.GetParentRow(this.Table.ParentRelations["planDeductible_deductibleType"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planDeductible_deductibleType"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tabledeductibleType.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tabledeductibleType.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tabledeductibleType.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tabledeductibleType.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanDeductible_IdNull() {
                return this.IsNull(this.tabledeductibleType.planDeductible_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanDeductible_IdNull() {
                this[this.tabledeductibleType.planDeductible_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class inNetworkTier1IndividualRow : global::System.Data.DataRow {
            
            private inNetworkTier1IndividualDataTable tableinNetworkTier1Individual;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTier1IndividualRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinNetworkTier1Individual = ((inNetworkTier1IndividualDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTier1Individual.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'inNetworkTier1Individual\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier1Individual.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTier1Individual.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'inNetworkTier1Individual\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier1Individual.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductible_Id {
                get {
                    try {
                        return ((int)(this[this.tableinNetworkTier1Individual.planDeductible_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planDeductible_Id\' in table \'inNetworkTier1Individual\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier1Individual.planDeductible_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow planDeductibleRow {
                get {
                    return ((planDeductibleRow)(this.GetParentRow(this.Table.ParentRelations["planDeductible_inNetworkTier1Individual"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planDeductible_inNetworkTier1Individual"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableinNetworkTier1Individual.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableinNetworkTier1Individual.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableinNetworkTier1Individual.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableinNetworkTier1Individual.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanDeductible_IdNull() {
                return this.IsNull(this.tableinNetworkTier1Individual.planDeductible_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanDeductible_IdNull() {
                this[this.tableinNetworkTier1Individual.planDeductible_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class inNetworkTier1FamilyRow : global::System.Data.DataRow {
            
            private inNetworkTier1FamilyDataTable tableinNetworkTier1Family;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTier1FamilyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinNetworkTier1Family = ((inNetworkTier1FamilyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTier1Family.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'inNetworkTier1Family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier1Family.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTier1Family.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'inNetworkTier1Family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier1Family.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductible_Id {
                get {
                    try {
                        return ((int)(this[this.tableinNetworkTier1Family.planDeductible_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planDeductible_Id\' in table \'inNetworkTier1Family\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTier1Family.planDeductible_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow planDeductibleRow {
                get {
                    return ((planDeductibleRow)(this.GetParentRow(this.Table.ParentRelations["planDeductible_inNetworkTier1Family"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planDeductible_inNetworkTier1Family"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableinNetworkTier1Family.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableinNetworkTier1Family.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableinNetworkTier1Family.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableinNetworkTier1Family.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanDeductible_IdNull() {
                return this.IsNull(this.tableinNetworkTier1Family.planDeductible_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanDeductible_IdNull() {
                this[this.tableinNetworkTier1Family.planDeductible_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class coinsuranceInNetworkTier1Row : global::System.Data.DataRow {
            
            private coinsuranceInNetworkTier1DataTable tablecoinsuranceInNetworkTier1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal coinsuranceInNetworkTier1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecoinsuranceInNetworkTier1 = ((coinsuranceInNetworkTier1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecoinsuranceInNetworkTier1.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'coinsuranceInNetworkTier1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoinsuranceInNetworkTier1.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecoinsuranceInNetworkTier1.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'coinsuranceInNetworkTier1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablecoinsuranceInNetworkTier1.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductible_Id {
                get {
                    try {
                        return ((int)(this[this.tablecoinsuranceInNetworkTier1.planDeductible_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planDeductible_Id\' in table \'coinsuranceInNetworkTier1\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoinsuranceInNetworkTier1.planDeductible_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow planDeductibleRow {
                get {
                    return ((planDeductibleRow)(this.GetParentRow(this.Table.ParentRelations["planDeductible_coinsuranceInNetworkTier1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planDeductible_coinsuranceInNetworkTier1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecoinsuranceInNetworkTier1.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecoinsuranceInNetworkTier1.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecoinsuranceInNetworkTier1.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecoinsuranceInNetworkTier1.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanDeductible_IdNull() {
                return this.IsNull(this.tablecoinsuranceInNetworkTier1.planDeductible_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanDeductible_IdNull() {
                this[this.tablecoinsuranceInNetworkTier1.planDeductible_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class inNetworkTierTwoIndividualRow : global::System.Data.DataRow {
            
            private inNetworkTierTwoIndividualDataTable tableinNetworkTierTwoIndividual;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTierTwoIndividualRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinNetworkTierTwoIndividual = ((inNetworkTierTwoIndividualDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTierTwoIndividual.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'inNetworkTierTwoIndividual\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableinNetworkTierTwoIndividual.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTierTwoIndividual.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'inNetworkTierTwoIndividual\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTierTwoIndividual.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductible_Id {
                get {
                    try {
                        return ((int)(this[this.tableinNetworkTierTwoIndividual.planDeductible_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planDeductible_Id\' in table \'inNetworkTierTwoIndividual\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTierTwoIndividual.planDeductible_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow planDeductibleRow {
                get {
                    return ((planDeductibleRow)(this.GetParentRow(this.Table.ParentRelations["planDeductible_inNetworkTierTwoIndividual"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planDeductible_inNetworkTierTwoIndividual"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableinNetworkTierTwoIndividual.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableinNetworkTierTwoIndividual.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableinNetworkTierTwoIndividual.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableinNetworkTierTwoIndividual.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanDeductible_IdNull() {
                return this.IsNull(this.tableinNetworkTierTwoIndividual.planDeductible_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanDeductible_IdNull() {
                this[this.tableinNetworkTierTwoIndividual.planDeductible_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class inNetworkTierTwoFamilyRow : global::System.Data.DataRow {
            
            private inNetworkTierTwoFamilyDataTable tableinNetworkTierTwoFamily;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal inNetworkTierTwoFamilyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinNetworkTierTwoFamily = ((inNetworkTierTwoFamilyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTierTwoFamily.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'inNetworkTierTwoFamily\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTierTwoFamily.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableinNetworkTierTwoFamily.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'inNetworkTierTwoFamily\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTierTwoFamily.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductible_Id {
                get {
                    try {
                        return ((int)(this[this.tableinNetworkTierTwoFamily.planDeductible_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planDeductible_Id\' in table \'inNetworkTierTwoFamily\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableinNetworkTierTwoFamily.planDeductible_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow planDeductibleRow {
                get {
                    return ((planDeductibleRow)(this.GetParentRow(this.Table.ParentRelations["planDeductible_inNetworkTierTwoFamily"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planDeductible_inNetworkTierTwoFamily"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableinNetworkTierTwoFamily.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableinNetworkTierTwoFamily.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableinNetworkTierTwoFamily.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableinNetworkTierTwoFamily.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanDeductible_IdNull() {
                return this.IsNull(this.tableinNetworkTierTwoFamily.planDeductible_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanDeductible_IdNull() {
                this[this.tableinNetworkTierTwoFamily.planDeductible_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class coinsuranceInNetworkTier2Row : global::System.Data.DataRow {
            
            private coinsuranceInNetworkTier2DataTable tablecoinsuranceInNetworkTier2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal coinsuranceInNetworkTier2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecoinsuranceInNetworkTier2 = ((coinsuranceInNetworkTier2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecoinsuranceInNetworkTier2.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'coinsuranceInNetworkTier2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoinsuranceInNetworkTier2.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecoinsuranceInNetworkTier2.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'coinsuranceInNetworkTier2\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablecoinsuranceInNetworkTier2.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductible_Id {
                get {
                    try {
                        return ((int)(this[this.tablecoinsuranceInNetworkTier2.planDeductible_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planDeductible_Id\' in table \'coinsuranceInNetworkTier2\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoinsuranceInNetworkTier2.planDeductible_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow planDeductibleRow {
                get {
                    return ((planDeductibleRow)(this.GetParentRow(this.Table.ParentRelations["planDeductible_coinsuranceInNetworkTier2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planDeductible_coinsuranceInNetworkTier2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecoinsuranceInNetworkTier2.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecoinsuranceInNetworkTier2.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecoinsuranceInNetworkTier2.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecoinsuranceInNetworkTier2.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanDeductible_IdNull() {
                return this.IsNull(this.tablecoinsuranceInNetworkTier2.planDeductible_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanDeductible_IdNull() {
                this[this.tablecoinsuranceInNetworkTier2.planDeductible_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class outOfNetworkIndividualRow : global::System.Data.DataRow {
            
            private outOfNetworkIndividualDataTable tableoutOfNetworkIndividual;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfNetworkIndividualRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoutOfNetworkIndividual = ((outOfNetworkIndividualDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableoutOfNetworkIndividual.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'outOfNetworkIndividual\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfNetworkIndividual.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableoutOfNetworkIndividual.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'outOfNetworkIndividual\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfNetworkIndividual.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductible_Id {
                get {
                    try {
                        return ((int)(this[this.tableoutOfNetworkIndividual.planDeductible_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planDeductible_Id\' in table \'outOfNetworkIndividual\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableoutOfNetworkIndividual.planDeductible_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow planDeductibleRow {
                get {
                    return ((planDeductibleRow)(this.GetParentRow(this.Table.ParentRelations["planDeductible_outOfNetworkIndividual"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planDeductible_outOfNetworkIndividual"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableoutOfNetworkIndividual.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableoutOfNetworkIndividual.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableoutOfNetworkIndividual.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableoutOfNetworkIndividual.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanDeductible_IdNull() {
                return this.IsNull(this.tableoutOfNetworkIndividual.planDeductible_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanDeductible_IdNull() {
                this[this.tableoutOfNetworkIndividual.planDeductible_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class outOfNetworkFamilyRow : global::System.Data.DataRow {
            
            private outOfNetworkFamilyDataTable tableoutOfNetworkFamily;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal outOfNetworkFamilyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoutOfNetworkFamily = ((outOfNetworkFamilyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tableoutOfNetworkFamily.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'outOfNetworkFamily\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfNetworkFamily.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tableoutOfNetworkFamily.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'outOfNetworkFamily\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableoutOfNetworkFamily.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductible_Id {
                get {
                    try {
                        return ((int)(this[this.tableoutOfNetworkFamily.planDeductible_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planDeductible_Id\' in table \'outOfNetworkFamily\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableoutOfNetworkFamily.planDeductible_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow planDeductibleRow {
                get {
                    return ((planDeductibleRow)(this.GetParentRow(this.Table.ParentRelations["planDeductible_outOfNetworkFamily"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planDeductible_outOfNetworkFamily"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tableoutOfNetworkFamily.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tableoutOfNetworkFamily.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tableoutOfNetworkFamily.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tableoutOfNetworkFamily.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanDeductible_IdNull() {
                return this.IsNull(this.tableoutOfNetworkFamily.planDeductible_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanDeductible_IdNull() {
                this[this.tableoutOfNetworkFamily.planDeductible_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class combinedInOrOutNetworkIndividualRow : global::System.Data.DataRow {
            
            private combinedInOrOutNetworkIndividualDataTable tablecombinedInOrOutNetworkIndividual;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal combinedInOrOutNetworkIndividualRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecombinedInOrOutNetworkIndividual = ((combinedInOrOutNetworkIndividualDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecombinedInOrOutNetworkIndividual.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'combinedInOrOutNetworkIndividual\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablecombinedInOrOutNetworkIndividual.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecombinedInOrOutNetworkIndividual.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'combinedInOrOutNetworkIndividual\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablecombinedInOrOutNetworkIndividual.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductible_Id {
                get {
                    try {
                        return ((int)(this[this.tablecombinedInOrOutNetworkIndividual.planDeductible_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planDeductible_Id\' in table \'combinedInOrOutNetworkIndividu" +
                                "al\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecombinedInOrOutNetworkIndividual.planDeductible_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow planDeductibleRow {
                get {
                    return ((planDeductibleRow)(this.GetParentRow(this.Table.ParentRelations["planDeductible_combinedInOrOutNetworkIndividual"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planDeductible_combinedInOrOutNetworkIndividual"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecombinedInOrOutNetworkIndividual.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecombinedInOrOutNetworkIndividual.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecombinedInOrOutNetworkIndividual.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecombinedInOrOutNetworkIndividual.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanDeductible_IdNull() {
                return this.IsNull(this.tablecombinedInOrOutNetworkIndividual.planDeductible_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanDeductible_IdNull() {
                this[this.tablecombinedInOrOutNetworkIndividual.planDeductible_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class combinedInOrOutNetworkFamilyRow : global::System.Data.DataRow {
            
            private combinedInOrOutNetworkFamilyDataTable tablecombinedInOrOutNetworkFamily;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal combinedInOrOutNetworkFamilyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecombinedInOrOutNetworkFamily = ((combinedInOrOutNetworkFamilyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecombinedInOrOutNetworkFamily.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'combinedInOrOutNetworkFamily\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablecombinedInOrOutNetworkFamily.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecombinedInOrOutNetworkFamily.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'combinedInOrOutNetworkFamily\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablecombinedInOrOutNetworkFamily.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int planDeductible_Id {
                get {
                    try {
                        return ((int)(this[this.tablecombinedInOrOutNetworkFamily.planDeductible_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'planDeductible_Id\' in table \'combinedInOrOutNetworkFamily\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecombinedInOrOutNetworkFamily.planDeductible_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow planDeductibleRow {
                get {
                    return ((planDeductibleRow)(this.GetParentRow(this.Table.ParentRelations["planDeductible_combinedInOrOutNetworkFamily"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planDeductible_combinedInOrOutNetworkFamily"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecombinedInOrOutNetworkFamily.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecombinedInOrOutNetworkFamily.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecombinedInOrOutNetworkFamily.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecombinedInOrOutNetworkFamily.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplanDeductible_IdNull() {
                return this.IsNull(this.tablecombinedInOrOutNetworkFamily.planDeductible_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplanDeductible_IdNull() {
                this[this.tablecombinedInOrOutNetworkFamily.planDeductible_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class serviceVisitListRow : global::System.Data.DataRow {
            
            private serviceVisitListDataTable tableserviceVisitList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal serviceVisitListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableserviceVisitList = ((serviceVisitListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int serviceVisitList_Id {
                get {
                    return ((int)(this[this.tableserviceVisitList.serviceVisitList_IdColumn]));
                }
                set {
                    this[this.tableserviceVisitList.serviceVisitList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int costShareVariance_Id {
                get {
                    try {
                        return ((int)(this[this.tableserviceVisitList.costShareVariance_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'costShareVariance_Id\' in table \'serviceVisitList\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableserviceVisitList.costShareVariance_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow costShareVarianceRow {
                get {
                    return ((costShareVarianceRow)(this.GetParentRow(this.Table.ParentRelations["costShareVariance_serviceVisitList"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["costShareVariance_serviceVisitList"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscostShareVariance_IdNull() {
                return this.IsNull(this.tableserviceVisitList.costShareVariance_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcostShareVariance_IdNull() {
                this[this.tableserviceVisitList.costShareVariance_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRow[] GetserviceVisitRows() {
                if ((this.Table.ChildRelations["serviceVisitList_serviceVisit"] == null)) {
                    return new serviceVisitRow[0];
                }
                else {
                    return ((serviceVisitRow[])(base.GetChildRows(this.Table.ChildRelations["serviceVisitList_serviceVisit"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class serviceVisitRow : global::System.Data.DataRow {
            
            private serviceVisitDataTable tableserviceVisit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal serviceVisitRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableserviceVisit = ((serviceVisitDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int serviceVisit_Id {
                get {
                    return ((int)(this[this.tableserviceVisit.serviceVisit_IdColumn]));
                }
                set {
                    this[this.tableserviceVisit.serviceVisit_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int serviceVisitList_Id {
                get {
                    try {
                        return ((int)(this[this.tableserviceVisit.serviceVisitList_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'serviceVisitList_Id\' in table \'serviceVisit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableserviceVisit.serviceVisitList_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitListRow serviceVisitListRow {
                get {
                    return ((serviceVisitListRow)(this.GetParentRow(this.Table.ParentRelations["serviceVisitList_serviceVisit"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["serviceVisitList_serviceVisit"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsserviceVisitList_IdNull() {
                return this.IsNull(this.tableserviceVisit.serviceVisitList_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetserviceVisitList_IdNull() {
                this[this.tableserviceVisit.serviceVisitList_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public visitTypeRow[] GetvisitTypeRows() {
                if ((this.Table.ChildRelations["serviceVisit_visitType"] == null)) {
                    return new visitTypeRow[0];
                }
                else {
                    return ((visitTypeRow[])(base.GetChildRows(this.Table.ChildRelations["serviceVisit_visitType"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier1Row[] GetcopayInNetworkTier1Rows() {
                if ((this.Table.ChildRelations["serviceVisit_copayInNetworkTier1"] == null)) {
                    return new copayInNetworkTier1Row[0];
                }
                else {
                    return ((copayInNetworkTier1Row[])(base.GetChildRows(this.Table.ChildRelations["serviceVisit_copayInNetworkTier1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier2Row[] GetcopayInNetworkTier2Rows() {
                if ((this.Table.ChildRelations["serviceVisit_copayInNetworkTier2"] == null)) {
                    return new copayInNetworkTier2Row[0];
                }
                else {
                    return ((copayInNetworkTier2Row[])(base.GetChildRows(this.Table.ChildRelations["serviceVisit_copayInNetworkTier2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayOutOfNetworkRow[] GetcopayOutOfNetworkRows() {
                if ((this.Table.ChildRelations["serviceVisit_copayOutOfNetwork"] == null)) {
                    return new copayOutOfNetworkRow[0];
                }
                else {
                    return ((copayOutOfNetworkRow[])(base.GetChildRows(this.Table.ChildRelations["serviceVisit_copayOutOfNetwork"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier1Row[] GetcoInsuranceInNetworkTier1Rows() {
                if ((this.Table.ChildRelations["serviceVisit_coInsuranceInNetworkTier1"] == null)) {
                    return new coInsuranceInNetworkTier1Row[0];
                }
                else {
                    return ((coInsuranceInNetworkTier1Row[])(base.GetChildRows(this.Table.ChildRelations["serviceVisit_coInsuranceInNetworkTier1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier2Row[] GetcoInsuranceInNetworkTier2Rows() {
                if ((this.Table.ChildRelations["serviceVisit_coInsuranceInNetworkTier2"] == null)) {
                    return new coInsuranceInNetworkTier2Row[0];
                }
                else {
                    return ((coInsuranceInNetworkTier2Row[])(base.GetChildRows(this.Table.ChildRelations["serviceVisit_coInsuranceInNetworkTier2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceOutOfNetworkRow[] GetcoInsuranceOutOfNetworkRows() {
                if ((this.Table.ChildRelations["serviceVisit_coInsuranceOutOfNetwork"] == null)) {
                    return new coInsuranceOutOfNetworkRow[0];
                }
                else {
                    return ((coInsuranceOutOfNetworkRow[])(base.GetChildRows(this.Table.ChildRelations["serviceVisit_coInsuranceOutOfNetwork"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class visitTypeRow : global::System.Data.DataRow {
            
            private visitTypeDataTable tablevisitType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal visitTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevisitType = ((visitTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablevisitType.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'visitType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevisitType.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablevisitType.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'visitType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevisitType.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int serviceVisit_Id {
                get {
                    try {
                        return ((int)(this[this.tablevisitType.serviceVisit_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'serviceVisit_Id\' in table \'visitType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevisitType.serviceVisit_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRow serviceVisitRow {
                get {
                    return ((serviceVisitRow)(this.GetParentRow(this.Table.ParentRelations["serviceVisit_visitType"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["serviceVisit_visitType"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablevisitType.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablevisitType.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablevisitType.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablevisitType.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsserviceVisit_IdNull() {
                return this.IsNull(this.tablevisitType.serviceVisit_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetserviceVisit_IdNull() {
                this[this.tablevisitType.serviceVisit_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class copayInNetworkTier1Row : global::System.Data.DataRow {
            
            private copayInNetworkTier1DataTable tablecopayInNetworkTier1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal copayInNetworkTier1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecopayInNetworkTier1 = ((copayInNetworkTier1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecopayInNetworkTier1.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'copayInNetworkTier1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecopayInNetworkTier1.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecopayInNetworkTier1.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'copayInNetworkTier1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecopayInNetworkTier1.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int serviceVisit_Id {
                get {
                    try {
                        return ((int)(this[this.tablecopayInNetworkTier1.serviceVisit_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'serviceVisit_Id\' in table \'copayInNetworkTier1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecopayInNetworkTier1.serviceVisit_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRow serviceVisitRow {
                get {
                    return ((serviceVisitRow)(this.GetParentRow(this.Table.ParentRelations["serviceVisit_copayInNetworkTier1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["serviceVisit_copayInNetworkTier1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecopayInNetworkTier1.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecopayInNetworkTier1.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecopayInNetworkTier1.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecopayInNetworkTier1.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsserviceVisit_IdNull() {
                return this.IsNull(this.tablecopayInNetworkTier1.serviceVisit_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetserviceVisit_IdNull() {
                this[this.tablecopayInNetworkTier1.serviceVisit_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class copayInNetworkTier2Row : global::System.Data.DataRow {
            
            private copayInNetworkTier2DataTable tablecopayInNetworkTier2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal copayInNetworkTier2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecopayInNetworkTier2 = ((copayInNetworkTier2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecopayInNetworkTier2.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'copayInNetworkTier2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecopayInNetworkTier2.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecopayInNetworkTier2.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'copayInNetworkTier2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecopayInNetworkTier2.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int serviceVisit_Id {
                get {
                    try {
                        return ((int)(this[this.tablecopayInNetworkTier2.serviceVisit_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'serviceVisit_Id\' in table \'copayInNetworkTier2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecopayInNetworkTier2.serviceVisit_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRow serviceVisitRow {
                get {
                    return ((serviceVisitRow)(this.GetParentRow(this.Table.ParentRelations["serviceVisit_copayInNetworkTier2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["serviceVisit_copayInNetworkTier2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecopayInNetworkTier2.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecopayInNetworkTier2.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecopayInNetworkTier2.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecopayInNetworkTier2.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsserviceVisit_IdNull() {
                return this.IsNull(this.tablecopayInNetworkTier2.serviceVisit_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetserviceVisit_IdNull() {
                this[this.tablecopayInNetworkTier2.serviceVisit_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class copayOutOfNetworkRow : global::System.Data.DataRow {
            
            private copayOutOfNetworkDataTable tablecopayOutOfNetwork;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal copayOutOfNetworkRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecopayOutOfNetwork = ((copayOutOfNetworkDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecopayOutOfNetwork.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'copayOutOfNetwork\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecopayOutOfNetwork.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecopayOutOfNetwork.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'copayOutOfNetwork\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecopayOutOfNetwork.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int serviceVisit_Id {
                get {
                    try {
                        return ((int)(this[this.tablecopayOutOfNetwork.serviceVisit_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'serviceVisit_Id\' in table \'copayOutOfNetwork\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecopayOutOfNetwork.serviceVisit_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRow serviceVisitRow {
                get {
                    return ((serviceVisitRow)(this.GetParentRow(this.Table.ParentRelations["serviceVisit_copayOutOfNetwork"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["serviceVisit_copayOutOfNetwork"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecopayOutOfNetwork.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecopayOutOfNetwork.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecopayOutOfNetwork.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecopayOutOfNetwork.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsserviceVisit_IdNull() {
                return this.IsNull(this.tablecopayOutOfNetwork.serviceVisit_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetserviceVisit_IdNull() {
                this[this.tablecopayOutOfNetwork.serviceVisit_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class coInsuranceInNetworkTier1Row : global::System.Data.DataRow {
            
            private coInsuranceInNetworkTier1DataTable tablecoInsuranceInNetworkTier1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal coInsuranceInNetworkTier1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecoInsuranceInNetworkTier1 = ((coInsuranceInNetworkTier1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecoInsuranceInNetworkTier1.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'coInsuranceInNetworkTier1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoInsuranceInNetworkTier1.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecoInsuranceInNetworkTier1.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'coInsuranceInNetworkTier1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablecoInsuranceInNetworkTier1.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int serviceVisit_Id {
                get {
                    try {
                        return ((int)(this[this.tablecoInsuranceInNetworkTier1.serviceVisit_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'serviceVisit_Id\' in table \'coInsuranceInNetworkTier1\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablecoInsuranceInNetworkTier1.serviceVisit_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRow serviceVisitRow {
                get {
                    return ((serviceVisitRow)(this.GetParentRow(this.Table.ParentRelations["serviceVisit_coInsuranceInNetworkTier1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["serviceVisit_coInsuranceInNetworkTier1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecoInsuranceInNetworkTier1.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecoInsuranceInNetworkTier1.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecoInsuranceInNetworkTier1.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecoInsuranceInNetworkTier1.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsserviceVisit_IdNull() {
                return this.IsNull(this.tablecoInsuranceInNetworkTier1.serviceVisit_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetserviceVisit_IdNull() {
                this[this.tablecoInsuranceInNetworkTier1.serviceVisit_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class coInsuranceInNetworkTier2Row : global::System.Data.DataRow {
            
            private coInsuranceInNetworkTier2DataTable tablecoInsuranceInNetworkTier2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal coInsuranceInNetworkTier2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecoInsuranceInNetworkTier2 = ((coInsuranceInNetworkTier2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecoInsuranceInNetworkTier2.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'coInsuranceInNetworkTier2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoInsuranceInNetworkTier2.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecoInsuranceInNetworkTier2.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'coInsuranceInNetworkTier2\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablecoInsuranceInNetworkTier2.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int serviceVisit_Id {
                get {
                    try {
                        return ((int)(this[this.tablecoInsuranceInNetworkTier2.serviceVisit_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'serviceVisit_Id\' in table \'coInsuranceInNetworkTier2\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablecoInsuranceInNetworkTier2.serviceVisit_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRow serviceVisitRow {
                get {
                    return ((serviceVisitRow)(this.GetParentRow(this.Table.ParentRelations["serviceVisit_coInsuranceInNetworkTier2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["serviceVisit_coInsuranceInNetworkTier2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecoInsuranceInNetworkTier2.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecoInsuranceInNetworkTier2.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecoInsuranceInNetworkTier2.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecoInsuranceInNetworkTier2.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsserviceVisit_IdNull() {
                return this.IsNull(this.tablecoInsuranceInNetworkTier2.serviceVisit_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetserviceVisit_IdNull() {
                this[this.tablecoInsuranceInNetworkTier2.serviceVisit_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class coInsuranceOutOfNetworkRow : global::System.Data.DataRow {
            
            private coInsuranceOutOfNetworkDataTable tablecoInsuranceOutOfNetwork;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal coInsuranceOutOfNetworkRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecoInsuranceOutOfNetwork = ((coInsuranceOutOfNetworkDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellValue {
                get {
                    try {
                        return ((string)(this[this.tablecoInsuranceOutOfNetwork.cellValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellValue\' in table \'coInsuranceOutOfNetwork\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecoInsuranceOutOfNetwork.cellValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cellLocation {
                get {
                    try {
                        return ((string)(this[this.tablecoInsuranceOutOfNetwork.cellLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellLocation\' in table \'coInsuranceOutOfNetwork\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablecoInsuranceOutOfNetwork.cellLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int serviceVisit_Id {
                get {
                    try {
                        return ((int)(this[this.tablecoInsuranceOutOfNetwork.serviceVisit_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'serviceVisit_Id\' in table \'coInsuranceOutOfNetwork\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablecoInsuranceOutOfNetwork.serviceVisit_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRow serviceVisitRow {
                get {
                    return ((serviceVisitRow)(this.GetParentRow(this.Table.ParentRelations["serviceVisit_coInsuranceOutOfNetwork"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["serviceVisit_coInsuranceOutOfNetwork"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellValueNull() {
                return this.IsNull(this.tablecoInsuranceOutOfNetwork.cellValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellValueNull() {
                this[this.tablecoInsuranceOutOfNetwork.cellValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscellLocationNull() {
                return this.IsNull(this.tablecoInsuranceOutOfNetwork.cellLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellLocationNull() {
                this[this.tablecoInsuranceOutOfNetwork.cellLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsserviceVisit_IdNull() {
                return this.IsNull(this.tablecoInsuranceOutOfNetwork.serviceVisit_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetserviceVisit_IdNull() {
                this[this.tablecoInsuranceOutOfNetwork.serviceVisit_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class planMarketingNameRowChangeEvent : global::System.EventArgs {
            
            private planMarketingNameRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planMarketingNameRowChangeEvent(planMarketingNameRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planMarketingNameRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class metalLevelRowChangeEvent : global::System.EventArgs {
            
            private metalLevelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public metalLevelRowChangeEvent(metalLevelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public metalLevelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class packagesListRowChangeEvent : global::System.EventArgs {
            
            private packagesListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesListRowChangeEvent(packagesListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class packagesRowChangeEvent : global::System.EventArgs {
            
            private packagesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesRowChangeEvent(packagesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public packagesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class headerRowChangeEvent : global::System.EventArgs {
            
            private headerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public headerRowChangeEvent(headerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public headerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class issuerIdRowChangeEvent : global::System.EventArgs {
            
            private issuerIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerIdRowChangeEvent(issuerIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class statePostalCodeRowChangeEvent : global::System.EventArgs {
            
            private statePostalCodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public statePostalCodeRowChangeEvent(statePostalCodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public statePostalCodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class marketCoverageRowChangeEvent : global::System.EventArgs {
            
            private marketCoverageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public marketCoverageRowChangeEvent(marketCoverageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public marketCoverageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dentalPlanOnlyIndRowChangeEvent : global::System.EventArgs {
            
            private dentalPlanOnlyIndRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dentalPlanOnlyIndRowChangeEvent(dentalPlanOnlyIndRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dentalPlanOnlyIndRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tinRowChangeEvent : global::System.EventArgs {
            
            private tinRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tinRowChangeEvent(tinRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tinRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class benefitsListRowChangeEvent : global::System.EventArgs {
            
            private benefitsListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsListRowChangeEvent(benefitsListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class benefitsRowChangeEvent : global::System.EventArgs {
            
            private benefitsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRowChangeEvent(benefitsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class benefitTypeCodeRowChangeEvent : global::System.EventArgs {
            
            private benefitTypeCodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitTypeCodeRowChangeEvent(benefitTypeCodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public benefitTypeCodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class isEHBRowChangeEvent : global::System.EventArgs {
            
            private isEHBRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isEHBRowChangeEvent(isEHBRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isEHBRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class isStateMandateRowChangeEvent : global::System.EventArgs {
            
            private isStateMandateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isStateMandateRowChangeEvent(isStateMandateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isStateMandateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class isBenefitCoveredRowChangeEvent : global::System.EventArgs {
            
            private isBenefitCoveredRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isBenefitCoveredRowChangeEvent(isBenefitCoveredRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isBenefitCoveredRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class serviceLimitRowChangeEvent : global::System.EventArgs {
            
            private serviceLimitRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceLimitRowChangeEvent(serviceLimitRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceLimitRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class quantityLimitRowChangeEvent : global::System.EventArgs {
            
            private quantityLimitRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public quantityLimitRowChangeEvent(quantityLimitRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public quantityLimitRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class unitLimitRowChangeEvent : global::System.EventArgs {
            
            private unitLimitRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public unitLimitRowChangeEvent(unitLimitRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public unitLimitRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class minimumStayRowChangeEvent : global::System.EventArgs {
            
            private minimumStayRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public minimumStayRowChangeEvent(minimumStayRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public minimumStayRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class exclusionRowChangeEvent : global::System.EventArgs {
            
            private exclusionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exclusionRowChangeEvent(exclusionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public exclusionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class explanationRowChangeEvent : global::System.EventArgs {
            
            private explanationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public explanationRowChangeEvent(explanationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public explanationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ehbVarianceReasonRowChangeEvent : global::System.EventArgs {
            
            private ehbVarianceReasonRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbVarianceReasonRowChangeEvent(ehbVarianceReasonRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbVarianceReasonRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class subjectToDeductibleTier1RowChangeEvent : global::System.EventArgs {
            
            private subjectToDeductibleTier1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier1RowChangeEvent(subjectToDeductibleTier1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class subjectToDeductibleTier2RowChangeEvent : global::System.EventArgs {
            
            private subjectToDeductibleTier2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier2RowChangeEvent(subjectToDeductibleTier2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public subjectToDeductibleTier2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class excludedInNetworkMOOPRowChangeEvent : global::System.EventArgs {
            
            private excludedInNetworkMOOPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedInNetworkMOOPRowChangeEvent(excludedInNetworkMOOPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedInNetworkMOOPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class excludedOutOfNetworkMOOPRowChangeEvent : global::System.EventArgs {
            
            private excludedOutOfNetworkMOOPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedOutOfNetworkMOOPRowChangeEvent(excludedOutOfNetworkMOOPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public excludedOutOfNetworkMOOPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class plansListRowChangeEvent : global::System.EventArgs {
            
            private plansListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansListRowChangeEvent(plansListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class plansRowChangeEvent : global::System.EventArgs {
            
            private plansRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansRowChangeEvent(plansRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public plansRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class planAttributesRowChangeEvent : global::System.EventArgs {
            
            private planAttributesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRowChangeEvent(planAttributesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planAttributesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class standardComponentIDRowChangeEvent : global::System.EventArgs {
            
            private standardComponentIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public standardComponentIDRowChangeEvent(standardComponentIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public standardComponentIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class hiosProductIDRowChangeEvent : global::System.EventArgs {
            
            private hiosProductIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hiosProductIDRowChangeEvent(hiosProductIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hiosProductIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class hpidRowChangeEvent : global::System.EventArgs {
            
            private hpidRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hpidRowChangeEvent(hpidRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hpidRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class networkIDRowChangeEvent : global::System.EventArgs {
            
            private networkIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public networkIDRowChangeEvent(networkIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public networkIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class serviceAreaIDRowChangeEvent : global::System.EventArgs {
            
            private serviceAreaIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceAreaIDRowChangeEvent(serviceAreaIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceAreaIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class formularyIDRowChangeEvent : global::System.EventArgs {
            
            private formularyIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public formularyIDRowChangeEvent(formularyIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public formularyIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class isNewPlanRowChangeEvent : global::System.EventArgs {
            
            private isNewPlanRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isNewPlanRowChangeEvent(isNewPlanRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isNewPlanRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class planTypeRowChangeEvent : global::System.EventArgs {
            
            private planTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planTypeRowChangeEvent(planTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class uniquePlanDesignRowChangeEvent : global::System.EventArgs {
            
            private uniquePlanDesignRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uniquePlanDesignRowChangeEvent(uniquePlanDesignRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uniquePlanDesignRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class qhpOrNonQhpRowChangeEvent : global::System.EventArgs {
            
            private qhpOrNonQhpRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public qhpOrNonQhpRowChangeEvent(qhpOrNonQhpRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public qhpOrNonQhpRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class insurancePlanPregnancyNoticeReqIndRowChangeEvent : global::System.EventArgs {
            
            private insurancePlanPregnancyNoticeReqIndRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanPregnancyNoticeReqIndRowChangeEvent(insurancePlanPregnancyNoticeReqIndRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanPregnancyNoticeReqIndRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class isSpecialistReferralRequiredRowChangeEvent : global::System.EventArgs {
            
            private isSpecialistReferralRequiredRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isSpecialistReferralRequiredRowChangeEvent(isSpecialistReferralRequiredRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isSpecialistReferralRequiredRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class healthCareSpecialistReferralTypeRowChangeEvent : global::System.EventArgs {
            
            private healthCareSpecialistReferralTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public healthCareSpecialistReferralTypeRowChangeEvent(healthCareSpecialistReferralTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public healthCareSpecialistReferralTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class insurancePlanBenefitExclusionTextRowChangeEvent : global::System.EventArgs {
            
            private insurancePlanBenefitExclusionTextRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanBenefitExclusionTextRowChangeEvent(insurancePlanBenefitExclusionTextRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public insurancePlanBenefitExclusionTextRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class indianPlanVariationRowChangeEvent : global::System.EventArgs {
            
            private indianPlanVariationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public indianPlanVariationRowChangeEvent(indianPlanVariationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public indianPlanVariationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class hsaEligibilityRowChangeEvent : global::System.EventArgs {
            
            private hsaEligibilityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hsaEligibilityRowChangeEvent(hsaEligibilityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public hsaEligibilityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class employerHSAHRAContributionIndicatorRowChangeEvent : global::System.EventArgs {
            
            private employerHSAHRAContributionIndicatorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public employerHSAHRAContributionIndicatorRowChangeEvent(employerHSAHRAContributionIndicatorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public employerHSAHRAContributionIndicatorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class empContributionAmountForHSAOrHRARowChangeEvent : global::System.EventArgs {
            
            private empContributionAmountForHSAOrHRARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public empContributionAmountForHSAOrHRARowChangeEvent(empContributionAmountForHSAOrHRARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public empContributionAmountForHSAOrHRARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class childOnlyOfferingRowChangeEvent : global::System.EventArgs {
            
            private childOnlyOfferingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyOfferingRowChangeEvent(childOnlyOfferingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyOfferingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class childOnlyPlanIDRowChangeEvent : global::System.EventArgs {
            
            private childOnlyPlanIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyPlanIDRowChangeEvent(childOnlyPlanIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public childOnlyPlanIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class isWellnessProgramOfferedRowChangeEvent : global::System.EventArgs {
            
            private isWellnessProgramOfferedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isWellnessProgramOfferedRowChangeEvent(isWellnessProgramOfferedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isWellnessProgramOfferedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class isDiseaseMgmtProgramsOfferedRowChangeEvent : global::System.EventArgs {
            
            private isDiseaseMgmtProgramsOfferedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isDiseaseMgmtProgramsOfferedRowChangeEvent(isDiseaseMgmtProgramsOfferedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public isDiseaseMgmtProgramsOfferedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ehbApportionmentForPediatricDentalRowChangeEvent : global::System.EventArgs {
            
            private ehbApportionmentForPediatricDentalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbApportionmentForPediatricDentalRowChangeEvent(ehbApportionmentForPediatricDentalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ehbApportionmentForPediatricDentalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class guaranteedVsEstimatedRateRowChangeEvent : global::System.EventArgs {
            
            private guaranteedVsEstimatedRateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public guaranteedVsEstimatedRateRowChangeEvent(guaranteedVsEstimatedRateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public guaranteedVsEstimatedRateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class maximumCoinsuranceForSpecialtyDrugsRowChangeEvent : global::System.EventArgs {
            
            private maximumCoinsuranceForSpecialtyDrugsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maximumCoinsuranceForSpecialtyDrugsRowChangeEvent(maximumCoinsuranceForSpecialtyDrugsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maximumCoinsuranceForSpecialtyDrugsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class maxNumDaysForChargingInpatientCopayRowChangeEvent : global::System.EventArgs {
            
            private maxNumDaysForChargingInpatientCopayRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maxNumDaysForChargingInpatientCopayRowChangeEvent(maxNumDaysForChargingInpatientCopayRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public maxNumDaysForChargingInpatientCopayRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class beginPrimaryCareCostSharingAfterSetNumberVisitsRowChangeEvent : global::System.EventArgs {
            
            private beginPrimaryCareCostSharingAfterSetNumberVisitsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareCostSharingAfterSetNumberVisitsRowChangeEvent(beginPrimaryCareCostSharingAfterSetNumberVisitsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareCostSharingAfterSetNumberVisitsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChangeEvent : global::System.EventArgs {
            
            private beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRowChangeEvent(beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public beginPrimaryCareDeductibleOrCoinsuranceAfterSetNumberCopaysRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class planEffectiveDateRowChangeEvent : global::System.EventArgs {
            
            private planEffectiveDateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planEffectiveDateRowChangeEvent(planEffectiveDateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planEffectiveDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class planExpirationDateRowChangeEvent : global::System.EventArgs {
            
            private planExpirationDateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planExpirationDateRowChangeEvent(planExpirationDateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planExpirationDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class outOfCountryCoverageRowChangeEvent : global::System.EventArgs {
            
            private outOfCountryCoverageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageRowChangeEvent(outOfCountryCoverageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class outOfCountryCoverageDescriptionRowChangeEvent : global::System.EventArgs {
            
            private outOfCountryCoverageDescriptionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageDescriptionRowChangeEvent(outOfCountryCoverageDescriptionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfCountryCoverageDescriptionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class outOfServiceAreaCoverageRowChangeEvent : global::System.EventArgs {
            
            private outOfServiceAreaCoverageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageRowChangeEvent(outOfServiceAreaCoverageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class outOfServiceAreaCoverageDescriptionRowChangeEvent : global::System.EventArgs {
            
            private outOfServiceAreaCoverageDescriptionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageDescriptionRowChangeEvent(outOfServiceAreaCoverageDescriptionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfServiceAreaCoverageDescriptionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class nationalNetworkRowChangeEvent : global::System.EventArgs {
            
            private nationalNetworkRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nationalNetworkRowChangeEvent(nationalNetworkRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nationalNetworkRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class summaryBenefitAndCoverageURLRowChangeEvent : global::System.EventArgs {
            
            private summaryBenefitAndCoverageURLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public summaryBenefitAndCoverageURLRowChangeEvent(summaryBenefitAndCoverageURLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public summaryBenefitAndCoverageURLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class enrollmentPaymentURLRowChangeEvent : global::System.EventArgs {
            
            private enrollmentPaymentURLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public enrollmentPaymentURLRowChangeEvent(enrollmentPaymentURLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public enrollmentPaymentURLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class planBrochureRowChangeEvent : global::System.EventArgs {
            
            private planBrochureRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planBrochureRowChangeEvent(planBrochureRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planBrochureRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class costShareVariancesListRowChangeEvent : global::System.EventArgs {
            
            private costShareVariancesListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVariancesListRowChangeEvent(costShareVariancesListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVariancesListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class costShareVarianceRowChangeEvent : global::System.EventArgs {
            
            private costShareVarianceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRowChangeEvent(costShareVarianceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public costShareVarianceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class planIdRowChangeEvent : global::System.EventArgs {
            
            private planIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planIdRowChangeEvent(planIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class csrVariationTypeRowChangeEvent : global::System.EventArgs {
            
            private csrVariationTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public csrVariationTypeRowChangeEvent(csrVariationTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public csrVariationTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class issuerActuarialValueRowChangeEvent : global::System.EventArgs {
            
            private issuerActuarialValueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerActuarialValueRowChangeEvent(issuerActuarialValueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public issuerActuarialValueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class avCalculatorOutputNumberRowChangeEvent : global::System.EventArgs {
            
            private avCalculatorOutputNumberRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public avCalculatorOutputNumberRowChangeEvent(avCalculatorOutputNumberRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public avCalculatorOutputNumberRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class medicalAndDrugDeductiblesIntegratedRowChangeEvent : global::System.EventArgs {
            
            private medicalAndDrugDeductiblesIntegratedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugDeductiblesIntegratedRowChangeEvent(medicalAndDrugDeductiblesIntegratedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugDeductiblesIntegratedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class medicalAndDrugMaxOutOfPocketIntegratedRowChangeEvent : global::System.EventArgs {
            
            private medicalAndDrugMaxOutOfPocketIntegratedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugMaxOutOfPocketIntegratedRowChangeEvent(medicalAndDrugMaxOutOfPocketIntegratedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public medicalAndDrugMaxOutOfPocketIntegratedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class multipleProviderTiersRowChangeEvent : global::System.EventArgs {
            
            private multipleProviderTiersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public multipleProviderTiersRowChangeEvent(multipleProviderTiersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public multipleProviderTiersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class firstTierUtilizationRowChangeEvent : global::System.EventArgs {
            
            private firstTierUtilizationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public firstTierUtilizationRowChangeEvent(firstTierUtilizationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public firstTierUtilizationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class secondTierUtilizationRowChangeEvent : global::System.EventArgs {
            
            private secondTierUtilizationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public secondTierUtilizationRowChangeEvent(secondTierUtilizationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public secondTierUtilizationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class sbcRowChangeEvent : global::System.EventArgs {
            
            private sbcRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRowChangeEvent(sbcRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbcRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class havingBabyDeductibleRowChangeEvent : global::System.EventArgs {
            
            private havingBabyDeductibleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyDeductibleRowChangeEvent(havingBabyDeductibleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyDeductibleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class havingBabyCoPaymentRowChangeEvent : global::System.EventArgs {
            
            private havingBabyCoPaymentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoPaymentRowChangeEvent(havingBabyCoPaymentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoPaymentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class havingBabyCoInsuranceRowChangeEvent : global::System.EventArgs {
            
            private havingBabyCoInsuranceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoInsuranceRowChangeEvent(havingBabyCoInsuranceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyCoInsuranceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class havingBabyLimitRowChangeEvent : global::System.EventArgs {
            
            private havingBabyLimitRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyLimitRowChangeEvent(havingBabyLimitRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingBabyLimitRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class havingDiabetesDeductibleRowChangeEvent : global::System.EventArgs {
            
            private havingDiabetesDeductibleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesDeductibleRowChangeEvent(havingDiabetesDeductibleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesDeductibleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class havingDiabetesCopayRowChangeEvent : global::System.EventArgs {
            
            private havingDiabetesCopayRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCopayRowChangeEvent(havingDiabetesCopayRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCopayRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class havingDiabetesCoInsuranceRowChangeEvent : global::System.EventArgs {
            
            private havingDiabetesCoInsuranceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCoInsuranceRowChangeEvent(havingDiabetesCoInsuranceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesCoInsuranceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class havingDiabetesLimitRowChangeEvent : global::System.EventArgs {
            
            private havingDiabetesLimitRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesLimitRowChangeEvent(havingDiabetesLimitRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public havingDiabetesLimitRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class moopListRowChangeEvent : global::System.EventArgs {
            
            private moopListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopListRowChangeEvent(moopListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class moopRowChangeEvent : global::System.EventArgs {
            
            private moopRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRowChangeEvent(moopRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public moopRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class nameRowChangeEvent : global::System.EventArgs {
            
            private nameRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nameRowChangeEvent(nameRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nameRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class inNetworkTier1IndividualAmountRowChangeEvent : global::System.EventArgs {
            
            private inNetworkTier1IndividualAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualAmountRowChangeEvent(inNetworkTier1IndividualAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class inNetworkTier1FamilyAmountRowChangeEvent : global::System.EventArgs {
            
            private inNetworkTier1FamilyAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyAmountRowChangeEvent(inNetworkTier1FamilyAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class inNetworkTier2IndividualAmountRowChangeEvent : global::System.EventArgs {
            
            private inNetworkTier2IndividualAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2IndividualAmountRowChangeEvent(inNetworkTier2IndividualAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2IndividualAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class inNetworkTier2FamilyAmountRowChangeEvent : global::System.EventArgs {
            
            private inNetworkTier2FamilyAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2FamilyAmountRowChangeEvent(inNetworkTier2FamilyAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier2FamilyAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class outOfNetworkIndividualAmountRowChangeEvent : global::System.EventArgs {
            
            private outOfNetworkIndividualAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualAmountRowChangeEvent(outOfNetworkIndividualAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class outOfNetworkFamilyAmountRowChangeEvent : global::System.EventArgs {
            
            private outOfNetworkFamilyAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyAmountRowChangeEvent(outOfNetworkFamilyAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class combinedInOutNetworkIndividualAmountRowChangeEvent : global::System.EventArgs {
            
            private combinedInOutNetworkIndividualAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkIndividualAmountRowChangeEvent(combinedInOutNetworkIndividualAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkIndividualAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class combinedInOutNetworkFamilyAmountRowChangeEvent : global::System.EventArgs {
            
            private combinedInOutNetworkFamilyAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkFamilyAmountRowChangeEvent(combinedInOutNetworkFamilyAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOutNetworkFamilyAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class planDeductibleListRowChangeEvent : global::System.EventArgs {
            
            private planDeductibleListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleListRowChangeEvent(planDeductibleListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class planDeductibleRowChangeEvent : global::System.EventArgs {
            
            private planDeductibleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRowChangeEvent(planDeductibleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public planDeductibleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class deductibleTypeRowChangeEvent : global::System.EventArgs {
            
            private deductibleTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public deductibleTypeRowChangeEvent(deductibleTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public deductibleTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class inNetworkTier1IndividualRowChangeEvent : global::System.EventArgs {
            
            private inNetworkTier1IndividualRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualRowChangeEvent(inNetworkTier1IndividualRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1IndividualRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class inNetworkTier1FamilyRowChangeEvent : global::System.EventArgs {
            
            private inNetworkTier1FamilyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyRowChangeEvent(inNetworkTier1FamilyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTier1FamilyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class coinsuranceInNetworkTier1RowChangeEvent : global::System.EventArgs {
            
            private coinsuranceInNetworkTier1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier1RowChangeEvent(coinsuranceInNetworkTier1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class inNetworkTierTwoIndividualRowChangeEvent : global::System.EventArgs {
            
            private inNetworkTierTwoIndividualRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoIndividualRowChangeEvent(inNetworkTierTwoIndividualRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoIndividualRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class inNetworkTierTwoFamilyRowChangeEvent : global::System.EventArgs {
            
            private inNetworkTierTwoFamilyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoFamilyRowChangeEvent(inNetworkTierTwoFamilyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public inNetworkTierTwoFamilyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class coinsuranceInNetworkTier2RowChangeEvent : global::System.EventArgs {
            
            private coinsuranceInNetworkTier2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier2RowChangeEvent(coinsuranceInNetworkTier2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coinsuranceInNetworkTier2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class outOfNetworkIndividualRowChangeEvent : global::System.EventArgs {
            
            private outOfNetworkIndividualRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualRowChangeEvent(outOfNetworkIndividualRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkIndividualRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class outOfNetworkFamilyRowChangeEvent : global::System.EventArgs {
            
            private outOfNetworkFamilyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyRowChangeEvent(outOfNetworkFamilyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public outOfNetworkFamilyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class combinedInOrOutNetworkIndividualRowChangeEvent : global::System.EventArgs {
            
            private combinedInOrOutNetworkIndividualRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkIndividualRowChangeEvent(combinedInOrOutNetworkIndividualRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkIndividualRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class combinedInOrOutNetworkFamilyRowChangeEvent : global::System.EventArgs {
            
            private combinedInOrOutNetworkFamilyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkFamilyRowChangeEvent(combinedInOrOutNetworkFamilyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public combinedInOrOutNetworkFamilyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class serviceVisitListRowChangeEvent : global::System.EventArgs {
            
            private serviceVisitListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitListRowChangeEvent(serviceVisitListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class serviceVisitRowChangeEvent : global::System.EventArgs {
            
            private serviceVisitRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRowChangeEvent(serviceVisitRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public serviceVisitRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class visitTypeRowChangeEvent : global::System.EventArgs {
            
            private visitTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public visitTypeRowChangeEvent(visitTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public visitTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class copayInNetworkTier1RowChangeEvent : global::System.EventArgs {
            
            private copayInNetworkTier1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier1RowChangeEvent(copayInNetworkTier1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class copayInNetworkTier2RowChangeEvent : global::System.EventArgs {
            
            private copayInNetworkTier2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier2RowChangeEvent(copayInNetworkTier2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayInNetworkTier2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class copayOutOfNetworkRowChangeEvent : global::System.EventArgs {
            
            private copayOutOfNetworkRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayOutOfNetworkRowChangeEvent(copayOutOfNetworkRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public copayOutOfNetworkRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class coInsuranceInNetworkTier1RowChangeEvent : global::System.EventArgs {
            
            private coInsuranceInNetworkTier1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier1RowChangeEvent(coInsuranceInNetworkTier1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class coInsuranceInNetworkTier2RowChangeEvent : global::System.EventArgs {
            
            private coInsuranceInNetworkTier2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier2RowChangeEvent(coInsuranceInNetworkTier2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceInNetworkTier2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class coInsuranceOutOfNetworkRowChangeEvent : global::System.EventArgs {
            
            private coInsuranceOutOfNetworkRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceOutOfNetworkRowChangeEvent(coInsuranceOutOfNetworkRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public coInsuranceOutOfNetworkRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591