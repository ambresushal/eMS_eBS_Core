//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace tmg.equinox.integration.domain.services.MasterListServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", ConfigurationName="MasterListServiceReference.MasterListService")]
    public interface MasterListService {
        
        // CODEGEN: Parameter 'BenefitCategory3ID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetBenefitCategory3Data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="BenefitCategory3")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3DataResponse GetBenefitCategory3Data(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3Data request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBenefitCategory3Data", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3DataResponse> GetBenefitCategory3DataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3Data request);
        
        // CODEGEN: Parameter 'MandateRegionID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateRegionData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="MandateRegion")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionDataResponse GetMandateRegionData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateRegionData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionDataResponse> GetMandateRegionDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionData request);
        
        // CODEGEN: Parameter 'MandateSegmentID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateSegmentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="MandateSegment")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentDataResponse GetMandateSegmentData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateSegmentData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentDataResponse> GetMandateSegmentDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentData request);
        
        // CODEGEN: Parameter 'PDBCTypeListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetPDBCTypeListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="PDBCTypeList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListDataResponse GetPDBCTypeListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPDBCTypeListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListDataResponse> GetPDBCTypeListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListData request);
        
        // CODEGEN: Parameter 'DeductibleListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetDeductibleListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="DeductibleList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListDataResponse GetDeductibleListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDeductibleListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListDataResponse> GetDeductibleListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListData request);
        
        // CODEGEN: Parameter 'MandateRegionListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateRegionListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="MandateRegionList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListDataResponse GetMandateRegionListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateRegionListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListDataResponse> GetMandateRegionListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListData request);
        
        // CODEGEN: Parameter 'CopayListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetCopayListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="CopayList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListDataResponse GetCopayListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCopayListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListDataResponse> GetCopayListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListData request);
        
        // CODEGEN: Parameter 'OutofPocketMaxListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetOutofPocketMaxListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="OutofPocketMaxList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListDataResponse GetOutofPocketMaxListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetOutofPocketMaxListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListDataResponse> GetOutofPocketMaxListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListData request);
        
        // CODEGEN: Parameter 'MandateDetailListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateDetailListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="MandateDetailList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListDataResponse GetMandateDetailListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateDetailListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListDataResponse> GetMandateDetailListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListData request);
        
        // CODEGEN: Parameter 'MandateSummaryID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateSummaryData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="MandateSummary")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryDataResponse GetMandateSummaryData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateSummaryData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryDataResponse> GetMandateSummaryDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryData request);
        
        // CODEGEN: Parameter 'AllowedCounterID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetAllowedCounterData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AllowedCounter")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterDataResponse GetAllowedCounterData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAllowedCounterData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterDataResponse> GetAllowedCounterDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterData request);
        
        // CODEGEN: Parameter 'MandateDetailID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateDetailData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="MandateDetail")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailDataResponse GetMandateDetailData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateDetailData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailDataResponse> GetMandateDetailDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailData request);
        
        // CODEGEN: Parameter 'CoverageLevelListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetCoverageLevelListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="CoverageLevelList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListDataResponse GetCoverageLevelListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCoverageLevelListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListDataResponse> GetCoverageLevelListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListData request);
        
        // CODEGEN: Parameter 'CoverageLevelID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetCoverageLevelData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="CoverageLevel")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelDataResponse GetCoverageLevelData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCoverageLevelData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelDataResponse> GetCoverageLevelDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelData request);
        
        // CODEGEN: Parameter 'LTLTListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetLTLTListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="LTLTList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListDataResponse GetLTLTListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLTLTListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListDataResponse> GetLTLTListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListData request);
        
        // CODEGEN: Parameter 'AccumulatorListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetAccumulatorListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AccumulatorList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListDataResponse GetAccumulatorListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAccumulatorListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListDataResponse> GetAccumulatorListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListData request);
        
        // CODEGEN: Parameter 'BenefitCategory3ListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetBenefitCategory3ListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="BenefitCategory3List")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListDataResponse GetBenefitCategory3ListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBenefitCategory3ListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListDataResponse> GetBenefitCategory3ListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListData request);
        
        // CODEGEN: Parameter 'LTIDListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetLTIDListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="LTIDList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListDataResponse GetLTIDListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLTIDListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListDataResponse> GetLTIDListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListData request);
        
        // CODEGEN: Parameter 'CoinsuranceID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetCoinsuranceData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Coinsurance")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceDataResponse GetCoinsuranceData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCoinsuranceData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceDataResponse> GetCoinsuranceDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceData request);
        
        // CODEGEN: Parameter 'ServicesID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetServicesData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Services")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesDataResponse GetServicesData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServicesData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesDataResponse> GetServicesDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesData request);
        
        // CODEGEN: Parameter 'MessagesID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetMessagesData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Messages")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesDataResponse GetMessagesData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMessagesData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesDataResponse> GetMessagesDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesData request);
        
        // CODEGEN: Parameter 'CopayID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetCopayData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Copay")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayDataResponse GetCopayData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCopayData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayDataResponse> GetCopayDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayData request);
        
        // CODEGEN: Parameter 'LTSEListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetLTSEListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="LTSEList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListDataResponse GetLTSEListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLTSEListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListDataResponse> GetLTSEListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListData request);
        
        // CODEGEN: Parameter 'SERLMessageListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetSERLMessageListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="SERLMessageList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListDataResponse GetSERLMessageListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetSERLMessageListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListDataResponse> GetSERLMessageListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListData request);
        
        // CODEGEN: Parameter 'CopayTypeListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetCopayTypeListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="CopayTypeList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListDataResponse GetCopayTypeListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCopayTypeListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListDataResponse> GetCopayTypeListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListData request);
        
        // CODEGEN: Parameter 'AllowedCounterListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetAllowedCounterListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AllowedCounterList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListDataResponse GetAllowedCounterListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAllowedCounterListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListDataResponse> GetAllowedCounterListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListData request);
        
        // CODEGEN: Parameter 'MandateAssociationID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateAssociationData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="MandateAssociation")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationDataResponse GetMandateAssociationData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateAssociationData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationDataResponse> GetMandateAssociationDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationData request);
        
        // CODEGEN: Parameter 'AccumulatorsID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetAccumulatorsData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Accumulators")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsDataResponse GetAccumulatorsData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAccumulatorsData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsDataResponse> GetAccumulatorsDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsData request);
        
        // CODEGEN: Parameter 'BenefitCategory1ListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetBenefitCategory1ListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="BenefitCategory1List")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListDataResponse GetBenefitCategory1ListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBenefitCategory1ListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListDataResponse> GetBenefitCategory1ListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListData request);
        
        // CODEGEN: Parameter 'Instance' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetAllMasterListIDs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Instance")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDsResponse GetAllMasterListIDs(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDs request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAllMasterListIDs", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDsResponse> GetAllMasterListIDsAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDs request);
        
        // CODEGEN: Parameter 'PDVCRulesID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetPDVCRulesData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="PDVCRules")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesDataResponse GetPDVCRulesData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPDVCRulesData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesDataResponse> GetPDVCRulesDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesData request);
        
        // CODEGEN: Parameter 'MasterListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetMasterList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="MasterList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterListResponse GetMasterList(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterList request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMasterList", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterListResponse> GetMasterListAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterList request);
        
        // CODEGEN: Parameter 'DeductibleID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetDeductibleData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Deductible")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleDataResponse GetDeductibleData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDeductibleData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleDataResponse> GetDeductibleDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleData request);
        
        // CODEGEN: Parameter 'BenefitCategory1ID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetBenefitCategory1Data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="BenefitCategory1")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1DataResponse GetBenefitCategory1Data(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1Data request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBenefitCategory1Data", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1DataResponse> GetBenefitCategory1DataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1Data request);
        
        // CODEGEN: Parameter 'DisallowedMessageListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetDisallowedMessageListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="DisallowedMessageList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListDataResponse GetDisallowedMessageListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDisallowedMessageListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListDataResponse> GetDisallowedMessageListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListData request);
        
        // CODEGEN: Parameter 'PDBCPrefixListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetPDBCPrefixListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="PDBCPrefixList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListDataResponse GetPDBCPrefixListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPDBCPrefixListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListDataResponse> GetPDBCPrefixListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListData request);
        
        // CODEGEN: Parameter 'AllowedAmountListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetAllowedAmountListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AllowedAmountList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListDataResponse GetAllowedAmountListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAllowedAmountListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListDataResponse> GetAllowedAmountListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListData request);
        
        // CODEGEN: Parameter 'BenefitCategory2ID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetBenefitCategory2Data", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="BenefitCategory2")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2DataResponse GetBenefitCategory2Data(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2Data request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBenefitCategory2Data", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2DataResponse> GetBenefitCategory2DataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2Data request);
        
        // CODEGEN: Parameter 'ServiceListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ServiceList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListDataResponse GetServiceListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListDataResponse> GetServiceListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListData request);
        
        // CODEGEN: Parameter 'LTIPListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetLTIPListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="LTIPList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListDataResponse GetLTIPListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLTIPListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListDataResponse> GetLTIPListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListData request);
        
        // CODEGEN: Parameter 'MandateAssociationListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateAssociationListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="MandateAssociationList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListDataResponse GetMandateAssociationListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateAssociationListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListDataResponse> GetMandateAssociationListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListData request);
        
        // CODEGEN: Parameter 'PDBCTypeID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetPDBCTypeData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="PDBCType")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeDataResponse GetPDBCTypeData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPDBCTypeData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeDataResponse> GetPDBCTypeDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeData request);
        
        // CODEGEN: Parameter 'MandateSummaryListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateSummaryListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="MandateSummaryList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListDataResponse GetMandateSummaryListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateSummaryListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListDataResponse> GetMandateSummaryListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListData request);
        
        // CODEGEN: Parameter 'ErouterRateTypesID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetErouterRateTypesData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ErouterRateTypes")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesDataResponse GetErouterRateTypesData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetErouterRateTypesData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesDataResponse> GetErouterRateTypesDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesData request);
        
        // CODEGEN: Parameter 'PDBCPrefixID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetPDBCPrefixData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="PDBCPrefix")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixDataResponse GetPDBCPrefixData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPDBCPrefixData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixDataResponse> GetPDBCPrefixDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixData request);
        
        // CODEGEN: Parameter 'CoinsuranceListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetCoinsuranceListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="CoinsuranceList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListDataResponse GetCoinsuranceListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCoinsuranceListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListDataResponse> GetCoinsuranceListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListData request);
        
        // CODEGEN: Parameter 'PlaceofServiceListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetPlaceofServiceListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="PlaceofServiceList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListDataResponse GetPlaceofServiceListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPlaceofServiceListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListDataResponse> GetPlaceofServiceListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveMasterList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        tmg.equinox.integration.domain.services.MasterListServiceReference.SaveMasterListResponse SaveMasterList(tmg.equinox.integration.domain.services.MasterListServiceReference.SaveMasterList request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="SaveMasterList", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.SaveMasterListResponse> SaveMasterListAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.SaveMasterList request);
        
        // CODEGEN: Parameter 'RateTypeID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetRateTypeData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="RateType")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeDataResponse GetRateTypeData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetRateTypeData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeDataResponse> GetRateTypeDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeData request);
        
        // CODEGEN: Parameter 'LTPRListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetLTPRListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="LTPRList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListDataResponse GetLTPRListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLTPRListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListDataResponse> GetLTPRListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListData request);
        
        // CODEGEN: Parameter 'CopayTypeID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetCopayTypeData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="CopayType")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeDataResponse GetCopayTypeData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCopayTypeData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeDataResponse> GetCopayTypeDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeData request);
        
        // CODEGEN: Parameter 'MandateSegmentListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateSegmentListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="MandateSegmentList")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListDataResponse GetMandateSegmentListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMandateSegmentListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListDataResponse> GetMandateSegmentListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListData request);
        
        // CODEGEN: Parameter 'LimitsID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetLimitsData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Limits")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsDataResponse GetLimitsData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLimitsData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsDataResponse> GetLimitsDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsData request);
        
        // CODEGEN: Parameter 'PlaceofServiceID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetPlaceofServiceData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="PlaceofService")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceDataResponse GetPlaceofServiceData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPlaceofServiceData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceDataResponse> GetPlaceofServiceDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceData request);
        
        // CODEGEN: Parameter 'AllowedAmountID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetAllowedAmountData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AllowedAmount")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountDataResponse GetAllowedAmountData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAllowedAmountData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountDataResponse> GetAllowedAmountDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountData request);
        
        // CODEGEN: Parameter 'BenefitCategory2ListID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetBenefitCategory2ListData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="BenefitCategory2List")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListDataResponse GetBenefitCategory2ListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBenefitCategory2ListData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListDataResponse> GetBenefitCategory2ListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListData request);
        
        // CODEGEN: Parameter 'OutofPocketMaxID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="GetOutofPocketMaxData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseData))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="OutofPocketMax")]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxDataResponse GetOutofPocketMaxData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetOutofPocketMaxData", ReplyAction="*")]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxDataResponse> GetOutofPocketMaxDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxData request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class BenefitCategory3 : BaseData {
        
        private BenefitCategory3List[] benefitCategory3ListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BenefitCategory3ListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public BenefitCategory3List[] BenefitCategory3ListData {
            get {
                return this.benefitCategory3ListDataField;
            }
            set {
                this.benefitCategory3ListDataField = value;
                this.RaisePropertyChanged("BenefitCategory3ListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class BenefitCategory3List : BaseData {
        
        private string benefitCategory3NameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string BenefitCategory3Name {
            get {
                return this.benefitCategory3NameField;
            }
            set {
                this.benefitCategory3NameField = value;
                this.RaisePropertyChanged("BenefitCategory3Name");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ErouterRateTypes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CopayType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PDBCPrefixList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PDBCPrefix))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PlaceofServiceList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PlaceofService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BenefitCategory2List))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BenefitCategory2))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PDBCType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OutofPocketMax))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BenefitCategory1))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LTPRList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LTIPList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Limits))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Deductible))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AllowedAmountList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AllowedAmount))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MasterList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PDVCRules))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BenefitCategory1List))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Accumulators))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MandateAssociationList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MandateAssociation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CopayTypeList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LTSEList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Copay))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DisallowedMessageList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SERLMessageList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Messages))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Services))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CoinsuranceList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Coinsurance))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LTIDList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccumulatorList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LTLTList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CoverageLevel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CoverageLevelList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MandateDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AllowedCounterList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AllowedCounter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MandateSummaryList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MandateSummary))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MandateDetailList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OutofPocketMaxList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CopayList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeductibleList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PDBCTypeList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MandateSegmentList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MandateSegment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MandateRegionList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MandateRegion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BenefitCategory3List))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BenefitCategory3))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/base")]
    public partial class BaseData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long instanceIDField;
        
        private bool instanceIDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public long InstanceID {
            get {
                return this.instanceIDField;
            }
            set {
                this.instanceIDField = value;
                this.RaisePropertyChanged("InstanceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InstanceIDSpecified {
            get {
                return this.instanceIDFieldSpecified;
            }
            set {
                this.instanceIDFieldSpecified = value;
                this.RaisePropertyChanged("InstanceIDSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class RateType : BaseData {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class ErouterRateTypes : BaseData {
        
        private RateType[] rateTypeDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RateTypeData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public RateType[] RateTypeData {
            get {
                return this.rateTypeDataField;
            }
            set {
                this.rateTypeDataField = value;
                this.RaisePropertyChanged("RateTypeData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class CopayType : BaseData {
        
        private CopayTypeList[] copayTypeListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CopayTypeListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public CopayTypeList[] CopayTypeListData {
            get {
                return this.copayTypeListDataField;
            }
            set {
                this.copayTypeListDataField = value;
                this.RaisePropertyChanged("CopayTypeListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class CopayTypeList : BaseData {
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class PDBCPrefixList : BaseData {
        
        private string pDBCTypeField;
        
        private string pDBCPrefixField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string PDBCType {
            get {
                return this.pDBCTypeField;
            }
            set {
                this.pDBCTypeField = value;
                this.RaisePropertyChanged("PDBCType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string PDBCPrefix {
            get {
                return this.pDBCPrefixField;
            }
            set {
                this.pDBCPrefixField = value;
                this.RaisePropertyChanged("PDBCPrefix");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class PDBCPrefix : BaseData {
        
        private PDBCPrefixList[] pDBCPrefixListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PDBCPrefixListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public PDBCPrefixList[] PDBCPrefixListData {
            get {
                return this.pDBCPrefixListDataField;
            }
            set {
                this.pDBCPrefixListDataField = value;
                this.RaisePropertyChanged("PDBCPrefixListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class PlaceofServiceList : BaseData {
        
        private string placeofServiceNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string PlaceofServiceName {
            get {
                return this.placeofServiceNameField;
            }
            set {
                this.placeofServiceNameField = value;
                this.RaisePropertyChanged("PlaceofServiceName");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class PlaceofService : BaseData {
        
        private PlaceofServiceList[] placeofServiceListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PlaceofServiceListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public PlaceofServiceList[] PlaceofServiceListData {
            get {
                return this.placeofServiceListDataField;
            }
            set {
                this.placeofServiceListDataField = value;
                this.RaisePropertyChanged("PlaceofServiceListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class BenefitCategory2List : BaseData {
        
        private string benefitCategory2NameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string BenefitCategory2Name {
            get {
                return this.benefitCategory2NameField;
            }
            set {
                this.benefitCategory2NameField = value;
                this.RaisePropertyChanged("BenefitCategory2Name");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class BenefitCategory2 : BaseData {
        
        private BenefitCategory2List[] benefitCategory2ListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BenefitCategory2ListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public BenefitCategory2List[] BenefitCategory2ListData {
            get {
                return this.benefitCategory2ListDataField;
            }
            set {
                this.benefitCategory2ListDataField = value;
                this.RaisePropertyChanged("BenefitCategory2ListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class PDBCType : BaseData {
        
        private PDBCTypeList[] pDBCTypeListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PDBCTypeListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public PDBCTypeList[] PDBCTypeListData {
            get {
                return this.pDBCTypeListDataField;
            }
            set {
                this.pDBCTypeListDataField = value;
                this.RaisePropertyChanged("PDBCTypeListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class PDBCTypeList : BaseData {
        
        private string pDBCTypeField;
        
        private string pDBCTypeDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string PDBCType {
            get {
                return this.pDBCTypeField;
            }
            set {
                this.pDBCTypeField = value;
                this.RaisePropertyChanged("PDBCType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string PDBCTypeDescription {
            get {
                return this.pDBCTypeDescriptionField;
            }
            set {
                this.pDBCTypeDescriptionField = value;
                this.RaisePropertyChanged("PDBCTypeDescription");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class OutofPocketMax : BaseData {
        
        private OutofPocketMaxList[] outofPocketMaxListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OutofPocketMaxListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public OutofPocketMaxList[] OutofPocketMaxListData {
            get {
                return this.outofPocketMaxListDataField;
            }
            set {
                this.outofPocketMaxListDataField = value;
                this.RaisePropertyChanged("OutofPocketMaxListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class OutofPocketMaxList : BaseData {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class BenefitCategory1 : BaseData {
        
        private BenefitCategory1List[] benefitCategory1ListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BenefitCategory1ListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public BenefitCategory1List[] BenefitCategory1ListData {
            get {
                return this.benefitCategory1ListDataField;
            }
            set {
                this.benefitCategory1ListDataField = value;
                this.RaisePropertyChanged("BenefitCategory1ListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class BenefitCategory1List : BaseData {
        
        private string benefitCategory1NameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string BenefitCategory1Name {
            get {
                return this.benefitCategory1NameField;
            }
            set {
                this.benefitCategory1NameField = value;
                this.RaisePropertyChanged("BenefitCategory1Name");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class LTPRList : BaseData {
        
        private string lTPRAccumulatorField;
        
        private string providerTypeField;
        
        private string limitIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string LTPRAccumulator {
            get {
                return this.lTPRAccumulatorField;
            }
            set {
                this.lTPRAccumulatorField = value;
                this.RaisePropertyChanged("LTPRAccumulator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string ProviderType {
            get {
                return this.providerTypeField;
            }
            set {
                this.providerTypeField = value;
                this.RaisePropertyChanged("ProviderType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string LimitID {
            get {
                return this.limitIDField;
            }
            set {
                this.limitIDField = value;
                this.RaisePropertyChanged("LimitID");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class LTIPList : BaseData {
        
        private string lTIPAccumulatorField;
        
        private string procedureFromField;
        
        private string procedureToField;
        
        private string limitIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string LTIPAccumulator {
            get {
                return this.lTIPAccumulatorField;
            }
            set {
                this.lTIPAccumulatorField = value;
                this.RaisePropertyChanged("LTIPAccumulator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string ProcedureFrom {
            get {
                return this.procedureFromField;
            }
            set {
                this.procedureFromField = value;
                this.RaisePropertyChanged("ProcedureFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string ProcedureTo {
            get {
                return this.procedureToField;
            }
            set {
                this.procedureToField = value;
                this.RaisePropertyChanged("ProcedureTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string LimitID {
            get {
                return this.limitIDField;
            }
            set {
                this.limitIDField = value;
                this.RaisePropertyChanged("LimitID");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class Limits : BaseData {
        
        private LTLTList[] lTLTListDataField;
        
        private LTIDList[] lTIDListDataField;
        
        private LTIPList[] lTIPListDataField;
        
        private LTPRList[] lTPRListDataField;
        
        private LTSEList[] lTSEListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LTLTListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public LTLTList[] LTLTListData {
            get {
                return this.lTLTListDataField;
            }
            set {
                this.lTLTListDataField = value;
                this.RaisePropertyChanged("LTLTListData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LTIDListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public LTIDList[] LTIDListData {
            get {
                return this.lTIDListDataField;
            }
            set {
                this.lTIDListDataField = value;
                this.RaisePropertyChanged("LTIDListData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LTIPListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public LTIPList[] LTIPListData {
            get {
                return this.lTIPListDataField;
            }
            set {
                this.lTIPListDataField = value;
                this.RaisePropertyChanged("LTIPListData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LTPRListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public LTPRList[] LTPRListData {
            get {
                return this.lTPRListDataField;
            }
            set {
                this.lTPRListDataField = value;
                this.RaisePropertyChanged("LTPRListData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LTSEListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public LTSEList[] LTSEListData {
            get {
                return this.lTSEListDataField;
            }
            set {
                this.lTSEListDataField = value;
                this.RaisePropertyChanged("LTSEListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class LTLTList : BaseData {
        
        private string limitIDField;
        
        private string accumulatorNumberField;
        
        private string limitValueField;
        
        private string descriptionField;
        
        private string categoryField;
        
        private string levelField;
        
        private string periodField;
        
        private string ruleField;
        
        private string relationsField;
        
        private string subsectionField;
        
        private string explanationCodeField;
        
        private string salaryBasedField;
        
        private string userMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string LimitID {
            get {
                return this.limitIDField;
            }
            set {
                this.limitIDField = value;
                this.RaisePropertyChanged("LimitID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string AccumulatorNumber {
            get {
                return this.accumulatorNumberField;
            }
            set {
                this.accumulatorNumberField = value;
                this.RaisePropertyChanged("AccumulatorNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string LimitValue {
            get {
                return this.limitValueField;
            }
            set {
                this.limitValueField = value;
                this.RaisePropertyChanged("LimitValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
                this.RaisePropertyChanged("Category");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string Period {
            get {
                return this.periodField;
            }
            set {
                this.periodField = value;
                this.RaisePropertyChanged("Period");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public string Rule {
            get {
                return this.ruleField;
            }
            set {
                this.ruleField = value;
                this.RaisePropertyChanged("Rule");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public string Relations {
            get {
                return this.relationsField;
            }
            set {
                this.relationsField = value;
                this.RaisePropertyChanged("Relations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public string Subsection {
            get {
                return this.subsectionField;
            }
            set {
                this.subsectionField = value;
                this.RaisePropertyChanged("Subsection");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        public string ExplanationCode {
            get {
                return this.explanationCodeField;
            }
            set {
                this.explanationCodeField = value;
                this.RaisePropertyChanged("ExplanationCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11)]
        public string SalaryBased {
            get {
                return this.salaryBasedField;
            }
            set {
                this.salaryBasedField = value;
                this.RaisePropertyChanged("SalaryBased");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12)]
        public string UserMessage {
            get {
                return this.userMessageField;
            }
            set {
                this.userMessageField = value;
                this.RaisePropertyChanged("UserMessage");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class LTIDList : BaseData {
        
        private string lTIDAccumulatorField;
        
        private string diagnosisIDField;
        
        private string limitIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string LTIDAccumulator {
            get {
                return this.lTIDAccumulatorField;
            }
            set {
                this.lTIDAccumulatorField = value;
                this.RaisePropertyChanged("LTIDAccumulator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string DiagnosisID {
            get {
                return this.diagnosisIDField;
            }
            set {
                this.diagnosisIDField = value;
                this.RaisePropertyChanged("DiagnosisID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string LimitID {
            get {
                return this.limitIDField;
            }
            set {
                this.limitIDField = value;
                this.RaisePropertyChanged("LimitID");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class LTSEList : BaseData {
        
        private string lTSEAccumulatorField;
        
        private string serviceIDField;
        
        private string weightedCounterField;
        
        private string limitIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string LTSEAccumulator {
            get {
                return this.lTSEAccumulatorField;
            }
            set {
                this.lTSEAccumulatorField = value;
                this.RaisePropertyChanged("LTSEAccumulator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string ServiceID {
            get {
                return this.serviceIDField;
            }
            set {
                this.serviceIDField = value;
                this.RaisePropertyChanged("ServiceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string WeightedCounter {
            get {
                return this.weightedCounterField;
            }
            set {
                this.weightedCounterField = value;
                this.RaisePropertyChanged("WeightedCounter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string LimitID {
            get {
                return this.limitIDField;
            }
            set {
                this.limitIDField = value;
                this.RaisePropertyChanged("LimitID");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class Deductible : BaseData {
        
        private DeductibleList[] deductibleListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DeductibleListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public DeductibleList[] DeductibleListData {
            get {
                return this.deductibleListDataField;
            }
            set {
                this.deductibleListDataField = value;
                this.RaisePropertyChanged("DeductibleListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class DeductibleList : BaseData {
        
        private double valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
                this.RaisePropertyChanged("ValueSpecified");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class AllowedAmountList : BaseData {
        
        private double valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
                this.RaisePropertyChanged("ValueSpecified");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class AllowedAmount : BaseData {
        
        private AllowedAmountList[] allowedAmountListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowedAmountListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public AllowedAmountList[] AllowedAmountListData {
            get {
                return this.allowedAmountListDataField;
            }
            set {
                this.allowedAmountListDataField = value;
                this.RaisePropertyChanged("AllowedAmountListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class MasterList : BaseData {
        
        private Accumulators accumulatorsDataField;
        
        private AllowedAmount allowedAmountDataField;
        
        private AllowedCounter allowedCounterDataField;
        
        private Copay copayDataField;
        
        private Coinsurance coinsuranceDataField;
        
        private Deductible deductibleDataField;
        
        private CoverageLevel coverageLevelDataField;
        
        private Services servicesDataField;
        
        private Limits limitsDataField;
        
        private Messages messagesDataField;
        
        private BenefitCategory1 benefitCategory1DataField;
        
        private OutofPocketMax outofPocketMaxDataField;
        
        private PDBCType pDBCTypeDataField;
        
        private PDVCRules pDVCRulesDataField;
        
        private MandateRegion mandateRegionDataField;
        
        private MandateSegment mandateSegmentDataField;
        
        private MandateSummary mandateSummaryDataField;
        
        private MandateDetail mandateDetailDataField;
        
        private MandateAssociation mandateAssociationDataField;
        
        private BenefitCategory2 benefitCategory2DataField;
        
        private BenefitCategory3 benefitCategory3DataField;
        
        private PlaceofService placeofServiceDataField;
        
        private PDBCPrefix pDBCPrefixDataField;
        
        private CopayType copayTypeDataField;
        
        private ErouterRateTypes erouterRateTypesDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public Accumulators AccumulatorsData {
            get {
                return this.accumulatorsDataField;
            }
            set {
                this.accumulatorsDataField = value;
                this.RaisePropertyChanged("AccumulatorsData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public AllowedAmount AllowedAmountData {
            get {
                return this.allowedAmountDataField;
            }
            set {
                this.allowedAmountDataField = value;
                this.RaisePropertyChanged("AllowedAmountData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public AllowedCounter AllowedCounterData {
            get {
                return this.allowedCounterDataField;
            }
            set {
                this.allowedCounterDataField = value;
                this.RaisePropertyChanged("AllowedCounterData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public Copay CopayData {
            get {
                return this.copayDataField;
            }
            set {
                this.copayDataField = value;
                this.RaisePropertyChanged("CopayData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public Coinsurance CoinsuranceData {
            get {
                return this.coinsuranceDataField;
            }
            set {
                this.coinsuranceDataField = value;
                this.RaisePropertyChanged("CoinsuranceData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public Deductible DeductibleData {
            get {
                return this.deductibleDataField;
            }
            set {
                this.deductibleDataField = value;
                this.RaisePropertyChanged("DeductibleData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public CoverageLevel CoverageLevelData {
            get {
                return this.coverageLevelDataField;
            }
            set {
                this.coverageLevelDataField = value;
                this.RaisePropertyChanged("CoverageLevelData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public Services ServicesData {
            get {
                return this.servicesDataField;
            }
            set {
                this.servicesDataField = value;
                this.RaisePropertyChanged("ServicesData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public Limits LimitsData {
            get {
                return this.limitsDataField;
            }
            set {
                this.limitsDataField = value;
                this.RaisePropertyChanged("LimitsData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public Messages MessagesData {
            get {
                return this.messagesDataField;
            }
            set {
                this.messagesDataField = value;
                this.RaisePropertyChanged("MessagesData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        public BenefitCategory1 BenefitCategory1Data {
            get {
                return this.benefitCategory1DataField;
            }
            set {
                this.benefitCategory1DataField = value;
                this.RaisePropertyChanged("BenefitCategory1Data");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11)]
        public OutofPocketMax OutofPocketMaxData {
            get {
                return this.outofPocketMaxDataField;
            }
            set {
                this.outofPocketMaxDataField = value;
                this.RaisePropertyChanged("OutofPocketMaxData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12)]
        public PDBCType PDBCTypeData {
            get {
                return this.pDBCTypeDataField;
            }
            set {
                this.pDBCTypeDataField = value;
                this.RaisePropertyChanged("PDBCTypeData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13)]
        public PDVCRules PDVCRulesData {
            get {
                return this.pDVCRulesDataField;
            }
            set {
                this.pDVCRulesDataField = value;
                this.RaisePropertyChanged("PDVCRulesData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14)]
        public MandateRegion MandateRegionData {
            get {
                return this.mandateRegionDataField;
            }
            set {
                this.mandateRegionDataField = value;
                this.RaisePropertyChanged("MandateRegionData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15)]
        public MandateSegment MandateSegmentData {
            get {
                return this.mandateSegmentDataField;
            }
            set {
                this.mandateSegmentDataField = value;
                this.RaisePropertyChanged("MandateSegmentData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=16)]
        public MandateSummary MandateSummaryData {
            get {
                return this.mandateSummaryDataField;
            }
            set {
                this.mandateSummaryDataField = value;
                this.RaisePropertyChanged("MandateSummaryData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=17)]
        public MandateDetail MandateDetailData {
            get {
                return this.mandateDetailDataField;
            }
            set {
                this.mandateDetailDataField = value;
                this.RaisePropertyChanged("MandateDetailData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=18)]
        public MandateAssociation MandateAssociationData {
            get {
                return this.mandateAssociationDataField;
            }
            set {
                this.mandateAssociationDataField = value;
                this.RaisePropertyChanged("MandateAssociationData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=19)]
        public BenefitCategory2 BenefitCategory2Data {
            get {
                return this.benefitCategory2DataField;
            }
            set {
                this.benefitCategory2DataField = value;
                this.RaisePropertyChanged("BenefitCategory2Data");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=20)]
        public BenefitCategory3 BenefitCategory3Data {
            get {
                return this.benefitCategory3DataField;
            }
            set {
                this.benefitCategory3DataField = value;
                this.RaisePropertyChanged("BenefitCategory3Data");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=21)]
        public PlaceofService PlaceofServiceData {
            get {
                return this.placeofServiceDataField;
            }
            set {
                this.placeofServiceDataField = value;
                this.RaisePropertyChanged("PlaceofServiceData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=22)]
        public PDBCPrefix PDBCPrefixData {
            get {
                return this.pDBCPrefixDataField;
            }
            set {
                this.pDBCPrefixDataField = value;
                this.RaisePropertyChanged("PDBCPrefixData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=23)]
        public CopayType CopayTypeData {
            get {
                return this.copayTypeDataField;
            }
            set {
                this.copayTypeDataField = value;
                this.RaisePropertyChanged("CopayTypeData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=24)]
        public ErouterRateTypes ErouterRateTypesData {
            get {
                return this.erouterRateTypesDataField;
            }
            set {
                this.erouterRateTypesDataField = value;
                this.RaisePropertyChanged("ErouterRateTypesData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class Accumulators : BaseData {
        
        private AccumulatorList[] accumulatorListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccumulatorListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public AccumulatorList[] AccumulatorListData {
            get {
                return this.accumulatorListDataField;
            }
            set {
                this.accumulatorListDataField = value;
                this.RaisePropertyChanged("AccumulatorListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class AccumulatorList : BaseData {
        
        private long accumNumberField;
        
        private bool accumNumberFieldSpecified;
        
        private string descriptionField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public long AccumNumber {
            get {
                return this.accumNumberField;
            }
            set {
                this.accumNumberField = value;
                this.RaisePropertyChanged("AccumNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccumNumberSpecified {
            get {
                return this.accumNumberFieldSpecified;
            }
            set {
                this.accumNumberFieldSpecified = value;
                this.RaisePropertyChanged("AccumNumberSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class AllowedCounter : BaseData {
        
        private AllowedCounterList[] allowedCounterListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllowedCounterListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public AllowedCounterList[] AllowedCounterListData {
            get {
                return this.allowedCounterListDataField;
            }
            set {
                this.allowedCounterListDataField = value;
                this.RaisePropertyChanged("AllowedCounterListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class AllowedCounterList : BaseData {
        
        private long valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public long Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
                this.RaisePropertyChanged("ValueSpecified");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class Copay : BaseData {
        
        private CopayList[] copayListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CopayListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public CopayList[] CopayListData {
            get {
                return this.copayListDataField;
            }
            set {
                this.copayListDataField = value;
                this.RaisePropertyChanged("CopayListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class CopayList : BaseData {
        
        private double valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
                this.RaisePropertyChanged("ValueSpecified");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class Coinsurance : BaseData {
        
        private CoinsuranceList[] coinsuranceListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CoinsuranceListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public CoinsuranceList[] CoinsuranceListData {
            get {
                return this.coinsuranceListDataField;
            }
            set {
                this.coinsuranceListDataField = value;
                this.RaisePropertyChanged("CoinsuranceListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class CoinsuranceList : BaseData {
        
        private long valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public long Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
                this.RaisePropertyChanged("ValueSpecified");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class CoverageLevel : BaseData {
        
        private CoverageLevelList[] coverageLevelListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CoverageLevelListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public CoverageLevelList[] CoverageLevelListData {
            get {
                return this.coverageLevelListDataField;
            }
            set {
                this.coverageLevelListDataField = value;
                this.RaisePropertyChanged("CoverageLevelListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class CoverageLevelList : BaseData {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class Services : BaseData {
        
        private ServiceList[] serviceListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ServiceListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public ServiceList[] ServiceListData {
            get {
                return this.serviceListDataField;
            }
            set {
                this.serviceListDataField = value;
                this.RaisePropertyChanged("ServiceListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class ServiceList : BaseData {
        
        private string sEDFField;
        
        private string sESEIDField;
        
        private bool eligibleforFSAReimbursementField;
        
        private bool eligibleforFSAReimbursementFieldSpecified;
        
        private string eligibleforHRAReimbursementField;
        
        private bool hRADeductibleAppliesField;
        
        private bool hRADeductibleAppliesFieldSpecified;
        
        private string warnwhencopaypercentageexceedsField;
        
        private string calculationIndicatorField;
        
        private string genderField;
        
        private string genderExplanationCodeField;
        
        private string ageFromField;
        
        private string ageToField;
        
        private string ageExplanationCodeField;
        
        private string coveredMembersField;
        
        private string coveredMembersExplanationCodeField;
        
        private bool displayCaseManagementWarningMessageField;
        
        private bool displayCaseManagementWarningMessageFieldSpecified;
        
        private string userMessageField;
        
        private bool preAuthChargeRequiredField;
        
        private bool preAuthChargeRequiredFieldSpecified;
        
        private bool preAuthUnitsRequiredField;
        
        private bool preAuthUnitsRequiredFieldSpecified;
        
        private bool preAuthProcedureRequiredField;
        
        private bool preAuthProcedureRequiredFieldSpecified;
        
        private string benefitCategory1Field;
        
        private string benefitCategory2Field;
        
        private string benefitCategory3Field;
        
        private string placeofServiceField;
        
        private bool selectServiceField;
        
        private bool selectServiceFieldSpecified;
        
        private string applyCopayTypeField;
        
        private bool applyCopayField;
        
        private bool applyCopayFieldSpecified;
        
        private bool applyDedCoinField;
        
        private bool applyDedCoinFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string SEDF {
            get {
                return this.sEDFField;
            }
            set {
                this.sEDFField = value;
                this.RaisePropertyChanged("SEDF");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string SESEID {
            get {
                return this.sESEIDField;
            }
            set {
                this.sESEIDField = value;
                this.RaisePropertyChanged("SESEID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public bool EligibleforFSAReimbursement {
            get {
                return this.eligibleforFSAReimbursementField;
            }
            set {
                this.eligibleforFSAReimbursementField = value;
                this.RaisePropertyChanged("EligibleforFSAReimbursement");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EligibleforFSAReimbursementSpecified {
            get {
                return this.eligibleforFSAReimbursementFieldSpecified;
            }
            set {
                this.eligibleforFSAReimbursementFieldSpecified = value;
                this.RaisePropertyChanged("EligibleforFSAReimbursementSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string EligibleforHRAReimbursement {
            get {
                return this.eligibleforHRAReimbursementField;
            }
            set {
                this.eligibleforHRAReimbursementField = value;
                this.RaisePropertyChanged("EligibleforHRAReimbursement");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public bool HRADeductibleApplies {
            get {
                return this.hRADeductibleAppliesField;
            }
            set {
                this.hRADeductibleAppliesField = value;
                this.RaisePropertyChanged("HRADeductibleApplies");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HRADeductibleAppliesSpecified {
            get {
                return this.hRADeductibleAppliesFieldSpecified;
            }
            set {
                this.hRADeductibleAppliesFieldSpecified = value;
                this.RaisePropertyChanged("HRADeductibleAppliesSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string Warnwhencopaypercentageexceeds {
            get {
                return this.warnwhencopaypercentageexceedsField;
            }
            set {
                this.warnwhencopaypercentageexceedsField = value;
                this.RaisePropertyChanged("Warnwhencopaypercentageexceeds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string CalculationIndicator {
            get {
                return this.calculationIndicatorField;
            }
            set {
                this.calculationIndicatorField = value;
                this.RaisePropertyChanged("CalculationIndicator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
                this.RaisePropertyChanged("Gender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public string GenderExplanationCode {
            get {
                return this.genderExplanationCodeField;
            }
            set {
                this.genderExplanationCodeField = value;
                this.RaisePropertyChanged("GenderExplanationCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public string AgeFrom {
            get {
                return this.ageFromField;
            }
            set {
                this.ageFromField = value;
                this.RaisePropertyChanged("AgeFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        public string AgeTo {
            get {
                return this.ageToField;
            }
            set {
                this.ageToField = value;
                this.RaisePropertyChanged("AgeTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11)]
        public string AgeExplanationCode {
            get {
                return this.ageExplanationCodeField;
            }
            set {
                this.ageExplanationCodeField = value;
                this.RaisePropertyChanged("AgeExplanationCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12)]
        public string CoveredMembers {
            get {
                return this.coveredMembersField;
            }
            set {
                this.coveredMembersField = value;
                this.RaisePropertyChanged("CoveredMembers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13)]
        public string CoveredMembersExplanationCode {
            get {
                return this.coveredMembersExplanationCodeField;
            }
            set {
                this.coveredMembersExplanationCodeField = value;
                this.RaisePropertyChanged("CoveredMembersExplanationCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14)]
        public bool DisplayCaseManagementWarningMessage {
            get {
                return this.displayCaseManagementWarningMessageField;
            }
            set {
                this.displayCaseManagementWarningMessageField = value;
                this.RaisePropertyChanged("DisplayCaseManagementWarningMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisplayCaseManagementWarningMessageSpecified {
            get {
                return this.displayCaseManagementWarningMessageFieldSpecified;
            }
            set {
                this.displayCaseManagementWarningMessageFieldSpecified = value;
                this.RaisePropertyChanged("DisplayCaseManagementWarningMessageSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15)]
        public string UserMessage {
            get {
                return this.userMessageField;
            }
            set {
                this.userMessageField = value;
                this.RaisePropertyChanged("UserMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=16)]
        public bool PreAuthChargeRequired {
            get {
                return this.preAuthChargeRequiredField;
            }
            set {
                this.preAuthChargeRequiredField = value;
                this.RaisePropertyChanged("PreAuthChargeRequired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreAuthChargeRequiredSpecified {
            get {
                return this.preAuthChargeRequiredFieldSpecified;
            }
            set {
                this.preAuthChargeRequiredFieldSpecified = value;
                this.RaisePropertyChanged("PreAuthChargeRequiredSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=17)]
        public bool PreAuthUnitsRequired {
            get {
                return this.preAuthUnitsRequiredField;
            }
            set {
                this.preAuthUnitsRequiredField = value;
                this.RaisePropertyChanged("PreAuthUnitsRequired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreAuthUnitsRequiredSpecified {
            get {
                return this.preAuthUnitsRequiredFieldSpecified;
            }
            set {
                this.preAuthUnitsRequiredFieldSpecified = value;
                this.RaisePropertyChanged("PreAuthUnitsRequiredSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=18)]
        public bool PreAuthProcedureRequired {
            get {
                return this.preAuthProcedureRequiredField;
            }
            set {
                this.preAuthProcedureRequiredField = value;
                this.RaisePropertyChanged("PreAuthProcedureRequired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreAuthProcedureRequiredSpecified {
            get {
                return this.preAuthProcedureRequiredFieldSpecified;
            }
            set {
                this.preAuthProcedureRequiredFieldSpecified = value;
                this.RaisePropertyChanged("PreAuthProcedureRequiredSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=19)]
        public string BenefitCategory1 {
            get {
                return this.benefitCategory1Field;
            }
            set {
                this.benefitCategory1Field = value;
                this.RaisePropertyChanged("BenefitCategory1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=20)]
        public string BenefitCategory2 {
            get {
                return this.benefitCategory2Field;
            }
            set {
                this.benefitCategory2Field = value;
                this.RaisePropertyChanged("BenefitCategory2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=21)]
        public string BenefitCategory3 {
            get {
                return this.benefitCategory3Field;
            }
            set {
                this.benefitCategory3Field = value;
                this.RaisePropertyChanged("BenefitCategory3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=22)]
        public string PlaceofService {
            get {
                return this.placeofServiceField;
            }
            set {
                this.placeofServiceField = value;
                this.RaisePropertyChanged("PlaceofService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=23)]
        public bool SelectService {
            get {
                return this.selectServiceField;
            }
            set {
                this.selectServiceField = value;
                this.RaisePropertyChanged("SelectService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectServiceSpecified {
            get {
                return this.selectServiceFieldSpecified;
            }
            set {
                this.selectServiceFieldSpecified = value;
                this.RaisePropertyChanged("SelectServiceSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=24)]
        public string ApplyCopayType {
            get {
                return this.applyCopayTypeField;
            }
            set {
                this.applyCopayTypeField = value;
                this.RaisePropertyChanged("ApplyCopayType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=25)]
        public bool ApplyCopay {
            get {
                return this.applyCopayField;
            }
            set {
                this.applyCopayField = value;
                this.RaisePropertyChanged("ApplyCopay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplyCopaySpecified {
            get {
                return this.applyCopayFieldSpecified;
            }
            set {
                this.applyCopayFieldSpecified = value;
                this.RaisePropertyChanged("ApplyCopaySpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=26)]
        public bool ApplyDedCoin {
            get {
                return this.applyDedCoinField;
            }
            set {
                this.applyDedCoinField = value;
                this.RaisePropertyChanged("ApplyDedCoin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplyDedCoinSpecified {
            get {
                return this.applyDedCoinFieldSpecified;
            }
            set {
                this.applyDedCoinFieldSpecified = value;
                this.RaisePropertyChanged("ApplyDedCoinSpecified");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class Messages : BaseData {
        
        private SERLMessageList[] sERLMessageListDataField;
        
        private DisallowedMessageList[] disallowedMessageListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SERLMessageListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public SERLMessageList[] SERLMessageListData {
            get {
                return this.sERLMessageListDataField;
            }
            set {
                this.sERLMessageListDataField = value;
                this.RaisePropertyChanged("SERLMessageListData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DisallowedMessageListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public DisallowedMessageList[] DisallowedMessageListData {
            get {
                return this.disallowedMessageListDataField;
            }
            set {
                this.disallowedMessageListDataField = value;
                this.RaisePropertyChanged("DisallowedMessageListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class SERLMessageList : BaseData {
        
        private string messageDescriptionField;
        
        private string relationtypeField;
        
        private string periodindicatorField;
        
        private string relateServicebyDiagnosisField;
        
        private string networkIndicatorField;
        
        private string preauthIndicatorField;
        
        private string referralIndicatorField;
        
        private long periodField;
        
        private bool periodFieldSpecified;
        
        private string relateCopayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string MessageDescription {
            get {
                return this.messageDescriptionField;
            }
            set {
                this.messageDescriptionField = value;
                this.RaisePropertyChanged("MessageDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string Relationtype {
            get {
                return this.relationtypeField;
            }
            set {
                this.relationtypeField = value;
                this.RaisePropertyChanged("Relationtype");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string Periodindicator {
            get {
                return this.periodindicatorField;
            }
            set {
                this.periodindicatorField = value;
                this.RaisePropertyChanged("Periodindicator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string RelateServicebyDiagnosis {
            get {
                return this.relateServicebyDiagnosisField;
            }
            set {
                this.relateServicebyDiagnosisField = value;
                this.RaisePropertyChanged("RelateServicebyDiagnosis");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string NetworkIndicator {
            get {
                return this.networkIndicatorField;
            }
            set {
                this.networkIndicatorField = value;
                this.RaisePropertyChanged("NetworkIndicator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string PreauthIndicator {
            get {
                return this.preauthIndicatorField;
            }
            set {
                this.preauthIndicatorField = value;
                this.RaisePropertyChanged("PreauthIndicator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string ReferralIndicator {
            get {
                return this.referralIndicatorField;
            }
            set {
                this.referralIndicatorField = value;
                this.RaisePropertyChanged("ReferralIndicator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public long Period {
            get {
                return this.periodField;
            }
            set {
                this.periodField = value;
                this.RaisePropertyChanged("Period");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodSpecified {
            get {
                return this.periodFieldSpecified;
            }
            set {
                this.periodFieldSpecified = value;
                this.RaisePropertyChanged("PeriodSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public string RelateCopay {
            get {
                return this.relateCopayField;
            }
            set {
                this.relateCopayField = value;
                this.RaisePropertyChanged("RelateCopay");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class DisallowedMessageList : BaseData {
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class PDVCRules : BaseData {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class MandateRegion : BaseData {
        
        private MandateRegionList[] mandateRegionListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MandateRegionListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public MandateRegionList[] MandateRegionListData {
            get {
                return this.mandateRegionListDataField;
            }
            set {
                this.mandateRegionListDataField = value;
                this.RaisePropertyChanged("MandateRegionListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class MandateRegionList : BaseData {
        
        private string mandateRegionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string MandateRegion {
            get {
                return this.mandateRegionField;
            }
            set {
                this.mandateRegionField = value;
                this.RaisePropertyChanged("MandateRegion");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class MandateSegment : BaseData {
        
        private MandateSegmentList[] mandateSegmentListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MandateSegmentListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public MandateSegmentList[] MandateSegmentListData {
            get {
                return this.mandateSegmentListDataField;
            }
            set {
                this.mandateSegmentListDataField = value;
                this.RaisePropertyChanged("MandateSegmentListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class MandateSegmentList : BaseData {
        
        private string mandateSegmentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string MandateSegment {
            get {
                return this.mandateSegmentField;
            }
            set {
                this.mandateSegmentField = value;
                this.RaisePropertyChanged("MandateSegment");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class MandateSummary : BaseData {
        
        private MandateSummaryList[] mandateSummaryListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MandateSummaryListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public MandateSummaryList[] MandateSummaryListData {
            get {
                return this.mandateSummaryListDataField;
            }
            set {
                this.mandateSummaryListDataField = value;
                this.RaisePropertyChanged("MandateSummaryListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class MandateSummaryList : BaseData {
        
        private string mandateNameField;
        
        private string mandateDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string MandateName {
            get {
                return this.mandateNameField;
            }
            set {
                this.mandateNameField = value;
                this.RaisePropertyChanged("MandateName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string MandateDescription {
            get {
                return this.mandateDescriptionField;
            }
            set {
                this.mandateDescriptionField = value;
                this.RaisePropertyChanged("MandateDescription");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class MandateDetail : BaseData {
        
        private MandateDetailList[] mandateDetailListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MandateDetailListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public MandateDetailList[] MandateDetailListData {
            get {
                return this.mandateDetailListDataField;
            }
            set {
                this.mandateDetailListDataField = value;
                this.RaisePropertyChanged("MandateDetailListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class MandateDetailList : BaseData {
        
        private string mandateNameField;
        
        private string mandateDescriptionField;
        
        private string benefitCategory1Field;
        
        private string benefitCategory2Field;
        
        private string benefitCategory3Field;
        
        private string placeofServiceField;
        
        private bool selectServiceField;
        
        private bool selectServiceFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string MandateName {
            get {
                return this.mandateNameField;
            }
            set {
                this.mandateNameField = value;
                this.RaisePropertyChanged("MandateName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string MandateDescription {
            get {
                return this.mandateDescriptionField;
            }
            set {
                this.mandateDescriptionField = value;
                this.RaisePropertyChanged("MandateDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string BenefitCategory1 {
            get {
                return this.benefitCategory1Field;
            }
            set {
                this.benefitCategory1Field = value;
                this.RaisePropertyChanged("BenefitCategory1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string BenefitCategory2 {
            get {
                return this.benefitCategory2Field;
            }
            set {
                this.benefitCategory2Field = value;
                this.RaisePropertyChanged("BenefitCategory2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string BenefitCategory3 {
            get {
                return this.benefitCategory3Field;
            }
            set {
                this.benefitCategory3Field = value;
                this.RaisePropertyChanged("BenefitCategory3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string PlaceofService {
            get {
                return this.placeofServiceField;
            }
            set {
                this.placeofServiceField = value;
                this.RaisePropertyChanged("PlaceofService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public bool SelectService {
            get {
                return this.selectServiceField;
            }
            set {
                this.selectServiceField = value;
                this.RaisePropertyChanged("SelectService");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectServiceSpecified {
            get {
                return this.selectServiceFieldSpecified;
            }
            set {
                this.selectServiceFieldSpecified = value;
                this.RaisePropertyChanged("SelectServiceSpecified");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class MandateAssociation : BaseData {
        
        private MandateAssociationList[] mandateAssociationListDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MandateAssociationListData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public MandateAssociationList[] MandateAssociationListData {
            get {
                return this.mandateAssociationListDataField;
            }
            set {
                this.mandateAssociationListDataField = value;
                this.RaisePropertyChanged("MandateAssociationListData");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList")]
    public partial class MandateAssociationList : BaseData {
        
        private string regionField;
        
        private string segmentField;
        
        private string mandateNameField;
        
        private bool selectMandateField;
        
        private bool selectMandateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
                this.RaisePropertyChanged("Region");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string Segment {
            get {
                return this.segmentField;
            }
            set {
                this.segmentField = value;
                this.RaisePropertyChanged("Segment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string MandateName {
            get {
                return this.mandateNameField;
            }
            set {
                this.mandateNameField = value;
                this.RaisePropertyChanged("MandateName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public bool SelectMandate {
            get {
                return this.selectMandateField;
            }
            set {
                this.selectMandateField = value;
                this.RaisePropertyChanged("SelectMandate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectMandateSpecified {
            get {
                return this.selectMandateFieldSpecified;
            }
            set {
                this.selectMandateFieldSpecified = value;
                this.RaisePropertyChanged("SelectMandateSpecified");
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBenefitCategory3Data", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetBenefitCategory3Data {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long BenefitCategory3ID;
        
        public GetBenefitCategory3Data() {
        }
        
        public GetBenefitCategory3Data(long BenefitCategory3ID) {
            this.BenefitCategory3ID = BenefitCategory3ID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBenefitCategory3DataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetBenefitCategory3DataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory3 BenefitCategory3;
        
        public GetBenefitCategory3DataResponse() {
        }
        
        public GetBenefitCategory3DataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory3 BenefitCategory3) {
            this.BenefitCategory3 = BenefitCategory3;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateRegionData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateRegionData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long MandateRegionID;
        
        public GetMandateRegionData() {
        }
        
        public GetMandateRegionData(long MandateRegionID) {
            this.MandateRegionID = MandateRegionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateRegionDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateRegionDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateRegion MandateRegion;
        
        public GetMandateRegionDataResponse() {
        }
        
        public GetMandateRegionDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.MandateRegion MandateRegion) {
            this.MandateRegion = MandateRegion;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateSegmentData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateSegmentData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long MandateSegmentID;
        
        public GetMandateSegmentData() {
        }
        
        public GetMandateSegmentData(long MandateSegmentID) {
            this.MandateSegmentID = MandateSegmentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateSegmentDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateSegmentDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateSegment MandateSegment;
        
        public GetMandateSegmentDataResponse() {
        }
        
        public GetMandateSegmentDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.MandateSegment MandateSegment) {
            this.MandateSegment = MandateSegment;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPDBCTypeListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPDBCTypeListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long PDBCTypeListID;
        
        public GetPDBCTypeListData() {
        }
        
        public GetPDBCTypeListData(long PDBCTypeListID) {
            this.PDBCTypeListID = PDBCTypeListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPDBCTypeListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPDBCTypeListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PDBCTypeList PDBCTypeList;
        
        public GetPDBCTypeListDataResponse() {
        }
        
        public GetPDBCTypeListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.PDBCTypeList PDBCTypeList) {
            this.PDBCTypeList = PDBCTypeList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeductibleListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetDeductibleListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long DeductibleListID;
        
        public GetDeductibleListData() {
        }
        
        public GetDeductibleListData(long DeductibleListID) {
            this.DeductibleListID = DeductibleListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeductibleListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetDeductibleListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.DeductibleList DeductibleList;
        
        public GetDeductibleListDataResponse() {
        }
        
        public GetDeductibleListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.DeductibleList DeductibleList) {
            this.DeductibleList = DeductibleList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateRegionListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateRegionListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long MandateRegionListID;
        
        public GetMandateRegionListData() {
        }
        
        public GetMandateRegionListData(long MandateRegionListID) {
            this.MandateRegionListID = MandateRegionListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateRegionListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateRegionListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateRegionList MandateRegionList;
        
        public GetMandateRegionListDataResponse() {
        }
        
        public GetMandateRegionListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.MandateRegionList MandateRegionList) {
            this.MandateRegionList = MandateRegionList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCopayListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCopayListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long CopayListID;
        
        public GetCopayListData() {
        }
        
        public GetCopayListData(long CopayListID) {
            this.CopayListID = CopayListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCopayListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCopayListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.CopayList CopayList;
        
        public GetCopayListDataResponse() {
        }
        
        public GetCopayListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.CopayList CopayList) {
            this.CopayList = CopayList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOutofPocketMaxListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetOutofPocketMaxListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long OutofPocketMaxListID;
        
        public GetOutofPocketMaxListData() {
        }
        
        public GetOutofPocketMaxListData(long OutofPocketMaxListID) {
            this.OutofPocketMaxListID = OutofPocketMaxListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOutofPocketMaxListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetOutofPocketMaxListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.OutofPocketMaxList OutofPocketMaxList;
        
        public GetOutofPocketMaxListDataResponse() {
        }
        
        public GetOutofPocketMaxListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.OutofPocketMaxList OutofPocketMaxList) {
            this.OutofPocketMaxList = OutofPocketMaxList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateDetailListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateDetailListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long MandateDetailListID;
        
        public GetMandateDetailListData() {
        }
        
        public GetMandateDetailListData(long MandateDetailListID) {
            this.MandateDetailListID = MandateDetailListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateDetailListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateDetailListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateDetailList MandateDetailList;
        
        public GetMandateDetailListDataResponse() {
        }
        
        public GetMandateDetailListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.MandateDetailList MandateDetailList) {
            this.MandateDetailList = MandateDetailList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateSummaryData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateSummaryData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long MandateSummaryID;
        
        public GetMandateSummaryData() {
        }
        
        public GetMandateSummaryData(long MandateSummaryID) {
            this.MandateSummaryID = MandateSummaryID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateSummaryDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateSummaryDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateSummary MandateSummary;
        
        public GetMandateSummaryDataResponse() {
        }
        
        public GetMandateSummaryDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.MandateSummary MandateSummary) {
            this.MandateSummary = MandateSummary;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllowedCounterData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAllowedCounterData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long AllowedCounterID;
        
        public GetAllowedCounterData() {
        }
        
        public GetAllowedCounterData(long AllowedCounterID) {
            this.AllowedCounterID = AllowedCounterID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllowedCounterDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAllowedCounterDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.AllowedCounter AllowedCounter;
        
        public GetAllowedCounterDataResponse() {
        }
        
        public GetAllowedCounterDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.AllowedCounter AllowedCounter) {
            this.AllowedCounter = AllowedCounter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateDetailData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateDetailData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long MandateDetailID;
        
        public GetMandateDetailData() {
        }
        
        public GetMandateDetailData(long MandateDetailID) {
            this.MandateDetailID = MandateDetailID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateDetailDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateDetailDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateDetail MandateDetail;
        
        public GetMandateDetailDataResponse() {
        }
        
        public GetMandateDetailDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.MandateDetail MandateDetail) {
            this.MandateDetail = MandateDetail;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCoverageLevelListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCoverageLevelListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long CoverageLevelListID;
        
        public GetCoverageLevelListData() {
        }
        
        public GetCoverageLevelListData(long CoverageLevelListID) {
            this.CoverageLevelListID = CoverageLevelListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCoverageLevelListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCoverageLevelListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.CoverageLevelList CoverageLevelList;
        
        public GetCoverageLevelListDataResponse() {
        }
        
        public GetCoverageLevelListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.CoverageLevelList CoverageLevelList) {
            this.CoverageLevelList = CoverageLevelList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCoverageLevelData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCoverageLevelData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long CoverageLevelID;
        
        public GetCoverageLevelData() {
        }
        
        public GetCoverageLevelData(long CoverageLevelID) {
            this.CoverageLevelID = CoverageLevelID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCoverageLevelDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCoverageLevelDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.CoverageLevel CoverageLevel;
        
        public GetCoverageLevelDataResponse() {
        }
        
        public GetCoverageLevelDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.CoverageLevel CoverageLevel) {
            this.CoverageLevel = CoverageLevel;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLTLTListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetLTLTListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long LTLTListID;
        
        public GetLTLTListData() {
        }
        
        public GetLTLTListData(long LTLTListID) {
            this.LTLTListID = LTLTListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLTLTListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetLTLTListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.LTLTList LTLTList;
        
        public GetLTLTListDataResponse() {
        }
        
        public GetLTLTListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.LTLTList LTLTList) {
            this.LTLTList = LTLTList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccumulatorListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAccumulatorListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long AccumulatorListID;
        
        public GetAccumulatorListData() {
        }
        
        public GetAccumulatorListData(long AccumulatorListID) {
            this.AccumulatorListID = AccumulatorListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccumulatorListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAccumulatorListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.AccumulatorList AccumulatorList;
        
        public GetAccumulatorListDataResponse() {
        }
        
        public GetAccumulatorListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.AccumulatorList AccumulatorList) {
            this.AccumulatorList = AccumulatorList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBenefitCategory3ListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetBenefitCategory3ListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long BenefitCategory3ListID;
        
        public GetBenefitCategory3ListData() {
        }
        
        public GetBenefitCategory3ListData(long BenefitCategory3ListID) {
            this.BenefitCategory3ListID = BenefitCategory3ListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBenefitCategory3ListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetBenefitCategory3ListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory3List BenefitCategory3List;
        
        public GetBenefitCategory3ListDataResponse() {
        }
        
        public GetBenefitCategory3ListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory3List BenefitCategory3List) {
            this.BenefitCategory3List = BenefitCategory3List;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLTIDListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetLTIDListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long LTIDListID;
        
        public GetLTIDListData() {
        }
        
        public GetLTIDListData(long LTIDListID) {
            this.LTIDListID = LTIDListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLTIDListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetLTIDListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.LTIDList LTIDList;
        
        public GetLTIDListDataResponse() {
        }
        
        public GetLTIDListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.LTIDList LTIDList) {
            this.LTIDList = LTIDList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCoinsuranceData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCoinsuranceData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long CoinsuranceID;
        
        public GetCoinsuranceData() {
        }
        
        public GetCoinsuranceData(long CoinsuranceID) {
            this.CoinsuranceID = CoinsuranceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCoinsuranceDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCoinsuranceDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Coinsurance Coinsurance;
        
        public GetCoinsuranceDataResponse() {
        }
        
        public GetCoinsuranceDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.Coinsurance Coinsurance) {
            this.Coinsurance = Coinsurance;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServicesData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetServicesData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long ServicesID;
        
        public GetServicesData() {
        }
        
        public GetServicesData(long ServicesID) {
            this.ServicesID = ServicesID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServicesDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetServicesDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Services Services;
        
        public GetServicesDataResponse() {
        }
        
        public GetServicesDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.Services Services) {
            this.Services = Services;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMessagesData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMessagesData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long MessagesID;
        
        public GetMessagesData() {
        }
        
        public GetMessagesData(long MessagesID) {
            this.MessagesID = MessagesID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMessagesDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMessagesDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Messages Messages;
        
        public GetMessagesDataResponse() {
        }
        
        public GetMessagesDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.Messages Messages) {
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCopayData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCopayData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long CopayID;
        
        public GetCopayData() {
        }
        
        public GetCopayData(long CopayID) {
            this.CopayID = CopayID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCopayDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCopayDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Copay Copay;
        
        public GetCopayDataResponse() {
        }
        
        public GetCopayDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.Copay Copay) {
            this.Copay = Copay;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLTSEListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetLTSEListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long LTSEListID;
        
        public GetLTSEListData() {
        }
        
        public GetLTSEListData(long LTSEListID) {
            this.LTSEListID = LTSEListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLTSEListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetLTSEListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.LTSEList LTSEList;
        
        public GetLTSEListDataResponse() {
        }
        
        public GetLTSEListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.LTSEList LTSEList) {
            this.LTSEList = LTSEList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSERLMessageListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetSERLMessageListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long SERLMessageListID;
        
        public GetSERLMessageListData() {
        }
        
        public GetSERLMessageListData(long SERLMessageListID) {
            this.SERLMessageListID = SERLMessageListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSERLMessageListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetSERLMessageListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.SERLMessageList SERLMessageList;
        
        public GetSERLMessageListDataResponse() {
        }
        
        public GetSERLMessageListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.SERLMessageList SERLMessageList) {
            this.SERLMessageList = SERLMessageList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCopayTypeListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCopayTypeListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long CopayTypeListID;
        
        public GetCopayTypeListData() {
        }
        
        public GetCopayTypeListData(long CopayTypeListID) {
            this.CopayTypeListID = CopayTypeListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCopayTypeListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCopayTypeListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.CopayTypeList CopayTypeList;
        
        public GetCopayTypeListDataResponse() {
        }
        
        public GetCopayTypeListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.CopayTypeList CopayTypeList) {
            this.CopayTypeList = CopayTypeList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllowedCounterListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAllowedCounterListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long AllowedCounterListID;
        
        public GetAllowedCounterListData() {
        }
        
        public GetAllowedCounterListData(long AllowedCounterListID) {
            this.AllowedCounterListID = AllowedCounterListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllowedCounterListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAllowedCounterListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.AllowedCounterList AllowedCounterList;
        
        public GetAllowedCounterListDataResponse() {
        }
        
        public GetAllowedCounterListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.AllowedCounterList AllowedCounterList) {
            this.AllowedCounterList = AllowedCounterList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateAssociationData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateAssociationData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long MandateAssociationID;
        
        public GetMandateAssociationData() {
        }
        
        public GetMandateAssociationData(long MandateAssociationID) {
            this.MandateAssociationID = MandateAssociationID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateAssociationDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateAssociationDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateAssociation MandateAssociation;
        
        public GetMandateAssociationDataResponse() {
        }
        
        public GetMandateAssociationDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.MandateAssociation MandateAssociation) {
            this.MandateAssociation = MandateAssociation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccumulatorsData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAccumulatorsData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long AccumulatorsID;
        
        public GetAccumulatorsData() {
        }
        
        public GetAccumulatorsData(long AccumulatorsID) {
            this.AccumulatorsID = AccumulatorsID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccumulatorsDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAccumulatorsDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Accumulators Accumulators;
        
        public GetAccumulatorsDataResponse() {
        }
        
        public GetAccumulatorsDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.Accumulators Accumulators) {
            this.Accumulators = Accumulators;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBenefitCategory1ListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetBenefitCategory1ListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long BenefitCategory1ListID;
        
        public GetBenefitCategory1ListData() {
        }
        
        public GetBenefitCategory1ListData(long BenefitCategory1ListID) {
            this.BenefitCategory1ListID = BenefitCategory1ListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBenefitCategory1ListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetBenefitCategory1ListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory1List BenefitCategory1List;
        
        public GetBenefitCategory1ListDataResponse() {
        }
        
        public GetBenefitCategory1ListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory1List BenefitCategory1List) {
            this.BenefitCategory1List = BenefitCategory1List;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllMasterListIDs", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAllMasterListIDs {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VersionNumber;
        
        public GetAllMasterListIDs() {
        }
        
        public GetAllMasterListIDs(string Name, string VersionNumber) {
            this.Name = Name;
            this.VersionNumber = VersionNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllMasterListIDsResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAllMasterListIDsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Instance", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long[] Instance;
        
        public GetAllMasterListIDsResponse() {
        }
        
        public GetAllMasterListIDsResponse(long[] Instance) {
            this.Instance = Instance;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPDVCRulesData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPDVCRulesData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long PDVCRulesID;
        
        public GetPDVCRulesData() {
        }
        
        public GetPDVCRulesData(long PDVCRulesID) {
            this.PDVCRulesID = PDVCRulesID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPDVCRulesDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPDVCRulesDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PDVCRules PDVCRules;
        
        public GetPDVCRulesDataResponse() {
        }
        
        public GetPDVCRulesDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.PDVCRules PDVCRules) {
            this.PDVCRules = PDVCRules;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMasterList", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMasterList {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long MasterListID;
        
        public GetMasterList() {
        }
        
        public GetMasterList(long MasterListID) {
            this.MasterListID = MasterListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMasterListResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMasterListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MasterList MasterList;
        
        public GetMasterListResponse() {
        }
        
        public GetMasterListResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.MasterList MasterList) {
            this.MasterList = MasterList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeductibleData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetDeductibleData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long DeductibleID;
        
        public GetDeductibleData() {
        }
        
        public GetDeductibleData(long DeductibleID) {
            this.DeductibleID = DeductibleID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeductibleDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetDeductibleDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Deductible Deductible;
        
        public GetDeductibleDataResponse() {
        }
        
        public GetDeductibleDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.Deductible Deductible) {
            this.Deductible = Deductible;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBenefitCategory1Data", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetBenefitCategory1Data {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long BenefitCategory1ID;
        
        public GetBenefitCategory1Data() {
        }
        
        public GetBenefitCategory1Data(long BenefitCategory1ID) {
            this.BenefitCategory1ID = BenefitCategory1ID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBenefitCategory1DataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetBenefitCategory1DataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory1 BenefitCategory1;
        
        public GetBenefitCategory1DataResponse() {
        }
        
        public GetBenefitCategory1DataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory1 BenefitCategory1) {
            this.BenefitCategory1 = BenefitCategory1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDisallowedMessageListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetDisallowedMessageListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long DisallowedMessageListID;
        
        public GetDisallowedMessageListData() {
        }
        
        public GetDisallowedMessageListData(long DisallowedMessageListID) {
            this.DisallowedMessageListID = DisallowedMessageListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDisallowedMessageListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetDisallowedMessageListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.DisallowedMessageList DisallowedMessageList;
        
        public GetDisallowedMessageListDataResponse() {
        }
        
        public GetDisallowedMessageListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.DisallowedMessageList DisallowedMessageList) {
            this.DisallowedMessageList = DisallowedMessageList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPDBCPrefixListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPDBCPrefixListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long PDBCPrefixListID;
        
        public GetPDBCPrefixListData() {
        }
        
        public GetPDBCPrefixListData(long PDBCPrefixListID) {
            this.PDBCPrefixListID = PDBCPrefixListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPDBCPrefixListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPDBCPrefixListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PDBCPrefixList PDBCPrefixList;
        
        public GetPDBCPrefixListDataResponse() {
        }
        
        public GetPDBCPrefixListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.PDBCPrefixList PDBCPrefixList) {
            this.PDBCPrefixList = PDBCPrefixList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllowedAmountListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAllowedAmountListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long AllowedAmountListID;
        
        public GetAllowedAmountListData() {
        }
        
        public GetAllowedAmountListData(long AllowedAmountListID) {
            this.AllowedAmountListID = AllowedAmountListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllowedAmountListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAllowedAmountListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.AllowedAmountList AllowedAmountList;
        
        public GetAllowedAmountListDataResponse() {
        }
        
        public GetAllowedAmountListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.AllowedAmountList AllowedAmountList) {
            this.AllowedAmountList = AllowedAmountList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBenefitCategory2Data", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetBenefitCategory2Data {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long BenefitCategory2ID;
        
        public GetBenefitCategory2Data() {
        }
        
        public GetBenefitCategory2Data(long BenefitCategory2ID) {
            this.BenefitCategory2ID = BenefitCategory2ID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBenefitCategory2DataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetBenefitCategory2DataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory2 BenefitCategory2;
        
        public GetBenefitCategory2DataResponse() {
        }
        
        public GetBenefitCategory2DataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory2 BenefitCategory2) {
            this.BenefitCategory2 = BenefitCategory2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetServiceListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long ServiceListID;
        
        public GetServiceListData() {
        }
        
        public GetServiceListData(long ServiceListID) {
            this.ServiceListID = ServiceListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetServiceListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.ServiceList ServiceList;
        
        public GetServiceListDataResponse() {
        }
        
        public GetServiceListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.ServiceList ServiceList) {
            this.ServiceList = ServiceList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLTIPListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetLTIPListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long LTIPListID;
        
        public GetLTIPListData() {
        }
        
        public GetLTIPListData(long LTIPListID) {
            this.LTIPListID = LTIPListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLTIPListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetLTIPListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.LTIPList LTIPList;
        
        public GetLTIPListDataResponse() {
        }
        
        public GetLTIPListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.LTIPList LTIPList) {
            this.LTIPList = LTIPList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateAssociationListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateAssociationListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long MandateAssociationListID;
        
        public GetMandateAssociationListData() {
        }
        
        public GetMandateAssociationListData(long MandateAssociationListID) {
            this.MandateAssociationListID = MandateAssociationListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateAssociationListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateAssociationListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateAssociationList MandateAssociationList;
        
        public GetMandateAssociationListDataResponse() {
        }
        
        public GetMandateAssociationListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.MandateAssociationList MandateAssociationList) {
            this.MandateAssociationList = MandateAssociationList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPDBCTypeData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPDBCTypeData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long PDBCTypeID;
        
        public GetPDBCTypeData() {
        }
        
        public GetPDBCTypeData(long PDBCTypeID) {
            this.PDBCTypeID = PDBCTypeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPDBCTypeDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPDBCTypeDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PDBCType PDBCType;
        
        public GetPDBCTypeDataResponse() {
        }
        
        public GetPDBCTypeDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.PDBCType PDBCType) {
            this.PDBCType = PDBCType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateSummaryListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateSummaryListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long MandateSummaryListID;
        
        public GetMandateSummaryListData() {
        }
        
        public GetMandateSummaryListData(long MandateSummaryListID) {
            this.MandateSummaryListID = MandateSummaryListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateSummaryListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateSummaryListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateSummaryList MandateSummaryList;
        
        public GetMandateSummaryListDataResponse() {
        }
        
        public GetMandateSummaryListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.MandateSummaryList MandateSummaryList) {
            this.MandateSummaryList = MandateSummaryList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetErouterRateTypesData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetErouterRateTypesData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long ErouterRateTypesID;
        
        public GetErouterRateTypesData() {
        }
        
        public GetErouterRateTypesData(long ErouterRateTypesID) {
            this.ErouterRateTypesID = ErouterRateTypesID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetErouterRateTypesDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetErouterRateTypesDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.ErouterRateTypes ErouterRateTypes;
        
        public GetErouterRateTypesDataResponse() {
        }
        
        public GetErouterRateTypesDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.ErouterRateTypes ErouterRateTypes) {
            this.ErouterRateTypes = ErouterRateTypes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPDBCPrefixData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPDBCPrefixData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long PDBCPrefixID;
        
        public GetPDBCPrefixData() {
        }
        
        public GetPDBCPrefixData(long PDBCPrefixID) {
            this.PDBCPrefixID = PDBCPrefixID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPDBCPrefixDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPDBCPrefixDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PDBCPrefix PDBCPrefix;
        
        public GetPDBCPrefixDataResponse() {
        }
        
        public GetPDBCPrefixDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.PDBCPrefix PDBCPrefix) {
            this.PDBCPrefix = PDBCPrefix;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCoinsuranceListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCoinsuranceListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long CoinsuranceListID;
        
        public GetCoinsuranceListData() {
        }
        
        public GetCoinsuranceListData(long CoinsuranceListID) {
            this.CoinsuranceListID = CoinsuranceListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCoinsuranceListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCoinsuranceListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.CoinsuranceList CoinsuranceList;
        
        public GetCoinsuranceListDataResponse() {
        }
        
        public GetCoinsuranceListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.CoinsuranceList CoinsuranceList) {
            this.CoinsuranceList = CoinsuranceList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPlaceofServiceListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPlaceofServiceListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long PlaceofServiceListID;
        
        public GetPlaceofServiceListData() {
        }
        
        public GetPlaceofServiceListData(long PlaceofServiceListID) {
            this.PlaceofServiceListID = PlaceofServiceListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPlaceofServiceListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPlaceofServiceListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PlaceofServiceList PlaceofServiceList;
        
        public GetPlaceofServiceListDataResponse() {
        }
        
        public GetPlaceofServiceListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.PlaceofServiceList PlaceofServiceList) {
            this.PlaceofServiceList = PlaceofServiceList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveMasterList", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class SaveMasterList {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MasterList MasterList;
        
        public SaveMasterList() {
        }
        
        public SaveMasterList(tmg.equinox.integration.domain.services.MasterListServiceReference.MasterList MasterList) {
            this.MasterList = MasterList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveMasterListResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class SaveMasterListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MasterList MasterList;
        
        public SaveMasterListResponse() {
        }
        
        public SaveMasterListResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.MasterList MasterList) {
            this.MasterList = MasterList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRateTypeData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetRateTypeData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long RateTypeID;
        
        public GetRateTypeData() {
        }
        
        public GetRateTypeData(long RateTypeID) {
            this.RateTypeID = RateTypeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRateTypeDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetRateTypeDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.RateType RateType;
        
        public GetRateTypeDataResponse() {
        }
        
        public GetRateTypeDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.RateType RateType) {
            this.RateType = RateType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLTPRListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetLTPRListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long LTPRListID;
        
        public GetLTPRListData() {
        }
        
        public GetLTPRListData(long LTPRListID) {
            this.LTPRListID = LTPRListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLTPRListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetLTPRListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.LTPRList LTPRList;
        
        public GetLTPRListDataResponse() {
        }
        
        public GetLTPRListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.LTPRList LTPRList) {
            this.LTPRList = LTPRList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCopayTypeData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCopayTypeData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long CopayTypeID;
        
        public GetCopayTypeData() {
        }
        
        public GetCopayTypeData(long CopayTypeID) {
            this.CopayTypeID = CopayTypeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCopayTypeDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetCopayTypeDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.CopayType CopayType;
        
        public GetCopayTypeDataResponse() {
        }
        
        public GetCopayTypeDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.CopayType CopayType) {
            this.CopayType = CopayType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateSegmentListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateSegmentListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long MandateSegmentListID;
        
        public GetMandateSegmentListData() {
        }
        
        public GetMandateSegmentListData(long MandateSegmentListID) {
            this.MandateSegmentListID = MandateSegmentListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMandateSegmentListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetMandateSegmentListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateSegmentList MandateSegmentList;
        
        public GetMandateSegmentListDataResponse() {
        }
        
        public GetMandateSegmentListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.MandateSegmentList MandateSegmentList) {
            this.MandateSegmentList = MandateSegmentList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLimitsData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetLimitsData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long LimitsID;
        
        public GetLimitsData() {
        }
        
        public GetLimitsData(long LimitsID) {
            this.LimitsID = LimitsID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLimitsDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetLimitsDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Limits Limits;
        
        public GetLimitsDataResponse() {
        }
        
        public GetLimitsDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.Limits Limits) {
            this.Limits = Limits;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPlaceofServiceData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPlaceofServiceData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long PlaceofServiceID;
        
        public GetPlaceofServiceData() {
        }
        
        public GetPlaceofServiceData(long PlaceofServiceID) {
            this.PlaceofServiceID = PlaceofServiceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPlaceofServiceDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetPlaceofServiceDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PlaceofService PlaceofService;
        
        public GetPlaceofServiceDataResponse() {
        }
        
        public GetPlaceofServiceDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.PlaceofService PlaceofService) {
            this.PlaceofService = PlaceofService;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllowedAmountData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAllowedAmountData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long AllowedAmountID;
        
        public GetAllowedAmountData() {
        }
        
        public GetAllowedAmountData(long AllowedAmountID) {
            this.AllowedAmountID = AllowedAmountID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllowedAmountDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetAllowedAmountDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.AllowedAmount AllowedAmount;
        
        public GetAllowedAmountDataResponse() {
        }
        
        public GetAllowedAmountDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.AllowedAmount AllowedAmount) {
            this.AllowedAmount = AllowedAmount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBenefitCategory2ListData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetBenefitCategory2ListData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long BenefitCategory2ListID;
        
        public GetBenefitCategory2ListData() {
        }
        
        public GetBenefitCategory2ListData(long BenefitCategory2ListID) {
            this.BenefitCategory2ListID = BenefitCategory2ListID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBenefitCategory2ListDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetBenefitCategory2ListDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory2List BenefitCategory2List;
        
        public GetBenefitCategory2ListDataResponse() {
        }
        
        public GetBenefitCategory2ListDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory2List BenefitCategory2List) {
            this.BenefitCategory2List = BenefitCategory2List;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOutofPocketMaxData", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetOutofPocketMaxData {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long OutofPocketMaxID;
        
        public GetOutofPocketMaxData() {
        }
        
        public GetOutofPocketMaxData(long OutofPocketMaxID) {
            this.OutofPocketMaxID = OutofPocketMaxID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOutofPocketMaxDataResponse", WrapperNamespace="http://equinox.tmg.com/services/vMasterList10/MasterList", IsWrapped=true)]
    public partial class GetOutofPocketMaxDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://equinox.tmg.com/services/vMasterList10/MasterList", Order=0)]
        public tmg.equinox.integration.domain.services.MasterListServiceReference.OutofPocketMax OutofPocketMax;
        
        public GetOutofPocketMaxDataResponse() {
        }
        
        public GetOutofPocketMaxDataResponse(tmg.equinox.integration.domain.services.MasterListServiceReference.OutofPocketMax OutofPocketMax) {
            this.OutofPocketMax = OutofPocketMax;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MasterListServiceChannel : tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MasterListServiceClient : System.ServiceModel.ClientBase<tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService>, tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService {
        
        public MasterListServiceClient() {
        }
        
        public MasterListServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MasterListServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MasterListServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MasterListServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3DataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetBenefitCategory3Data(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3Data request) {
            return base.Channel.GetBenefitCategory3Data(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory3 GetBenefitCategory3Data(long BenefitCategory3ID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3Data inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3Data();
            inValue.BenefitCategory3ID = BenefitCategory3ID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3DataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetBenefitCategory3Data(inValue);
            return retVal.BenefitCategory3;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3DataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetBenefitCategory3DataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3Data request) {
            return base.Channel.GetBenefitCategory3DataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3DataResponse> GetBenefitCategory3DataAsync(long BenefitCategory3ID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3Data inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3Data();
            inValue.BenefitCategory3ID = BenefitCategory3ID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetBenefitCategory3DataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateRegionData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionData request) {
            return base.Channel.GetMandateRegionData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateRegion GetMandateRegionData(long MandateRegionID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionData();
            inValue.MandateRegionID = MandateRegionID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateRegionData(inValue);
            return retVal.MandateRegion;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateRegionDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionData request) {
            return base.Channel.GetMandateRegionDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionDataResponse> GetMandateRegionDataAsync(long MandateRegionID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionData();
            inValue.MandateRegionID = MandateRegionID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateRegionDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateSegmentData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentData request) {
            return base.Channel.GetMandateSegmentData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateSegment GetMandateSegmentData(long MandateSegmentID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentData();
            inValue.MandateSegmentID = MandateSegmentID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateSegmentData(inValue);
            return retVal.MandateSegment;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateSegmentDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentData request) {
            return base.Channel.GetMandateSegmentDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentDataResponse> GetMandateSegmentDataAsync(long MandateSegmentID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentData();
            inValue.MandateSegmentID = MandateSegmentID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateSegmentDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPDBCTypeListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListData request) {
            return base.Channel.GetPDBCTypeListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PDBCTypeList GetPDBCTypeListData(long PDBCTypeListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListData();
            inValue.PDBCTypeListID = PDBCTypeListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPDBCTypeListData(inValue);
            return retVal.PDBCTypeList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPDBCTypeListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListData request) {
            return base.Channel.GetPDBCTypeListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListDataResponse> GetPDBCTypeListDataAsync(long PDBCTypeListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeListData();
            inValue.PDBCTypeListID = PDBCTypeListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPDBCTypeListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetDeductibleListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListData request) {
            return base.Channel.GetDeductibleListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.DeductibleList GetDeductibleListData(long DeductibleListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListData();
            inValue.DeductibleListID = DeductibleListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetDeductibleListData(inValue);
            return retVal.DeductibleList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetDeductibleListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListData request) {
            return base.Channel.GetDeductibleListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListDataResponse> GetDeductibleListDataAsync(long DeductibleListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleListData();
            inValue.DeductibleListID = DeductibleListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetDeductibleListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateRegionListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListData request) {
            return base.Channel.GetMandateRegionListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateRegionList GetMandateRegionListData(long MandateRegionListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListData();
            inValue.MandateRegionListID = MandateRegionListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateRegionListData(inValue);
            return retVal.MandateRegionList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateRegionListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListData request) {
            return base.Channel.GetMandateRegionListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListDataResponse> GetMandateRegionListDataAsync(long MandateRegionListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateRegionListData();
            inValue.MandateRegionListID = MandateRegionListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateRegionListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCopayListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListData request) {
            return base.Channel.GetCopayListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.CopayList GetCopayListData(long CopayListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListData();
            inValue.CopayListID = CopayListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCopayListData(inValue);
            return retVal.CopayList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCopayListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListData request) {
            return base.Channel.GetCopayListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListDataResponse> GetCopayListDataAsync(long CopayListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayListData();
            inValue.CopayListID = CopayListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCopayListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetOutofPocketMaxListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListData request) {
            return base.Channel.GetOutofPocketMaxListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.OutofPocketMaxList GetOutofPocketMaxListData(long OutofPocketMaxListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListData();
            inValue.OutofPocketMaxListID = OutofPocketMaxListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetOutofPocketMaxListData(inValue);
            return retVal.OutofPocketMaxList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetOutofPocketMaxListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListData request) {
            return base.Channel.GetOutofPocketMaxListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListDataResponse> GetOutofPocketMaxListDataAsync(long OutofPocketMaxListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxListData();
            inValue.OutofPocketMaxListID = OutofPocketMaxListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetOutofPocketMaxListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateDetailListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListData request) {
            return base.Channel.GetMandateDetailListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateDetailList GetMandateDetailListData(long MandateDetailListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListData();
            inValue.MandateDetailListID = MandateDetailListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateDetailListData(inValue);
            return retVal.MandateDetailList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateDetailListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListData request) {
            return base.Channel.GetMandateDetailListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListDataResponse> GetMandateDetailListDataAsync(long MandateDetailListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailListData();
            inValue.MandateDetailListID = MandateDetailListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateDetailListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateSummaryData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryData request) {
            return base.Channel.GetMandateSummaryData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateSummary GetMandateSummaryData(long MandateSummaryID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryData();
            inValue.MandateSummaryID = MandateSummaryID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateSummaryData(inValue);
            return retVal.MandateSummary;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateSummaryDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryData request) {
            return base.Channel.GetMandateSummaryDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryDataResponse> GetMandateSummaryDataAsync(long MandateSummaryID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryData();
            inValue.MandateSummaryID = MandateSummaryID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateSummaryDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAllowedCounterData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterData request) {
            return base.Channel.GetAllowedCounterData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.AllowedCounter GetAllowedCounterData(long AllowedCounterID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterData();
            inValue.AllowedCounterID = AllowedCounterID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAllowedCounterData(inValue);
            return retVal.AllowedCounter;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAllowedCounterDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterData request) {
            return base.Channel.GetAllowedCounterDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterDataResponse> GetAllowedCounterDataAsync(long AllowedCounterID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterData();
            inValue.AllowedCounterID = AllowedCounterID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAllowedCounterDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateDetailData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailData request) {
            return base.Channel.GetMandateDetailData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateDetail GetMandateDetailData(long MandateDetailID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailData();
            inValue.MandateDetailID = MandateDetailID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateDetailData(inValue);
            return retVal.MandateDetail;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateDetailDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailData request) {
            return base.Channel.GetMandateDetailDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailDataResponse> GetMandateDetailDataAsync(long MandateDetailID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateDetailData();
            inValue.MandateDetailID = MandateDetailID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateDetailDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCoverageLevelListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListData request) {
            return base.Channel.GetCoverageLevelListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.CoverageLevelList GetCoverageLevelListData(long CoverageLevelListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListData();
            inValue.CoverageLevelListID = CoverageLevelListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCoverageLevelListData(inValue);
            return retVal.CoverageLevelList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCoverageLevelListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListData request) {
            return base.Channel.GetCoverageLevelListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListDataResponse> GetCoverageLevelListDataAsync(long CoverageLevelListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelListData();
            inValue.CoverageLevelListID = CoverageLevelListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCoverageLevelListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCoverageLevelData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelData request) {
            return base.Channel.GetCoverageLevelData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.CoverageLevel GetCoverageLevelData(long CoverageLevelID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelData();
            inValue.CoverageLevelID = CoverageLevelID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCoverageLevelData(inValue);
            return retVal.CoverageLevel;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCoverageLevelDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelData request) {
            return base.Channel.GetCoverageLevelDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelDataResponse> GetCoverageLevelDataAsync(long CoverageLevelID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoverageLevelData();
            inValue.CoverageLevelID = CoverageLevelID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCoverageLevelDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetLTLTListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListData request) {
            return base.Channel.GetLTLTListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.LTLTList GetLTLTListData(long LTLTListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListData();
            inValue.LTLTListID = LTLTListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetLTLTListData(inValue);
            return retVal.LTLTList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetLTLTListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListData request) {
            return base.Channel.GetLTLTListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListDataResponse> GetLTLTListDataAsync(long LTLTListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTLTListData();
            inValue.LTLTListID = LTLTListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetLTLTListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAccumulatorListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListData request) {
            return base.Channel.GetAccumulatorListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.AccumulatorList GetAccumulatorListData(long AccumulatorListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListData();
            inValue.AccumulatorListID = AccumulatorListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAccumulatorListData(inValue);
            return retVal.AccumulatorList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAccumulatorListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListData request) {
            return base.Channel.GetAccumulatorListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListDataResponse> GetAccumulatorListDataAsync(long AccumulatorListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorListData();
            inValue.AccumulatorListID = AccumulatorListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAccumulatorListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetBenefitCategory3ListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListData request) {
            return base.Channel.GetBenefitCategory3ListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory3List GetBenefitCategory3ListData(long BenefitCategory3ListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListData();
            inValue.BenefitCategory3ListID = BenefitCategory3ListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetBenefitCategory3ListData(inValue);
            return retVal.BenefitCategory3List;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetBenefitCategory3ListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListData request) {
            return base.Channel.GetBenefitCategory3ListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListDataResponse> GetBenefitCategory3ListDataAsync(long BenefitCategory3ListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory3ListData();
            inValue.BenefitCategory3ListID = BenefitCategory3ListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetBenefitCategory3ListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetLTIDListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListData request) {
            return base.Channel.GetLTIDListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.LTIDList GetLTIDListData(long LTIDListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListData();
            inValue.LTIDListID = LTIDListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetLTIDListData(inValue);
            return retVal.LTIDList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetLTIDListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListData request) {
            return base.Channel.GetLTIDListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListDataResponse> GetLTIDListDataAsync(long LTIDListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIDListData();
            inValue.LTIDListID = LTIDListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetLTIDListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCoinsuranceData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceData request) {
            return base.Channel.GetCoinsuranceData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Coinsurance GetCoinsuranceData(long CoinsuranceID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceData();
            inValue.CoinsuranceID = CoinsuranceID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCoinsuranceData(inValue);
            return retVal.Coinsurance;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCoinsuranceDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceData request) {
            return base.Channel.GetCoinsuranceDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceDataResponse> GetCoinsuranceDataAsync(long CoinsuranceID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceData();
            inValue.CoinsuranceID = CoinsuranceID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCoinsuranceDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetServicesData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesData request) {
            return base.Channel.GetServicesData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Services GetServicesData(long ServicesID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesData();
            inValue.ServicesID = ServicesID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetServicesData(inValue);
            return retVal.Services;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetServicesDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesData request) {
            return base.Channel.GetServicesDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesDataResponse> GetServicesDataAsync(long ServicesID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetServicesData();
            inValue.ServicesID = ServicesID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetServicesDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMessagesData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesData request) {
            return base.Channel.GetMessagesData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Messages GetMessagesData(long MessagesID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesData();
            inValue.MessagesID = MessagesID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMessagesData(inValue);
            return retVal.Messages;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMessagesDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesData request) {
            return base.Channel.GetMessagesDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesDataResponse> GetMessagesDataAsync(long MessagesID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMessagesData();
            inValue.MessagesID = MessagesID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMessagesDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCopayData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayData request) {
            return base.Channel.GetCopayData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Copay GetCopayData(long CopayID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayData();
            inValue.CopayID = CopayID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCopayData(inValue);
            return retVal.Copay;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCopayDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayData request) {
            return base.Channel.GetCopayDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayDataResponse> GetCopayDataAsync(long CopayID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayData();
            inValue.CopayID = CopayID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCopayDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetLTSEListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListData request) {
            return base.Channel.GetLTSEListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.LTSEList GetLTSEListData(long LTSEListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListData();
            inValue.LTSEListID = LTSEListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetLTSEListData(inValue);
            return retVal.LTSEList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetLTSEListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListData request) {
            return base.Channel.GetLTSEListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListDataResponse> GetLTSEListDataAsync(long LTSEListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTSEListData();
            inValue.LTSEListID = LTSEListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetLTSEListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetSERLMessageListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListData request) {
            return base.Channel.GetSERLMessageListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.SERLMessageList GetSERLMessageListData(long SERLMessageListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListData();
            inValue.SERLMessageListID = SERLMessageListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetSERLMessageListData(inValue);
            return retVal.SERLMessageList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetSERLMessageListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListData request) {
            return base.Channel.GetSERLMessageListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListDataResponse> GetSERLMessageListDataAsync(long SERLMessageListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetSERLMessageListData();
            inValue.SERLMessageListID = SERLMessageListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetSERLMessageListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCopayTypeListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListData request) {
            return base.Channel.GetCopayTypeListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.CopayTypeList GetCopayTypeListData(long CopayTypeListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListData();
            inValue.CopayTypeListID = CopayTypeListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCopayTypeListData(inValue);
            return retVal.CopayTypeList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCopayTypeListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListData request) {
            return base.Channel.GetCopayTypeListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListDataResponse> GetCopayTypeListDataAsync(long CopayTypeListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeListData();
            inValue.CopayTypeListID = CopayTypeListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCopayTypeListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAllowedCounterListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListData request) {
            return base.Channel.GetAllowedCounterListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.AllowedCounterList GetAllowedCounterListData(long AllowedCounterListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListData();
            inValue.AllowedCounterListID = AllowedCounterListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAllowedCounterListData(inValue);
            return retVal.AllowedCounterList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAllowedCounterListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListData request) {
            return base.Channel.GetAllowedCounterListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListDataResponse> GetAllowedCounterListDataAsync(long AllowedCounterListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedCounterListData();
            inValue.AllowedCounterListID = AllowedCounterListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAllowedCounterListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateAssociationData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationData request) {
            return base.Channel.GetMandateAssociationData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateAssociation GetMandateAssociationData(long MandateAssociationID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationData();
            inValue.MandateAssociationID = MandateAssociationID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateAssociationData(inValue);
            return retVal.MandateAssociation;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateAssociationDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationData request) {
            return base.Channel.GetMandateAssociationDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationDataResponse> GetMandateAssociationDataAsync(long MandateAssociationID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationData();
            inValue.MandateAssociationID = MandateAssociationID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateAssociationDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAccumulatorsData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsData request) {
            return base.Channel.GetAccumulatorsData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Accumulators GetAccumulatorsData(long AccumulatorsID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsData();
            inValue.AccumulatorsID = AccumulatorsID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAccumulatorsData(inValue);
            return retVal.Accumulators;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAccumulatorsDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsData request) {
            return base.Channel.GetAccumulatorsDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsDataResponse> GetAccumulatorsDataAsync(long AccumulatorsID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAccumulatorsData();
            inValue.AccumulatorsID = AccumulatorsID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAccumulatorsDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetBenefitCategory1ListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListData request) {
            return base.Channel.GetBenefitCategory1ListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory1List GetBenefitCategory1ListData(long BenefitCategory1ListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListData();
            inValue.BenefitCategory1ListID = BenefitCategory1ListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetBenefitCategory1ListData(inValue);
            return retVal.BenefitCategory1List;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetBenefitCategory1ListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListData request) {
            return base.Channel.GetBenefitCategory1ListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListDataResponse> GetBenefitCategory1ListDataAsync(long BenefitCategory1ListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1ListData();
            inValue.BenefitCategory1ListID = BenefitCategory1ListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetBenefitCategory1ListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDsResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAllMasterListIDs(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDs request) {
            return base.Channel.GetAllMasterListIDs(request);
        }
        
        public long[] GetAllMasterListIDs(string Name, string VersionNumber) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDs inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDs();
            inValue.Name = Name;
            inValue.VersionNumber = VersionNumber;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDsResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAllMasterListIDs(inValue);
            return retVal.Instance;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDsResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAllMasterListIDsAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDs request) {
            return base.Channel.GetAllMasterListIDsAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDsResponse> GetAllMasterListIDsAsync(string Name, string VersionNumber) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDs inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllMasterListIDs();
            inValue.Name = Name;
            inValue.VersionNumber = VersionNumber;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAllMasterListIDsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPDVCRulesData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesData request) {
            return base.Channel.GetPDVCRulesData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PDVCRules GetPDVCRulesData(long PDVCRulesID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesData();
            inValue.PDVCRulesID = PDVCRulesID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPDVCRulesData(inValue);
            return retVal.PDVCRules;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPDVCRulesDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesData request) {
            return base.Channel.GetPDVCRulesDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesDataResponse> GetPDVCRulesDataAsync(long PDVCRulesID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDVCRulesData();
            inValue.PDVCRulesID = PDVCRulesID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPDVCRulesDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterListResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMasterList(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterList request) {
            return base.Channel.GetMasterList(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MasterList GetMasterList(long MasterListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterList inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterList();
            inValue.MasterListID = MasterListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterListResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMasterList(inValue);
            return retVal.MasterList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterListResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMasterListAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterList request) {
            return base.Channel.GetMasterListAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterListResponse> GetMasterListAsync(long MasterListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterList inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMasterList();
            inValue.MasterListID = MasterListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMasterListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetDeductibleData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleData request) {
            return base.Channel.GetDeductibleData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Deductible GetDeductibleData(long DeductibleID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleData();
            inValue.DeductibleID = DeductibleID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetDeductibleData(inValue);
            return retVal.Deductible;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetDeductibleDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleData request) {
            return base.Channel.GetDeductibleDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleDataResponse> GetDeductibleDataAsync(long DeductibleID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetDeductibleData();
            inValue.DeductibleID = DeductibleID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetDeductibleDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1DataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetBenefitCategory1Data(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1Data request) {
            return base.Channel.GetBenefitCategory1Data(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory1 GetBenefitCategory1Data(long BenefitCategory1ID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1Data inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1Data();
            inValue.BenefitCategory1ID = BenefitCategory1ID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1DataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetBenefitCategory1Data(inValue);
            return retVal.BenefitCategory1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1DataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetBenefitCategory1DataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1Data request) {
            return base.Channel.GetBenefitCategory1DataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1DataResponse> GetBenefitCategory1DataAsync(long BenefitCategory1ID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1Data inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory1Data();
            inValue.BenefitCategory1ID = BenefitCategory1ID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetBenefitCategory1DataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetDisallowedMessageListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListData request) {
            return base.Channel.GetDisallowedMessageListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.DisallowedMessageList GetDisallowedMessageListData(long DisallowedMessageListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListData();
            inValue.DisallowedMessageListID = DisallowedMessageListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetDisallowedMessageListData(inValue);
            return retVal.DisallowedMessageList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetDisallowedMessageListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListData request) {
            return base.Channel.GetDisallowedMessageListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListDataResponse> GetDisallowedMessageListDataAsync(long DisallowedMessageListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetDisallowedMessageListData();
            inValue.DisallowedMessageListID = DisallowedMessageListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetDisallowedMessageListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPDBCPrefixListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListData request) {
            return base.Channel.GetPDBCPrefixListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PDBCPrefixList GetPDBCPrefixListData(long PDBCPrefixListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListData();
            inValue.PDBCPrefixListID = PDBCPrefixListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPDBCPrefixListData(inValue);
            return retVal.PDBCPrefixList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPDBCPrefixListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListData request) {
            return base.Channel.GetPDBCPrefixListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListDataResponse> GetPDBCPrefixListDataAsync(long PDBCPrefixListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixListData();
            inValue.PDBCPrefixListID = PDBCPrefixListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPDBCPrefixListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAllowedAmountListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListData request) {
            return base.Channel.GetAllowedAmountListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.AllowedAmountList GetAllowedAmountListData(long AllowedAmountListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListData();
            inValue.AllowedAmountListID = AllowedAmountListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAllowedAmountListData(inValue);
            return retVal.AllowedAmountList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAllowedAmountListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListData request) {
            return base.Channel.GetAllowedAmountListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListDataResponse> GetAllowedAmountListDataAsync(long AllowedAmountListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountListData();
            inValue.AllowedAmountListID = AllowedAmountListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAllowedAmountListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2DataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetBenefitCategory2Data(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2Data request) {
            return base.Channel.GetBenefitCategory2Data(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory2 GetBenefitCategory2Data(long BenefitCategory2ID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2Data inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2Data();
            inValue.BenefitCategory2ID = BenefitCategory2ID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2DataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetBenefitCategory2Data(inValue);
            return retVal.BenefitCategory2;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2DataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetBenefitCategory2DataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2Data request) {
            return base.Channel.GetBenefitCategory2DataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2DataResponse> GetBenefitCategory2DataAsync(long BenefitCategory2ID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2Data inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2Data();
            inValue.BenefitCategory2ID = BenefitCategory2ID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetBenefitCategory2DataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetServiceListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListData request) {
            return base.Channel.GetServiceListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.ServiceList GetServiceListData(long ServiceListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListData();
            inValue.ServiceListID = ServiceListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetServiceListData(inValue);
            return retVal.ServiceList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetServiceListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListData request) {
            return base.Channel.GetServiceListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListDataResponse> GetServiceListDataAsync(long ServiceListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetServiceListData();
            inValue.ServiceListID = ServiceListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetServiceListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetLTIPListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListData request) {
            return base.Channel.GetLTIPListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.LTIPList GetLTIPListData(long LTIPListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListData();
            inValue.LTIPListID = LTIPListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetLTIPListData(inValue);
            return retVal.LTIPList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetLTIPListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListData request) {
            return base.Channel.GetLTIPListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListDataResponse> GetLTIPListDataAsync(long LTIPListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTIPListData();
            inValue.LTIPListID = LTIPListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetLTIPListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateAssociationListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListData request) {
            return base.Channel.GetMandateAssociationListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateAssociationList GetMandateAssociationListData(long MandateAssociationListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListData();
            inValue.MandateAssociationListID = MandateAssociationListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateAssociationListData(inValue);
            return retVal.MandateAssociationList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateAssociationListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListData request) {
            return base.Channel.GetMandateAssociationListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListDataResponse> GetMandateAssociationListDataAsync(long MandateAssociationListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateAssociationListData();
            inValue.MandateAssociationListID = MandateAssociationListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateAssociationListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPDBCTypeData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeData request) {
            return base.Channel.GetPDBCTypeData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PDBCType GetPDBCTypeData(long PDBCTypeID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeData();
            inValue.PDBCTypeID = PDBCTypeID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPDBCTypeData(inValue);
            return retVal.PDBCType;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPDBCTypeDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeData request) {
            return base.Channel.GetPDBCTypeDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeDataResponse> GetPDBCTypeDataAsync(long PDBCTypeID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCTypeData();
            inValue.PDBCTypeID = PDBCTypeID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPDBCTypeDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateSummaryListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListData request) {
            return base.Channel.GetMandateSummaryListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateSummaryList GetMandateSummaryListData(long MandateSummaryListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListData();
            inValue.MandateSummaryListID = MandateSummaryListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateSummaryListData(inValue);
            return retVal.MandateSummaryList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateSummaryListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListData request) {
            return base.Channel.GetMandateSummaryListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListDataResponse> GetMandateSummaryListDataAsync(long MandateSummaryListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSummaryListData();
            inValue.MandateSummaryListID = MandateSummaryListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateSummaryListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetErouterRateTypesData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesData request) {
            return base.Channel.GetErouterRateTypesData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.ErouterRateTypes GetErouterRateTypesData(long ErouterRateTypesID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesData();
            inValue.ErouterRateTypesID = ErouterRateTypesID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetErouterRateTypesData(inValue);
            return retVal.ErouterRateTypes;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetErouterRateTypesDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesData request) {
            return base.Channel.GetErouterRateTypesDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesDataResponse> GetErouterRateTypesDataAsync(long ErouterRateTypesID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetErouterRateTypesData();
            inValue.ErouterRateTypesID = ErouterRateTypesID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetErouterRateTypesDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPDBCPrefixData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixData request) {
            return base.Channel.GetPDBCPrefixData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PDBCPrefix GetPDBCPrefixData(long PDBCPrefixID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixData();
            inValue.PDBCPrefixID = PDBCPrefixID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPDBCPrefixData(inValue);
            return retVal.PDBCPrefix;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPDBCPrefixDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixData request) {
            return base.Channel.GetPDBCPrefixDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixDataResponse> GetPDBCPrefixDataAsync(long PDBCPrefixID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPDBCPrefixData();
            inValue.PDBCPrefixID = PDBCPrefixID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPDBCPrefixDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCoinsuranceListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListData request) {
            return base.Channel.GetCoinsuranceListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.CoinsuranceList GetCoinsuranceListData(long CoinsuranceListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListData();
            inValue.CoinsuranceListID = CoinsuranceListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCoinsuranceListData(inValue);
            return retVal.CoinsuranceList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCoinsuranceListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListData request) {
            return base.Channel.GetCoinsuranceListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListDataResponse> GetCoinsuranceListDataAsync(long CoinsuranceListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCoinsuranceListData();
            inValue.CoinsuranceListID = CoinsuranceListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCoinsuranceListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPlaceofServiceListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListData request) {
            return base.Channel.GetPlaceofServiceListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PlaceofServiceList GetPlaceofServiceListData(long PlaceofServiceListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListData();
            inValue.PlaceofServiceListID = PlaceofServiceListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPlaceofServiceListData(inValue);
            return retVal.PlaceofServiceList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPlaceofServiceListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListData request) {
            return base.Channel.GetPlaceofServiceListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListDataResponse> GetPlaceofServiceListDataAsync(long PlaceofServiceListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceListData();
            inValue.PlaceofServiceListID = PlaceofServiceListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPlaceofServiceListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.SaveMasterListResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.SaveMasterList(tmg.equinox.integration.domain.services.MasterListServiceReference.SaveMasterList request) {
            return base.Channel.SaveMasterList(request);
        }
        
        public void SaveMasterList(ref tmg.equinox.integration.domain.services.MasterListServiceReference.MasterList MasterList) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.SaveMasterList inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.SaveMasterList();
            inValue.MasterList = MasterList;
            tmg.equinox.integration.domain.services.MasterListServiceReference.SaveMasterListResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).SaveMasterList(inValue);
            MasterList = retVal.MasterList;
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.SaveMasterListResponse> SaveMasterListAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.SaveMasterList request) {
            return base.Channel.SaveMasterListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetRateTypeData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeData request) {
            return base.Channel.GetRateTypeData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.RateType GetRateTypeData(long RateTypeID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeData();
            inValue.RateTypeID = RateTypeID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetRateTypeData(inValue);
            return retVal.RateType;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetRateTypeDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeData request) {
            return base.Channel.GetRateTypeDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeDataResponse> GetRateTypeDataAsync(long RateTypeID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetRateTypeData();
            inValue.RateTypeID = RateTypeID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetRateTypeDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetLTPRListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListData request) {
            return base.Channel.GetLTPRListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.LTPRList GetLTPRListData(long LTPRListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListData();
            inValue.LTPRListID = LTPRListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetLTPRListData(inValue);
            return retVal.LTPRList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetLTPRListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListData request) {
            return base.Channel.GetLTPRListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListDataResponse> GetLTPRListDataAsync(long LTPRListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetLTPRListData();
            inValue.LTPRListID = LTPRListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetLTPRListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCopayTypeData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeData request) {
            return base.Channel.GetCopayTypeData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.CopayType GetCopayTypeData(long CopayTypeID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeData();
            inValue.CopayTypeID = CopayTypeID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCopayTypeData(inValue);
            return retVal.CopayType;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetCopayTypeDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeData request) {
            return base.Channel.GetCopayTypeDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeDataResponse> GetCopayTypeDataAsync(long CopayTypeID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetCopayTypeData();
            inValue.CopayTypeID = CopayTypeID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetCopayTypeDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateSegmentListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListData request) {
            return base.Channel.GetMandateSegmentListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.MandateSegmentList GetMandateSegmentListData(long MandateSegmentListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListData();
            inValue.MandateSegmentListID = MandateSegmentListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateSegmentListData(inValue);
            return retVal.MandateSegmentList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetMandateSegmentListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListData request) {
            return base.Channel.GetMandateSegmentListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListDataResponse> GetMandateSegmentListDataAsync(long MandateSegmentListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetMandateSegmentListData();
            inValue.MandateSegmentListID = MandateSegmentListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetMandateSegmentListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetLimitsData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsData request) {
            return base.Channel.GetLimitsData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.Limits GetLimitsData(long LimitsID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsData();
            inValue.LimitsID = LimitsID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetLimitsData(inValue);
            return retVal.Limits;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetLimitsDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsData request) {
            return base.Channel.GetLimitsDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsDataResponse> GetLimitsDataAsync(long LimitsID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetLimitsData();
            inValue.LimitsID = LimitsID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetLimitsDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPlaceofServiceData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceData request) {
            return base.Channel.GetPlaceofServiceData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.PlaceofService GetPlaceofServiceData(long PlaceofServiceID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceData();
            inValue.PlaceofServiceID = PlaceofServiceID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPlaceofServiceData(inValue);
            return retVal.PlaceofService;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetPlaceofServiceDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceData request) {
            return base.Channel.GetPlaceofServiceDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceDataResponse> GetPlaceofServiceDataAsync(long PlaceofServiceID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetPlaceofServiceData();
            inValue.PlaceofServiceID = PlaceofServiceID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetPlaceofServiceDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAllowedAmountData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountData request) {
            return base.Channel.GetAllowedAmountData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.AllowedAmount GetAllowedAmountData(long AllowedAmountID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountData();
            inValue.AllowedAmountID = AllowedAmountID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAllowedAmountData(inValue);
            return retVal.AllowedAmount;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetAllowedAmountDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountData request) {
            return base.Channel.GetAllowedAmountDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountDataResponse> GetAllowedAmountDataAsync(long AllowedAmountID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetAllowedAmountData();
            inValue.AllowedAmountID = AllowedAmountID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetAllowedAmountDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetBenefitCategory2ListData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListData request) {
            return base.Channel.GetBenefitCategory2ListData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.BenefitCategory2List GetBenefitCategory2ListData(long BenefitCategory2ListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListData();
            inValue.BenefitCategory2ListID = BenefitCategory2ListID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetBenefitCategory2ListData(inValue);
            return retVal.BenefitCategory2List;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetBenefitCategory2ListDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListData request) {
            return base.Channel.GetBenefitCategory2ListDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListDataResponse> GetBenefitCategory2ListDataAsync(long BenefitCategory2ListID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetBenefitCategory2ListData();
            inValue.BenefitCategory2ListID = BenefitCategory2ListID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetBenefitCategory2ListDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxDataResponse tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetOutofPocketMaxData(tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxData request) {
            return base.Channel.GetOutofPocketMaxData(request);
        }
        
        public tmg.equinox.integration.domain.services.MasterListServiceReference.OutofPocketMax GetOutofPocketMaxData(long OutofPocketMaxID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxData();
            inValue.OutofPocketMaxID = OutofPocketMaxID;
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxDataResponse retVal = ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetOutofPocketMaxData(inValue);
            return retVal.OutofPocketMax;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxDataResponse> tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService.GetOutofPocketMaxDataAsync(tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxData request) {
            return base.Channel.GetOutofPocketMaxDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxDataResponse> GetOutofPocketMaxDataAsync(long OutofPocketMaxID) {
            tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxData inValue = new tmg.equinox.integration.domain.services.MasterListServiceReference.GetOutofPocketMaxData();
            inValue.OutofPocketMaxID = OutofPocketMaxID;
            return ((tmg.equinox.integration.domain.services.MasterListServiceReference.MasterListService)(this)).GetOutofPocketMaxDataAsync(inValue);
        }
    }
}
