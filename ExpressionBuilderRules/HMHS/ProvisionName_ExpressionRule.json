{
  "documentrule": {
    "targetelement": "CommercialMedicalAnchor[ProductRules.ProductWideProvisions.SelectProvisions]",
    "ruleconditions": {
      "sources": [
        {
          "sourcename": "A",
          "sourceelement": "CommercialMedicalAnchor[ProductRules.ProductWideProvisions.AllowableProvisions]"
        },
        {
          "sourcename": "B",
          "sourceelement": "CommercialMedicalAnchor[ProductRules.ProductWideProvisions.SelectProvisions]"
        }
      ],
      "sourcemergelist": {
        "sourcemergeactions": [
          {
            "sourcemergetype": "script",
            "sourcemergeexpression": "SETDEFAULTROW(target, \"{'ProvisionNameSERVICEPROVISION':'','ProvisionTextOptions':''}\");IF(COUNT(b)==0){SET(b, CREATETOKEN(\"{'ProvisionNameSERVICEPROVISION':'','ProvisionTextOptions':''}\"));}SET(ProvisionTextOptions,\"{'ProvisionTextOptions':''}\");SET(ProvisionTextOptions,CREATETOKEN(ProvisionTextOptions));SET(services, FILTERLIST(a, \"Select=[Yes]\", \"\", \"\", \"Select,ProvisionNameSERVICEPROVISION\"));SET(sourceOnly, EXCEPT(services, b, \"ProvisionNameSERVICEPROVISION\"));SET(sourceOnly, CROSSJOIN(sourceOnly, ProvisionTextOptions));SET(common, INTERSECT(b,services, \"ProvisionNameSERVICEPROVISION\"));SET(result,UNION(common,sourceOnly,\"ProvisionNameSERVICEPROVISION\"));SETARRAY(target,result); "
          }
        ]
      }
    }
  }
}