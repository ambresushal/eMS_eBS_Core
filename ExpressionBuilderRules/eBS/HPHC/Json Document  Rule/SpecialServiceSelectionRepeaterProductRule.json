{
	"documentrule": {
		"targetelement": "CommercialMedicalAnchor[ProductRules.SpecialServiceSelectionRepeater]",
		"ruletype": "datasource",
		"targetelementtype": "field",
		"ruleconditions": {
			"sources": [
				{
				"sourcename": "A",
				"sourceelement": "StandardServices[SpecialServiceDetails.SpecialServiceGroupDetailRulesList]",
				"sourceelementtype": "repeater",
				"filter": {
					"filterlist": [],
					"filtermergetype": "none",
					"filtermergeexpression": "",
					"keycolumns": ""
					}
				},
				{
				"sourcename": "B",
				"sourceelement": "CommercialMedicalAnchor[ProductRules.SpecialServiceSelectionRepeater]",
				"sourceelementtype": "repeater",
				"filter": {
					"filterlist": [],
					"filtermergetype": "none",
					"filtermergeexpression": "",
					"keycolumns": ""
					}
				},
				{
				"sourcename": "C",
				"sourceelement": "CommercialMedicalAnchor[ProductRules.PlanInformation.ServiceGroup]",
				"sourceelementtype": "repeater",
				"filter": {
					"filterlist": [],
					"filtermergetype": "none",
					"filtermergeexpression": "",
					"keycolumns": ""
					}
				}
			],
			"sourcemergelist": 
			{
				"outputcolumns": {
					"columns": "",
					"children": ""
				},
				"sourcemergeactions": [{
					"sourcemergetype": "script",
					"keycolumns": "",
					"sourcemergeexpression": "SET(selectedServiceGroup, c);IF(EQUALS(selectedServiceGroup, \"\") < > TRUE()){SET(SpecialServiceGroupDetailList, a); SET(targetResult, b); SET(BenefitCategory1Blank, FILTERLIST(targetResult, \"BenefitCategory1=[]\", \"\", \"\", \"\")); SET(BenefitCategory1BlankCount, COUNT(BenefitCategory1Blank)); SET(targetResultCount, COUNT(targetResult)); SET(ServiceGroupCodition, \"ServiceGroup=[<0>]\"); SET(ServiceGroupCodition, REPLACE(ServiceGroupCodition, \"<0>\", selectedServiceGroup)); IF(EQUALS(targetResultCount, BenefitCategory1BlankCount)==TRUE()){SET(SepcialServiceList, FILTERLIST(SpecialServiceGroupDetailList, ServiceGroupCodition, \"\", \"\", \"BenefitCategory1\")); IF(COUNT(SepcialServiceList) > 0){SET(ResultTOAdd, EXCEPT(SepcialServiceList, targetResult, \"BenefitCategory1\")); IF(COUNT(targetResult) > 0){SET(Resulttokeep, INTERSECT(targetResult, SepcialServiceList, \"BenefitCategory1\"));}ELSE{SET(Resulttokeep, SepcialServiceList);}SET(BenefitCategoryUnion, UNION(Resulttokeep, ResultTOAdd, \"BenefitCategory1\")); SETARRAY(target, BenefitCategoryUnion);}ELSE{SETARRAY(target, \"[{'BenefitCategory1':'','BenefitCategory3':''}]\");}}ELSE{SET(SepcialServiceList, FILTERLIST(SpecialServiceGroupDetailList, ServiceGroupCodition, \"\", \"\", \"BenefitCategory1,BenefitCategory3\")); IF(COUNT(SepcialServiceList) > 0){SET(ResultTOAdd, EXCEPT(SepcialServiceList, targetResult, \"BenefitCategory1\")); SET(ResultTOAdd, FILTERLIST(ResultTOAdd, \"\", \"\", \"\", \"BenefitCategory1\")); SET(ResultTOAddMerge, \"{'BenefitCategory3':''}\"); SET(ResultTOAddMergeprop, CREATETOKEN(ResultTOAddMerge)); SET(ResultTOAdd, CROSSJOIN(ResultTOAdd, ResultTOAddMergeprop)); IF(COUNT(targetResult) > 0){SET(Resulttokeep, INTERSECT(targetResult, SepcialServiceList, \"BenefitCategory1\"));}ELSE{SET(Resulttokeep, SepcialServiceList);}SET(BenefitCategoryUnion, UNION(Resulttokeep, ResultTOAdd, \"BenefitCategory1\")); SET(BenefitCategory3List, FILTERLIST(SepcialServiceList, \"\", \"\", \"\", \"\")); SET(BenefitCategory3List, UNION(BenefitCategory3List, BenefitCategory3List, \"BenefitCategory3\")); SET(targetBenefitCategory1List, FILTERLIST(targetResult, \"\", \"\", \"\", \"\")); SET(targetBenefitCategory1Count, COUNT(targetBenefitCategory1List)); SET(targetBenefitCategory1Counter, 0); SET(BC3List, \"\"); WHILE(targetBenefitCategory1Counter < targetBenefitCategory1Count){SET(BC3List, \"\"); SET(targetbenefitrow, FILTERLIST(targetBenefitCategory1List, targetBenefitCategory1Counter, \"\", \"\", \"\")); SET(BenefitCategory1prop, GETVAL(targetbenefitrow, \"BenefitCategory1\")); SET(BenefitCategory3Counter, 0); SET(benCat1Condation, \"BenefitCategory1=[<0>]\"); SET(benCat1Condation, REPLACE(benCat1Condation, \"<0>\", BenefitCategory1prop)); SET(benefitcategory3FilterList, FILTERLIST(BenefitCategory3List, benCat1Condation, \"\", \"\", \"\")); SET(BenefitCategory3ListCount, COUNT(BenefitCategory3List)); WHILE(BenefitCategory3Counter < BenefitCategory3ListCount){SET(benefitcategory3listrow, FILTERLIST(benefitcategory3FilterList, BenefitCategory3Counter, \"\", \"\", \"\")); SET(source, GETVAL(benefitcategory3listrow, \"BenefitCategory3\")); SET(targetcat, GETVAL(targetbenefitrow, \"BenefitCategory3\")); IF(EQUALS(source, \"\")==TRUE()){SET(source, \"Blank\");}IF(CONTAINS(targetcat, source)==TRUE()){IF(CONTAINS(BC3List, source) < > TRUE()){IF(EQUALS(BC3List, \"\")==TRUE()){SET(BC3List, source);}ELSE{SET(BC3List, APPEND(BC3List, \",\")); SET(BC3List, APPEND(BC3List, source));}}}SET(BenefitCategory3Counter, BenefitCategory3Counter + 1);}SET(BenefitCategory3Token, \"{'BenefitCategory3':'<0>'}\"); SET(BenefitCategory3Token, REPLACE(BenefitCategory3Token, \"<0>\", BC3List)); SET(BenefitCategory1Condition, \"BenefitCategory1=[<0>]\"); SET(BenefitCategory1Condition, REPLACE(BenefitCategory1Condition, \"<0>\", BenefitCategory1prop)); SET(BenefitCategoryUnion, UPDATEARRAY(BenefitCategoryUnion, BenefitCategory1Condition, BenefitCategory3Token)); SET(targetBenefitCategory1Counter, targetBenefitCategory1Counter + 1);}SET(finalRecord, BenefitCategoryUnion);SET(finalRecord, CROSSJOIN(finalRecord, ResultTOAddMergeprop)); SETARRAY(target, finalRecord);}ELSE{SETARRAY(target, \"[{'BenefitCategory1':'','BenefitCategory3':''}]\");}}}ELSE{SETARRAY(target, \"[]\");}",
					"mappings": {
						"sourcefields": "",	
						"targetfields": ""
					}
				}]
			}
		}
	}
}